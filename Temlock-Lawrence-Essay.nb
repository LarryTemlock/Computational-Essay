(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    335319,       6243]
NotebookOptionsPosition[    307682,       5742]
NotebookOutlinePosition[    324429,       6087]
CellTagsIndexPosition[    324204,       6077]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Improving Time Series Model Fit With Variance Modeling", "Title",
 CellChangeTimes->{{3.700774153171832*^9, 3.700774159196458*^9}, {
  3.716902403353675*^9, 3.716902404538095*^9}, {3.739202821524928*^9, 
  3.739202831626007*^9}, {3.7392059988158083`*^9, 3.7392060151070127`*^9}, {
  3.739213405722088*^9, 3.739213441933914*^9}, {3.7392237279075537`*^9, 
  3.739223728360717*^9}, {3.7392243809864197`*^9, 
  3.739224383526113*^9}},ExpressionUUID->"755e0098-9782-4df5-8299-\
7f54266c54d6"],

Cell["\<\
Adding a dynamic equation for conditional variance can improve model fit \
\>", "Abstract",
 CellChangeTimes->{{3.700774172671139*^9, 3.700774220850109*^9}, {
   3.700778895632181*^9, 3.700778896308676*^9}, {3.716902409622859*^9, 
   3.7169024154226503`*^9}, 3.7354828213821573`*^9, {3.73548464781948*^9, 
   3.735484648712131*^9}, {3.735587270504136*^9, 3.735587272381384*^9}, {
   3.739202848818432*^9, 3.739202900448455*^9}, {3.739205826713746*^9, 
   3.739205935117339*^9}, {3.739206028944009*^9, 
   3.739206032591591*^9}},ExpressionUUID->"db4efd27-b72d-4835-a486-\
b18956bba0cb"],

Cell["Lawrence Temlock, June 28,  2018", "AuthorInfo",
 CellChangeTimes->{{3.7360942820567207`*^9, 3.736094285334813*^9}, {
  3.736098860672957*^9, 3.7360988944763517`*^9}, {3.7360990983398457`*^9, 
  3.736099107824772*^9}, {3.736099251923992*^9, 3.7360993016054573`*^9}, {
  3.7368685297868023`*^9, 3.736868530751481*^9}, {3.736868726576907*^9, 
  3.7368687285334053`*^9}, {3.7368690514137907`*^9, 3.736869059546919*^9}, {
  3.736869099634509*^9, 3.73686915397053*^9}, {3.7392029052003202`*^9, 
  3.739202911408133*^9}, {3.739225420411625*^9, 
  3.739225420896241*^9}},ExpressionUUID->"59a63784-4e95-46b9-9a1d-\
2c013f47161b"],

Cell["", "Text",ExpressionUUID->"85271f44-5b04-421c-bf31-0395fab10c35"],

Cell["", "Text",
 CellChangeTimes->{{3.700774312865305*^9, 3.700774350341485*^9}, 
   3.716902427754265*^9, 3.7354828504054613`*^9, {3.735483653472313*^9, 
   3.735483683917967*^9}, {3.7354849519274273`*^9, 3.735484958639419*^9}, {
   3.7355873998710403`*^9, 3.73558761257386*^9}, {3.736099062603284*^9, 
   3.736099062938388*^9}, 3.738588402126446*^9, {3.738588473865753*^9, 
   3.738588479696198*^9}, {3.738588515044569*^9, 3.738588515882841*^9}, {
   3.739202979757785*^9, 
   3.739202979766378*^9}},ExpressionUUID->"99ddfba3-f2e4-48aa-a886-\
7472bbc581ac"],

Cell["\<\
A financial time series can be serially uncorrelated or have minor lower \
order serial correlations, but it can still be a dependent series.  As a \
result, discrete state - continuous time models such as autoregressive (AR), \
moving average (MA), ARMA and other model tools can underperform as \
analytical tools.   \
\>", "Text",
 CellChangeTimes->{{3.700774312865305*^9, 3.700774350341485*^9}, 
   3.716902427754265*^9, 3.7354828504054613`*^9, {3.735483653472313*^9, 
   3.735483683917967*^9}, {3.7354849519274273`*^9, 3.735484958639419*^9}, {
   3.7355873998710403`*^9, 3.73558761257386*^9}, {3.736099062603284*^9, 
   3.736099062938388*^9}, 3.738588402126446*^9, {3.738588473865753*^9, 
   3.738588479696198*^9}, {3.738588515044569*^9, 3.738588515882841*^9}, {
   3.739202979867745*^9, 3.739203051347723*^9}, {3.73920308416292*^9, 
   3.739203256685341*^9}, {3.739203407978223*^9, 3.739203439258135*^9}, {
   3.739203752622387*^9, 3.739203836462171*^9}, {3.7392038822118797`*^9, 
   3.739204122661744*^9}, {3.739204183603569*^9, 3.73920430788439*^9}, {
   3.739204342887054*^9, 3.739204397278446*^9}, {3.7392044289885073`*^9, 
   3.73920444620749*^9}, {3.739204815491983*^9, 3.739204890632792*^9}, {
   3.739205283454932*^9, 3.739205318925581*^9}, {3.739205628255683*^9, 
   3.739205651396247*^9}, {3.7392078748943787`*^9, 3.7392079431107073`*^9}, {
   3.739209420775235*^9, 3.739209440574253*^9}, {3.739213466017581*^9, 
   3.739213491070188*^9}, {3.7392229817814302`*^9, 
   3.7392229876917953`*^9}},ExpressionUUID->"2149a7f0-68d3-4a35-a4b2-\
2e9888a4f184"],

Cell["\<\
To improve model performance, it is possible to model conditional variance of \
the time series. In these cases, adding a dynamic equation with white noise \
to govern the time evolution of the return variance can improve the model\
\[CloseCurlyQuote]s fit, and explain the series\[CloseCurlyQuote] \
dependencies beyond correlations.\
\>", "Text",
 CellChangeTimes->{{3.700774312865305*^9, 3.700774350341485*^9}, 
   3.716902427754265*^9, 3.7354828504054613`*^9, {3.735483653472313*^9, 
   3.735483683917967*^9}, {3.7354849519274273`*^9, 3.735484958639419*^9}, {
   3.7355873998710403`*^9, 3.73558761257386*^9}, {3.736099062603284*^9, 
   3.736099062938388*^9}, 3.738588402126446*^9, {3.738588473865753*^9, 
   3.738588479696198*^9}, {3.738588515044569*^9, 3.738588515882841*^9}, {
   3.739202979867745*^9, 3.739203051347723*^9}, {3.73920308416292*^9, 
   3.739203256685341*^9}, {3.739203407978223*^9, 3.739203439258135*^9}, {
   3.739203752622387*^9, 3.739203836462171*^9}, {3.7392038822118797`*^9, 
   3.739204122661744*^9}, {3.739204183603569*^9, 3.73920430788439*^9}, {
   3.739204342887054*^9, 3.739204397278446*^9}, {3.7392044289885073`*^9, 
   3.73920444620749*^9}, {3.739204815491983*^9, 3.739204890632792*^9}, {
   3.739205283454932*^9, 3.739205318925581*^9}, {3.739205628255683*^9, 
   3.739205651396247*^9}, {3.7392078748943787`*^9, 3.7392079431107073`*^9}, {
   3.739209420775235*^9, 3.739209440574253*^9}, {3.739213466017581*^9, 
   3.7392134953242893`*^9}, {3.739222999907804*^9, 3.7392230595777607`*^9}, {
   3.739234567031095*^9, 3.739234575293634*^9}, {3.7392833743662453`*^9, 
   3.739283374966723*^9}},ExpressionUUID->"3b1b8ed3-3849-4d32-afec-\
102954aa6b6c"],

Cell["\<\
This essay simply highlights the financial time series dependence phenomenon, \
with examples, and proposes there can be benefits in non-financial scientific \
research to test time series data sets for dependency, and construct \
appropriate models.  Not only in financial time series but in various other \
time series, a model incorporating conditional variance may seek to capture \
variance clusters, stochastic jumps, large price movement leverage effects, \
logarithmically-scaled evolution, and fat-tailed distributions.  \
\>", "Text",
 CellChangeTimes->{{3.700774312865305*^9, 3.700774350341485*^9}, 
   3.716902427754265*^9, 3.7354828504054613`*^9, {3.735483653472313*^9, 
   3.735483683917967*^9}, {3.7354849519274273`*^9, 3.735484958639419*^9}, {
   3.7355873998710403`*^9, 3.73558761257386*^9}, {3.736099062603284*^9, 
   3.736099062938388*^9}, 3.738588402126446*^9, {3.738588473865753*^9, 
   3.738588479696198*^9}, {3.738588515044569*^9, 3.738588515882841*^9}, {
   3.739205791853867*^9, 3.7392058172423563`*^9}, {3.7392079673638287`*^9, 
   3.739207978659566*^9}, {3.7392092181503973`*^9, 3.739209303731654*^9}, {
   3.739209397233261*^9, 3.7392094142788343`*^9}, {3.739209447518862*^9, 
   3.739209461373506*^9}, {3.7392135224161263`*^9, 3.739213585345399*^9}, {
   3.739223067537313*^9, 3.739223139317835*^9}, {3.739224403871058*^9, 
   3.739224448133573*^9}, {3.739228967541154*^9, 3.739228975565687*^9}, {
   3.739234588617062*^9, 
   3.739234783691656*^9}},ExpressionUUID->"ba3b571d-1b30-4366-aa69-\
f73405de460f"],

Cell[CellGroupData[{

Cell["The problem: Serially dependent asset returns ", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739206076187717*^9, 3.7392060833073263`*^9}, {
   3.739206279345971*^9, 3.739206309120606*^9}, {3.73920655942878*^9, 
   3.739206562260858*^9}, {3.739207220563867*^9, 
   3.73920722920214*^9}},ExpressionUUID->"35feb7e4-4e93-4e64-abc0-\
7b0b86e8128f"],

Cell["\<\
Returns of financial assets may show weak or no correlations in their time \
series, but may still be conditionally dependent on their past values.   To \
identify and measure this, we can apply the Ljung-Box test for \
autocorrelation to the residuals series, or alternatively apply the Lagrange \
multiplier test of Engle.   \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739206397998611*^9, 
   3.73920651255858*^9}, {3.739206569044722*^9, 3.7392067912940807`*^9}, {
   3.739206830519586*^9, 3.739206898377775*^9}, {3.739206934520834*^9, 
   3.739207061658433*^9}, {3.739207094942279*^9, 3.7392070980211*^9}, {
   3.73920713014456*^9, 3.7392072020037937`*^9}, {3.7392072427076406`*^9, 
   3.7392072488333817`*^9}, {3.739210774261917*^9, 3.73921084480057*^9}, {
   3.739213619026243*^9, 3.739213632552841*^9}, {3.739218308673396*^9, 
   3.739218309591415*^9}, {3.739224470696733*^9, 3.739224499828017*^9}, {
   3.739228451115294*^9, 3.739228470705264*^9}, {3.7392285165034227`*^9, 
   3.739228799035469*^9}, {3.739228895482943*^9, 3.73922890738813*^9}, {
   3.739229030427001*^9, 3.73922911796367*^9}, {3.7392291602146072`*^9, 
   3.739229701586123*^9}, {3.739234058867283*^9, 3.739234122621976*^9}, 
   3.7392341580928917`*^9, {3.739234301837146*^9, 3.7392343214308033`*^9}, {
   3.73923440885598*^9, 3.739234408859086*^9}, {3.739234451150031*^9, 
   3.739234451153058*^9}, {3.739234504026702*^9, 3.739234530304283*^9}, {
   3.7392893720399218`*^9, 
   3.739289373102559*^9}},ExpressionUUID->"54979bee-8014-437f-b843-\
317ed34294a5"],

Cell["\<\
\[LineSeparator]Consider the time series returns of IBM stock, and the S&P \
500, and their descriptive statistics:\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.73920757927238*^9, 
   3.73920759887035*^9}, {3.73920772658597*^9, 3.739207728941493*^9}, {
   3.739208053406534*^9, 3.739208070994266*^9}, {3.739208992125799*^9, 
   3.7392090043574247`*^9}, 3.739210829344473*^9, 3.7392149363254137`*^9, {
   3.739283363526423*^9, 
   3.739283363959804*^9}},ExpressionUUID->"38015270-5af6-4978-ab8d-\
62350f1c5c1b"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739285896836583*^9, 3.739285903764819*^9}},
 CellLabel->
  "In[1844]:=",ExpressionUUID->"ba887418-cd59-4dbb-b847-8ebf9010bc2c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
   "Plot", " ", "IBM", " ", "and", " ", "SP", " ", "500", " ", "returns"}], 
   "  ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"IBM$fData", "   ", "=", " ", 
     RowBox[{"FinancialData", "[", 
      RowBox[{"\"\<IBM\>\"", ",", "\"\<Return\>\"", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2018", ",", "2", ",", "20"}], "}"}]}], "}"}], ",", 
       "\"\<Value\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IBM$returns", " ", "=", " ", 
     RowBox[{"TimeSeries", "[", 
      RowBox[{"IBM$fData", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "Automatic", ",", 
         "\"\<BusinessDay\>\""}], "}"}], ",", 
       RowBox[{"HolidayCalendar", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<UnitedStates\>\"", ",", "\"\<NYSE\>\""}], "}"}]}], ",", 
       RowBox[{"TemporalRegularity", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"len$IBM", " ", "=", " ", 
     RowBox[{"Length", "[", "IBM$fData", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"IBM$level", " ", "=", " ", 
     RowBox[{"2", "/", 
      RowBox[{"(", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"IBM$returns", "[", "\"\<PathLength\>\"", "]"}], "]"}], 
       ")"}]}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"IBM$Sq$level", " ", "=", " ", 
     RowBox[{"2", "/", 
      RowBox[{"IBM$returns", "[", "\"\<PathLength\>\"", "]"}]}]}], 
    ";"}]}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.711983381063016*^9, 3.711983425996087*^9}, {
   3.7119840260222006`*^9, 3.7119840443269053`*^9}, {3.71198433303335*^9, 
   3.7119843393212285`*^9}, {3.7119843712528315`*^9, 
   3.7119843966660323`*^9}, {3.7119844378878827`*^9, 3.7119844380282445`*^9}, 
   3.711985046301587*^9, {3.711986266736471*^9, 3.711986296799488*^9}, {
   3.7119866462373753`*^9, 3.711986656517479*^9}, {3.71199959434373*^9, 
   3.711999594911216*^9}, {3.7119996410147505`*^9, 3.7119996583902082`*^9}, {
   3.711999697717176*^9, 3.711999737274357*^9}, {3.712316970114114*^9, 
   3.7123169910650873`*^9}, {3.728312460424258*^9, 3.7283124697269335`*^9}, {
   3.739278033622246*^9, 3.7392780579656067`*^9}, {3.739278310520742*^9, 
   3.739278318794998*^9}, {3.739281036037203*^9, 3.739281066288228*^9}, {
   3.7392822077678757`*^9, 3.739282233702198*^9}, {3.739282548651873*^9, 
   3.739282550227214*^9}, {3.739283205702023*^9, 3.739283236907337*^9}, 
   3.7392859037661467`*^9, {3.73928675502244*^9, 3.739286789304702*^9}, {
   3.739288790979259*^9, 3.7392888405511713`*^9}, {3.739289993193668*^9, 
   3.7392899950408278`*^9}, {3.739290027901911*^9, 3.739290033036503*^9}},
 CellTags->{
  "FinancialData", "Return", "Value", "Today", "BusinessDay", 
   "HolidayCalendar"},
 CellLabel->
  "In[1845]:=",ExpressionUUID->"47b74f5c-70b9-4926-a06e-4c38e3cd61b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SP$fData", "   ", "=", " ", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<^SPX\>\"", ",", "\"\<Return\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2018", ",", "2", ",", "20"}], "}"}]}], "}"}], ",", 
     "\"\<Value\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SP$returns", " ", "=", " ", 
   RowBox[{"TimeSeries", "[", 
    RowBox[{"SP$fData", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2011", ",", "1", ",", "1"}], "}"}], ",", "Automatic", ",", 
       "\"\<BusinessDay\>\""}], "}"}], ",", 
     RowBox[{"HolidayCalendar", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<UnitedStates\>\"", ",", "\"\<NYSE\>\""}], "}"}]}], ",", 
     RowBox[{"TemporalRegularity", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"len$SP", " ", "=", " ", 
   RowBox[{"Length", "[", "SP$fData", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SP$level", " ", "=", " ", 
   RowBox[{"2", "/", 
    RowBox[{"(", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"SP$returns", "[", "\"\<PathLength\>\"", "]"}], "]"}], 
     ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SP$Sq$level", " ", "=", " ", 
   RowBox[{"2", "/", 
    RowBox[{"SP$returns", "[", "\"\<PathLength\>\"", "]"}]}]}], 
  ";"}]}], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.711983381063016*^9, 3.711983425996087*^9}, {
   3.7119840260222006`*^9, 3.7119840443269053`*^9}, {3.71198433303335*^9, 
   3.7119843393212285`*^9}, {3.7119843712528315`*^9, 
   3.7119843966660323`*^9}, {3.7119844378878827`*^9, 3.7119844380282445`*^9}, 
   3.711985046301587*^9, {3.711986266736471*^9, 3.711986296799488*^9}, {
   3.7119866462373753`*^9, 3.711986656517479*^9}, {3.71199959434373*^9, 
   3.711999594911216*^9}, {3.7119996410147505`*^9, 3.7119996583902082`*^9}, {
   3.711999697717176*^9, 3.711999737274357*^9}, {3.712316970114114*^9, 
   3.7123169910650873`*^9}, {3.728312460424258*^9, 3.7283124697269335`*^9}, {
   3.739278033622246*^9, 3.7392780579656067`*^9}, {3.739278310520742*^9, 
   3.739278318794998*^9}, {3.739281036037203*^9, 3.739281066288228*^9}, {
   3.7392822077678757`*^9, 3.739282244477878*^9}, {3.739282301626981*^9, 
   3.739282302219631*^9}, {3.7392823387427197`*^9, 3.7392823428859463`*^9}, {
   3.739282554421465*^9, 3.7392825549317493`*^9}, {3.739283214516958*^9, 
   3.7392832425309677`*^9}, 3.7392859037672243`*^9, {3.739286772482089*^9, 
   3.739286790817595*^9}, {3.7392888473852673`*^9, 3.739288860936521*^9}},
 CellTags->{
  "FinancialData", "Return", "Value", "Today", "BusinessDay", 
   "HolidayCalendar"},
 CellLabel->
  "In[1850]:=",ExpressionUUID->"453d869b-e594-4e1b-8ada-1ffa29d72020"],

Cell[BoxData[
 RowBox[{"TabView", "[", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DateListPlot", "[", 
     RowBox[{"IBM$returns", ",", 
      RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"DateListPlot", "[", 
     RowBox[{"SP$returns", ",", 
      RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "]"}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739282459199815*^9, 3.739282527180602*^9}, {
   3.739282586822299*^9, 3.739282588481945*^9}, 3.7392859037683563`*^9},
 CellLabel->
  "In[1855]:=",ExpressionUUID->"e64a13bd-71ec-40a0-8650-b56319e85ac2"]
}, Closed]],

Cell[BoxData[
 TabViewBox[{{1,"1"->
  GraphicsBox[{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVnXk4lF/Y+B/SptK0R4spWmRpiooWRrImDVLJNqFIxSTRpp4WJGRabJVM
RSg0adFuiELUJF+JltGihTJatEnvue9z/a739/ZP1+e6n5k5zzn3ubezGOcb
4rJKlWGYHr0ZBv6Hf6GaHy2Z/tL9W+46WxDkHSfMjlH8dfQWFRMW3gX5VHVf
/rpokIuVIB/nt2DCmDCQy7S0iHx0o9X4gUJgQRqwud5lyS8/YPYOYVYv+d4L
p1j4vPQTyIMSClPKvEGuGDEKfk/fecg8FuSc+YSZ5C7fyuINwPKPwE6/gnqN
OwnMDBtN+KdGWeNEW2yvBfDW6Q8C4n2wvWuAjTarrp1+DOTKd8DGQebFpjHA
3MFjCGf7Nc1x9Mf2zgXmV5jJ1k8GObuaMP/9xnDPMzEgl4rHQPuvRT3oOAhy
/sCx5PmP9V3Sq3uARWbAIz994fdbAc9L/ICX5Dl5DlmG7U8Avtsnbm1cALb/
KnBdwYJPW8OwP2dqE5780WyWJ7ZPJiTMfumyDliwC75PuR/l525eerYWmHsZ
eLtKlV/nMmz/S+CEPp8P7gzB/vTiEnaz/Bo7GPufsw+YG1Xepb8O218ILB+v
kaCxCdv/DLjzaKHhp/XAkl7jCC/IOfbl60Hsz/PARSHWY3yjgcVPga9MvHvZ
IBjb22M84Tdt2/lzsT+UhsCfSip1pmH/snmE+d9UMnpM2Yf9WQ9y/6YPNza5
wvMKRofIR0wMU5+dhOOvT5jxixcfO7cXnue7EWav+9yO64eflz8GvrWj7cWI
A9if3YRlBWZdnJRk1IfJuuT7GirPT7mcgu130YX3CTKque6P/b0deH+4zU2z
rdiff+D5c4cNxww5gP05YQL5/q7fxb9Xnsb2LybMqC7LU0nZifq7BeQK14vP
r+B8UJwG+esZriP24viJxk8kzOnSHSMRYn86Au9zsO2sw/6RhwOH/pm3kBeE
7T8J7GzxL9U3Dtt/nzBrlJDVbxOdX/aTiHzZfK1uPdq/G4G/qBVNGRWK+nwC
2No+tz02CNtfAex1fK+57g7U5y/AEkOjRW3aqA8bJhOWPrxh3u6O/XsMWFy4
fNBvY2x/OfAL25wnv2n724ENVXImhOL8lmvqEVaO6FX6ywr7NxV43uH9v7Zv
QP0oBXbe+l5fjPNX1gbssfle1rYt2P7hU0CfX7bkVWL7uJbA0f674tNx/kiL
gSvzTp/KwfdRfCDMnjMvvzYS7RFnqD4Z73yP0TVK1Be+uT60L1rv34X1IGfe
Ac/MHKffB+cXb5AB4fw1/9qf4ngJ5wD7j3j/9oof6sMq4L09up9NdcX+TiTM
nhzjGPF0N8gFGoZgT0ZNODQO34c1JSx75zrgXfZ+bK8vYf6rpzmOn2KxvfHw
fPUV9yfS7ajPRcAVs0eu9VmC/TnDiPDAs3YGKqhPch/CrPb8uw2TNmH79xOW
uRvXpSeIsf2XQP7fxqLvSXHY3y/g8yH3Z5gnbEH74DmVyKe/tfrzGvWDGzMV
7FmX8s7AWagPF5Cff1tU74jtbwKe8uWz9hmcn9KePMJP1kyZ8QLnN38vcH+t
1kkOOB6iAuCtGlYegWhvJA3AOVf9+9SjPZKrTiNcNpYf5emD+mxImO2zraNr
2y4c//8I8yOjhm+5EY/t/QfPjw3eUT4mAOfflOmEDz8yqsrC9xEsAXZ4anX3
nhf2Zy3wMKdFe1bgfOX8BdZb/KLcSoTjP8kY5kOBRUxbIOqvM3ColldlBtoP
yTZg1qnGSYMDzPsNbPZt3JeGCNQHXRPSviUadSZLqX1zMgH9SPELmbwS278Z
2FB7r8wO9Ud5CrjFb3n7G7Sn7LgZhPf0nsepjET7sBD4DE+ik071dxPw1lXV
20pWoT5IgJtutEhf4/vyqwizH28vnXw6EfXBbibhWT9mxRgnYH9uJMw4biu7
F7sG9SEd2Oj6n1HzN2P77wH/Lhj2uwH9k7gDeK/qyIevUP8FR2cR3hTR3PPE
fmxvGWF2Tmr+WfftOP6fQc6oel+4OQDt2UhTwvGzDL4HoP8RpRBmL93/dZ4J
x/4sATmPuX8qyB3b2wrMKTWMaeWj/g43I6xzu6tHNc5vHh/4VMbxuQuW4/y6
TVhoLl4ZrZKP/fke5Lziln58/D3ukNngb2Z/HtC8Dds/D3jJjKz9D5dj+wOA
b/A5s7xZ1IcW4NDWR3x9tD98zhzCaeYeblLa/tnAO7Y+kLui/Zf4AwuVJlt7
Tcf2HwC+VOz08O5mnF8D5oJ9iWjMT0F/IJ5FmFl6vEdyB7VnKwlf0Jh/nNsv
C/U5DuS9v3zW/Yj6zr1CmKff8vhL5UnsX5N5pP9OeZuv74fxiMKbsNjz6u/a
WTnY/liQq4/dkbHqKOrzRWA34cUIDbQ/oufAf7j/ueuloz54mhPWyjCtLkL9
5kWbg/3em83vXIr6ICUs8buycMmTM9j+RsK8dwe9BDnoz2RqFuTzQ1wH212l
9m0PYdkabsHR6RhfsfkW4L9t4yeuQf8qfQLPGx0/WvQH9UWhwiccd+O6jhr6
W44BH/R535SoQWiPJWeBlX2jDzYvQPtQB7zlbMD7yHWoH/8I84uq9XNrd2P7
9SzJ7xelZd/TOYL970qYWdfLeFM7zkduF3Bt0Y96e/SPgonzCY/6tcRmFtpb
VkBYYXSuoG+/VOzvrSAfPlSr+cxW7M9fwKumLdm6Gf2PSMeKtL951UrByxRs
7yIrsI91FbYbcf7IIwjL6r5P2rsJmTkF8orS53V7HXB+cRdA+5Zn/XyA/Sdz
ICyr3LBl7qc9qA9hIL/Ynx+pfhTbnwGc0pCyMhL1R1AJz7OD85ZYZaA+2FoT
9td98ePuIezPUMJMZlZaNbsI9fk4YfbrYT/peaoPd4GzVn5edhjfV6IEzozP
HLmL9meIDeGKZUYqOqiPwjTCTOnXE7XX92H77xCW5dRaOPU6ju3/BHL+2OmF
iSE4H0fYks+HiByzi7F/2GTg3jvbp93D+SSV2YI9/pU3qhrtj+Ij8JfKHQce
YjzIGWZHng/1rq91O4L9b0GY26hR0GqQhPpwizD/l41xqybOH+Y9Ydn0/xJN
7fH7eYPtyfelTn4memaP+jCXsKy+Mv3hojRs/2qQC7NHZnauxfn2ljA/5ZTm
wHlR6D8GOhD5vz0Wo+ywv1gzwrLWIX29U1JRn/1Avv3S1lmrafsTCPPPW6/3
eYjzXdR/IdGnhk3fB0w7hP07kzAbmRHR2hPtsVwIrP0199AjHC8mjjDzlTNi
51iM13iXga0ym8Jz0P7KjB1BfyfeensT42ulF2FuGr+9btUx1I99II+6MPL2
F2yPoBB4ywlLxS6cX+wzYKHhlU9/dNFeeCwi3F7zL+0Y2ld+FGG235R120Zj
viI6vwjjr1GX923E9j8FvmkyI//4Kuz/Hk7EPswafk61ks633YSZodbzmi84
ob3II6zQ3duP+Y3vL6sHuc/oXe7b8f24+osJDyjyrKhAeyTNJcz20Hp3OJ7a
h8eEZVdP3DH7fRr1oRuef2gTGUDjZ/5kAWGDlotBei6ozy7AuhekT2h8yDwi
zPrNrLeORX/L+wPyF81748XUX09wJvL3k4btHITxl3ixM/i30JaZTeg/ZVtA
7vX9zPYBaB8EP4E99b+8/YrxFTvehfDT3ddV+tL4zZEwk3wqs+IDxheKcMLc
nusLdD1QXzknQX7f8kXy8mDsT21XGN9T/v09UJ/k9oS5E38d4R/IQH0OA3np
NO7IG9RfnwCOaj6qGon2VFgBXLFOdeNNzLe5G5aQ9mwsEhfMx/YJjgGvez1l
sxDnK1sO7P/Css4R30faTpgZcSKq5zf056JUN8Lld57lXMb4WFLqBvl5WLv5
ehx/eRthflhJ34l7UD+YEUuJnJubznXG3xMnLYV4PHqAsxXmA7JiYNXF700f
haO+fgAW3/J434z2jTt0GeHntfln9+3E9poDx3idsDHZiOP9Dtjiw2Fzd9Rn
/qDlhP+rURn/KhD1cw5hSeCBeZnSM2h/V4G8aUnH+auoH7w3hFmTzxmBPaOw
vzTcibz7V2fKYGdsrylwhDKnrCe+r8wX+BqziHFajfY3Hjiw0japHT/P9ltB
+H2OaldPS9TXGcCyAGmLySic/z6E2R+NxnmGETje+4FvZr1sSET9418Cnnl9
p8tyjC/k0z1g/EoSVu5djfrqBTyydIddjhe2PwZY/vi/joNO2P4LwP1+x1SN
Qf0RNwHnqVwJ703Hf4Un9NeqL+2qK7E/9wIzpQfPhuli+wuAwzIHVwRgvCtt
AG5r3PfhF+ZnClUviJ8qQwyXoH2QnAO22b9pohvGO/L/CLMvruZqlhzG9jLe
8P7bVBxe2mF7pwA3FAq7B9D8JweYYz1anOuL419LmBW27ol4hvEq9y/INebs
7JuD7RFM8iHM3Vd0fz/6W9aZMKvWa/llDcxHOHLCskn9nWrcsZ7A/w3Pe26N
1zbCeFikKyTPZ9Qq1bg4XhInIcT/48aWHsXvl28G5kkaz/TB/EL4A55/ENy8
zDUe/cG4lWAvX2u8e4P5sGwh8Kt/Rycdp/nmJmD2zJyGkL7Y3xLg9/1/GnIw
n5GO9SWcZb6keEEkzn874Lzl30uyMP7nbAS2771jlirNN9KB2anffsb2RX2+
R5jdERfe8zHqC2PjB/5gSNEKK8xveCJg9lHl81Wof8KjwM2hU329cL6Iy4Ab
ssfGvEH9kX3G56e8/DGS9u96f8KKIrd15eOxf1MIc61sBn56Jsb2l4D831Nz
3kD8PUUrcKtuXOQ4tPeSI6tI/2+J2tl3GNo7+e1V0J/ffrDmmI8yH4DnNjnY
XaT1hyGrCWfzbF6OR3sjnAcs8Pq8stEM59eN1VCfmv15zxuMD7gthHn5Ht5f
OadQfzkBEC+Hx2isXIP2djawWCm3OjgP9dcfuCgtUDga/Qn/NXBBoePmTZgv
iwYEEt42tMDWFv2rZBZhNi91RL7pXtSHlSBfXKp7fhfaFyYemP/3UoefG/an
+hrCH6dNjZlO9cEEWDgp3PcdxvtKb2DHS6WHddF+cGMJ899l1hjNxXhTcBHk
69/s6qD5gGJaEPn9YTeOvo5D/8bxJMyEh03yXrIE2x8NXGFatj8L31ckBd6s
dGyzwXqfpBE+f9Ld8tJxGt+4ryXy3DYfw2Cspwj3AM99WTJyNeaT4nzgPWkt
359jPCd7Qlhm5Pp1fg3G+0qVdeT7bqwcoszG+cWywGvv3x24Ge299Ow6mA97
mJLxWA9R1AGLyrpj+tP44R9wdNy9tgv4/Xy99eTz1wq0g8uo/tYS5u9Zmioe
S/OLLsKyqruHR+th+4UTg8nzYW4HZ9ti/CAWEGbO/Bq/bhXN5x8Cu7R+WJiP
7yP4RZjftzv2dhvGb6xOCNizn/W3Gay/SBcB95Gqvo7E+EgRAZy6a96oo1jv
EHUSZvunrHl8kdoHrojIE4Sm2jE7UJ8dCLNJWzpNZ6Kc2QR8vSLsQDfGn7wM
eP7u52n/cqm/GLMB5tOnCpkI629KW+Bvoj7ql+2w/aGEhX2H39Epw/hMcBzk
P7tFrlYrsP13gVcN/DL3DvoDjnUo+b3Uon/nXLH/+SGEmbg9wz4EoP8UpQG/
Pzg49Dfmq5I78HxW4uVuT4zv5J9ALom+4dWB81G4biPoq3a22Q0+6kMycFX1
EbtSrCcoPxLmzp7yac5y7H/usDDyffU9LXqewPGUHias+Hh0RVcgxm+KW2Gg
D38etMzA/J3znjBfNXTHlGaMB/iDN5Hx3dY4rHIJ1ptEczfBeA6t93+O8RBz
Azi0u+q/BWj/eW8Js41u9ppncDyFA8NJf93qYR1lh/Ge2Iww32vWe6kjxtMy
P8KyDU+lLvNQfwSvCDM7N5r96YP2ie0fAfGHZLXrU8w/pDOBV8zLvlGK8ZJC
CPzTYErDHVw/4MQBX3Lu5T8N6wGSvpsJL/uc2zIJ9V1uTJjV36RccRXHm/EG
+beV/JTT6H95+zZDfTjiYUsw5qvCQpCbpvG3PcB6tJK3hbDJoFfrR6N94XoA
51Sen+/Hw/ZHAUscnHaMovbtPHDu0Oa075jfSZ8C2znHtqqhf+Ev30p47GAr
59PYPtFuYNbAPt5wPrY/Dzjggc27qfh+8nrgb4O7vvzzRn1W2Qaf7+natRg/
L95JmBX49kp+S+1DLshTB91tfo72SfmYML9tX+jrEahv3G6Q+yw9fDIX54dg
8nYirxnxY+h+zJcUZwizHQf8XutRfX60HexFr3uaORif8P8Qltke1r/5ldZT
JkRCfGviftAd4zXJYuDCV49tBmG9UPgTeIHrpN4a6N/F43dAfaPl+QsB9rfM
cQfM/7k9jDdh/KIMBz61KHZmOdbP2O/w/CcdrmoW1tOl2juJfOuA/NiJGM8o
7HeC/dO4/a43xr+cMJB/C/Md/xz9Nf8EcKrSeGM7zlf5aBbis+6QKU7ovxhb
YO11se+ccfx4G4CFhmsPPcH4R3gM2ODWuX6Vi7G/y4F5pzsmbKDrLwt2wfvn
Xku9hfUsQTDwPR2OQRLOfzYVuLKiosIA7bO0FFhV+nj+KczXFG2EWZ3ifRvl
mE+K1u4GfXseHRaF8bEkCVj1nsW/SWif5MUoLysvyJ+P7f8IzOk50XTiYrRv
Q/eAv/E4/O4r6ofsEGF+xy/dq8/o+tFN4PQPnt1eON7cd/C8rLP61ShjbP+g
vYQPLfTWcEL/ys4BXjR1dU8btF+c64RZDfvjEQ4o578hLH8Vw6vQy0V90Igi
+iEZGLFBeRzbbwrsP/te8QPUP7lvFPj32kk1vfH7hM2EJetshhSmYPwi7hcN
8/ki+Yfxu2wG8L6ntpYt6L+VPsDOg7dff0rra/uB//eftE/M/2HFdOAdSbZ9
LmE8yvGKAX25b22fhPENP4awcLhjrpfLYWz/BXielcX+NwjrF8RAgH6ml43M
wPiMt4KwJF1pZcDB9gr3gtxuja7oCtpTcQFw/uYPRbW43iZrAK7YvK6hga6H
LosF+3n4eA0X4x12F2H2iKJxYiLaR+k5kOc1BUT1xvmu+A+46XLNo55ofzjM
foi36zoe5tN4aAew6ZClvYoxPpHnAAtGTfmcivkx8xj4yPrVy02xfiWcFAfx
yk6/6Meo78oswnz+0chBUbTeKge5f7XRDg6NN38D82Pv5RvT9VvdeMI1S5hB
ZpjvSZ2A9wYaKtfj9/FrgI+HufnLsN4n+gFcNzDYvojmy+MSCI/+YWdRjeMv
Xwg8L2PQDgfMb5lw4MbYi4NTafzzDZj5bnqoGteDZWMPQDy5KGeJF/ojpd0B
WC8ePK7nSlqP2Ajy7n+STxKcv4J0kNsM6LP6Oc4/xahEIg/cU2XyFu0fxwb4
sa7T9FjafhFw5qOioX3pesdRwuxbdvZvP7SnkjLgyZEPzqdhvsyzEpPnn3+/
8WUy9o84BXhOZETxLOw/WQlhdoV7lccxHF9lK7CmTqroAK1HBR0kvM1CnclF
/6m4Ddy/69/hGOqfPwDnfrkb8hTflz/kEGHdleVxX2j+efAQjO+kqr3vlqI9
uAl8McFxrifNN1qAU3/oRzZi/CnkHIb4SrNQfA77UzybMP+4aomeDc3nr4H8
SMSVqjU4foLXwDKvr4dOm2N7Bxwh7LTwh1Ucjp90FvDAjD8Gy9HfKVYC3w/Q
i/2G3y9RTyLxSdOBuN2JmN/LTZLAXnFOh6uivWR8gKtWG7PqmD/zYoHF02eI
k/Rw/vROJu/bs8cpi2QcX+W0ZLAfOmdj9+F+Aa4n8IyZI7+O9sX2RgNzTJcd
saX5vhR48suG9OJt2J9TU2A+rRgq1KT5hnsK+Lu2oX2SQnG894C8ceDvx0Ox
vyX5IL8UyBi9oeu1T4D5ouKbLzDeFC5NJc83fNx7OAvXP8UssFKUf3UlD8f/
LPCCu4LzPbB9yjrgkqALVva4nsH9B/wqbPrNFro+lJ1GuCguteUMto9Tmwb1
xsRjlTq0vV3ADiv6D2Mx3xVNPEriu5qnvztmY3zHZBFm0yXz61qw/3kPCTMb
ym5bBmA8J/wFbPN5Y4kXtl+sc4zw2ozzHBovyxYBLy9t0OuB/lZQDSw5eOlW
Mc3nOwmzi5P0li9H/ZVyjxP5D2s1+w1Y31Q4AKf1vl19F+01ZxPw8emVml50
vfArsP/Su09dsZ4gH5MO9qGjsK8Q/T1jR5jvqC4SDET7xgsFee3huO8X6f6T
4yB31dPfuBD9iVLrBJHP/fh3Tx6tn1gDcxNenhiO8YggBPho70HqZzHfZdOA
j1hf8KtciPbrDnDnhH/WzXT9bX4G4V+rRyRvx8+L1gEbP9sWsYLO/2Tg30e1
QwOwf+SyDKhXnIgsOEvXu9dICLf7OjWPQH2RHQb+dWzgu3m0vbeAiz2tExm6
3+A9YX682c3xQRi/CQafBH06yDOeMhf1QYy86nHKYgvUhxvAab+9Q2dS//UW
eFWGVdBdnH+igaegXtq3aJAE6xcSM8KyWT+S7PbT/O0qYcbrzYSPcoyXhK/g
+Y6lnWa76Xpn/9OkPW9Fwd7puL9CNpPwSOcJwbemXcb2CwmzDw03fPTDfIF9
CawtWhR7DPMrad9MiM87VGZrYX1DYQxc3OHY+gn7i+MNPHlbvtUa9G/8fYT5
XZv6ntmF9k/eK4uwbx+OUzBdb5kG/MXs04V1Cdh+D8Js9/L6gwLUf2EU8JgJ
I+QbUX/F5wkzy2bfHuRK/ZnRGdAHjRW++nS9ZTlhdkCZ/qsoah92A/unXXqU
Sv1ZHjzfb9SOj5V0PaAeeGfaaqs+2H8it2yYr/+9blLS/TE7gZe7f1fcxPeV
5wJ7lnUFp+H8ZuqAw/otO1JK9bkb+Grt5PxdNP/cngPxxv1v64tw/ijPEGYT
ey+dTPWb+whYJa84ax0+L/gDzx+Z8KVlG9YH2Qm5hE+P3Ka6m8ZjD4D3qT8a
N9QG9eEn8PyPUYbeWE+RjD9LePEGJ/dZqH9yR+DuFvemxThfhfcJ8xOnLbAc
gPm2+DthSbVOq9l4rNfJtM+B/iX8WBKE+4WU9sBZ2r3UJZivcMMIs1OtQzat
xu+XfgF5TveMcffQfilG50H9eePQwA/4/RxbwuzFHAvlZNRH/gbCzJ9ZpYMS
cTxEx4ClIfbD1HD8GK188vxo869rNqH94S0ALj/xdZYD6ocwOB/800SbABvc
7yNOJcy3X7W1fzr6N1kpYdmwqE2jaD1DYFlAnn978n7JFro/Zi0wx9lk/xT0
f9Ik4Gl960YcQ3+uKCYsHLX+W2cpfj/nI8j7uOi2TViE/Rt4HvzXpvEjGnA9
Q37oPKy/GdzRLcL2MrdA/mRhxuMauh43SArPT1yb8xD9hTKRMD9k0jiJK8aj
3Osgz2c5c5fR9fs3wFUntaQh6M9ZjQuES7WnBanhfi+pKbBr3AfzI1QfioDn
TlGWu+H6magZ+MjO2OdHqP72KyR88NFS3ijUT/kMwvzVV/u198D3IwkxkT9b
+KDQFn9P/AL4VYCveQWtp/W5SN7vYHCPX2PxfZTTCTPR1r7HgnC9g+sFzGbt
z02zxvbHAI+OVNfJxfq6ouclwje7eyVdFGB/8oAdi6K1ram/WwF88k/wJX3s
f9FeYMOrE6KnYf4lKQDmqRoMjvNEfTC8TOKNjTytwAy632sZYaYla33iLdQn
8S7gbMf4l974edk54LrswQGG6L+V/wHf07GeVojzl11yhfDqO1OqemE+Jd1B
mM15u6J9OeZ3ihyQJ60zPsmgfnEeA4/edTTsCcaD/L/A+sF9W2NofL6tCOzF
Q4N+7ljfZc4As0OfNp3E/JQnB97OCRJZoFz4G1hq8GqEO9aDxLpXCY87Zf5e
HeNp7mnCsj21sd/0ab2yBuTp47x4DMYT7A/g6Uv+qidj/i0dd43wX8HnDamY
jygWAo9exZn6F/VT8g34j8ii9zaMh+RjrxNekuS5WI7xHmNPmH1u1xH4Ad+H
txHl/yxlj2j80AHykjBJcjvVh1E3CBfcin26E+tbXJsbEE/+1xZwAtczBCLg
bdP+FrbR+XcUmNNo6/4a9Z2jeRP8zduGLd1UH6wIM98reJOGY74gWg/yNoNB
Ey9iPC5JISwLCo0Y2YD2Sl4Cz9tKR158j98n5N8C/UkoUFfQ9a4g4GnVDhcS
sf4kOwJc2H72wkzUN+VtwoqALz3L7uD3cT8Qlj2/5LiLg+MtDbhNnh9wxqxP
HMZHioPAv+WdbSaob5ybt8E/stLJnthf/BaQ/6x10ab1aRGnmHyfzt2MXny6
HpdIWDHmeMH23RjP8a4Vg72L13G6j/UB4Wt4fsYFXsM2XL8RD5CBP12jtVCO
/SebBdzv7FNRLfV3V4C1uzpjFtH9EQrgiWWK8d+xvitVL/lomZOcO5cVSFEf
TAizw7dFpaRhezk+wA633hifp/37vATiB5+B+f+w/+W9SwmvS09ech3tATO9
FOJDl5kjs9Hf8zxBHmM74Pgr/LwwGrgz+66RHtoTpdodyD++nU3bj/thuFOB
P/78YTGJ6rP7HdjfEuBm5UPXa/fcgfnCb1w4bwy2Px94/ZygvWWY7/INymA/
ypgr03fQevFS4KsBM254o3+RsIQZn0ML3u/B9srPAvNH39swegD2/3/AlwWF
mhswXha7lhO+lHstuyfGl7JI4KFffhzaivNJmQ28Q1U26B3GW9xaYKvQiCxa
3xB0AZ9ZoyM9gf5XsfUu+BvXpiJnHB9OFvDyztYLZjNQPx4Caz9Xb96A9lH0
i7CscGvd8K2J2P869whvf15/OQfjWd4p4FRRclM2xo/CasKMadPkCFpvEncC
zwnLrLGg+uxQQfp379+Z3kOoPlQCX1oVkD8J4w3p1wqIt5ONn5/C/dOKMZWE
DUYu21eI620cO2DnhRsX7UB7wQ8FvrRisasX5ttyJXDj5mRzf/w8M6qK9L8y
zcfNGMeTZ02YOffYYJE/1p+EIcAjLoU8/Yz2SpwGz1+vPqn+CfcTcEfeJ+0z
Hq41bRDGo4L5wMszq35zMT5k1xFmR+yJ378W7Y00+T70d8qbw0Yu2H4ZyAN+
fXHXxfhEZFEN+jNtsISP4yNZQ5jdraql8RD1lbkN8m7fGd+eY77Cew98slqm
F4L5iWx1DeHzgy/pRtL1RDHwlfgfE2yovr4Fdt2dsZ2uR7EDHxAOqtpjOQL3
O3EOEObfaCu8v47uh7kK8stdx65X4PiJXgEPmmyz8wrWIyT9HxJWDko+3kX3
T80kLOwc2J39ldafLoNc/tf5wCE63i+Bx6zP9eiP/l/WVw7+bqV7C31fpTFw
p37e/Geoj1xv4LO9d4e/wnhZ0evRR0up41uPB1USbO80woxuSZDgMOo734Ow
YvHjghYB2kNRFGHWsNnUoR7tIaNWC/Nh+KLHBtQ/GAGnbSsJbMD9pcLlwCsd
dx52wPaIdwMfWBCUGojxiyyPMNds/vmI97jfQqD/mMgV/37Ib81EfXUjzFpH
ZRQnY34r3QlyU4OoVabIilzgSSYnR/NxvYBTB7xEzb/dDftP4lIH+0USR7Sl
0v072wkzydXcgSdwvyiTDfL6ayqjjGh8+Qjkz3pqqNZjfwr/ADc2+q52xPok
N/M/wrdjMidEuGF7HwDHviydu4TWr3/+B/HR94eFS+n8Gl8Pv3dk4Bwaf/FP
AqtlfPqbhfNHdB9Y5VyKIgHtk+Q78LnXNs6f0L/ItZ+A//BTGyC1xP52ABbf
cJ0wDv2juIIwe/60w+fZaJ9lX0C+vF9pQwnWM5WjGwj7m9frvcbx5NoCs2Xl
N9v10V5tAK7+o2sxie7faQfevGHFz/lYn+doPYXPPxVln8f6En8BYX5M5aCa
PWhPRMGE2drmggF0P58kFfj80bs2c+j624hGsBd9da370fqvJbBa8nJpT/R/
4rWE+WqeYofzOL9lSY2wXyFR8fchrfcVA8+aNu+MG8531ryJPG/0M/p0xCnU
h0DCbLXq8Rlr6P7rQ4Rl3+y71c5ifsC5RZi52pG+pgTr6fx3wI8CUlrp/hD5
qmdgD0qnZvvS9UMx8KVkbbEK3c91HVipqqljjPGR8A1wotutdQcwHhRrPIf1
R92PS71Rv7gJwOqDDm5pofuZiwjzFxRvdS+m9quZMLOs+YXxP7pe2+8FYetZ
we57cL4oZryA+sG9kK5BmO+LLoFc4vq+m4PzRfICONRqZvo9tBfyPi8/WgqO
3W/ZnYPzlzF+CfZj+tYfHlQfmoAzpSt+bsT5oOypgHiohd/6DvNJLg/Y0W+K
5jjUV8EK4F9ru08F0vWtvYT548d1mHyj+xN7NEN8HWB69jXNNwyB77kc7JVA
1++XEZYlD1u1Jwvrn5JdhPkzndo7x6C9lJ+D50UeWnkPcb+ZcMor8r57es0M
XIbjLV5CmPFc8CunBf2PbAfw4r6hKQqMX5U5wCaT3Rd4oz3mPgY+mGCiUYf+
Xur8GuS/wlZOofHuttdQH/lp1ysS4yvOGcKy/mufxkejf+HL4fmcr7dneqJ+
iH4DVyx0HtsT/TOz5Q3hsjt37oxCfeWdfgPrb05Oe9LR/ghrQJ6/3CbJBMdH
/AM41SZnSQfux5WNewvxQ9Tg03S/PlsFvNjPZfcTul77DTg+8YvJepyvirEt
hJ3iPPcXY3s49sDL7BemxKN9kdwjzFpOuvZzDMYf8g6Qc9MfVDfjfh5m9Duo
T/n+6e1M64E27yC+zfW/aojrY0IRcNfqCYt8HLA/PxPmDz9QVGlG14c03xO5
29eslHPUv1kBq0V2aU7E+IRdDzzccdoOe4w/pSnA8RKz/Q3of/nDP4D9yL5a
YYD7wUV84AmHzy4dg89LggizT6rNr6+m9ewjIL8p0poWhvaHKQb+Zn9lQQa+
v3jeR/K8s2lFqRvKZQEfQZ8Pvg/ucsT2HwSuXRM17wbGH9ybwAXLGscG4+8J
WoC/PreeXI/5mcK/lXzfifAjYYW4/5WT2Arzqe/lkLV0v9c14KvlqxTu2J+i
18BnXHTyHTBf4MW3QX84TEp8hu0XXgHutH37jo/2WqwA3m10vmQR9W/qn+B9
BPU1UzHfU5p8gv1kH+eMsqLrbReBI09auR3A8ZQ+B7aqHDO7F66XKnp/Jp9v
yCz0noD1Hc50YObX8WbTfthez88Q311b05yA/lzeCPJmvU0uvrSe1rOdcEfo
n9lB+P68qe2QP31I9+pN6xHuIOf6Pd6YQeuZe4DHu+lkDEF946oqyfPzwhOO
CKg9M1BCvPRt8Z1/6A/YpUqwD4+lz1Pp+S4Wnv859azOJ4xXFWfh+eFn/R6a
0v1eeh0Q35fs4AVjvC5xJcwIz3cO7DkB2x9JmC+4M2uwP84PJgee7wzPsn2D
8RyvFp7Xqzu8M4TWIwRfCM91m8q/ZoP6sBW4/m/swTzUH24WcE7S8KoAU2z/
Q2DhgVEja+j+g1/AvPrKHpl0fWjz14//b/0K+/cUsOzPjZbzmL+KqoFn3Ov7
eTnGe5JO4BDfGXZiqs/cb4Q1L6qajMf4W5jxDfZbOrsPO0bjtUqQ7z181nsN
1Y+vwA+OWM5xwnhCOeY7tPfs2bNpeL6CawfcpD7TLJqe71MChx/mncin/nlU
J/n+UZdnXNPE9Q6+dSfEn8M0Jy3D9RVRCLCB/n3Ty7i+xHwGlr9JFj3F+hBv
5A/y+ZD0wbaXqT2b/wP6p+1Pwn3cvyheBxw6v1GtBtczZMnA4Qu9qwrx+wXD
fhLOk6s+OEDjXwtgNn/Qa31ab18DfGb4w6tGdL3gMPBQvouKLubDnNuE2ehP
q7dUoX+VzP1FuMppd+ZRzKflqwkz+8qfH9+J8RNz8BfsJ/zstewQxqO8GyAX
3RSPK6HxxVtglarNrlp0/cXvN8Szh346BwmwPw8QZqU3otIL8TyS4CrIa9+d
mFOK62nsK2Bh84//7Oj6ff8/MH9Dxbkc7G9+HGFJL3OPG33Rn4gu/4H9f3pb
LLgY70heEpb5sJUjqjF/k/ftIp93D7vivQ/1jTEhzPcZOPxqHN2/XAhy2Y3A
Rf9wP4vsGWF24+XW9Cdof5W9/hL5xPgXV6OofZ5GmD399kj9FJwPAg/CfRyn
2DbNKET9eEpYslLLqb0cz59w1LpJe26kb5w9iO73MiLM9DI+ZV6M+69Ey4H5
IaWfjWm8vBtYWPYvfjbqI0/lH2EXa/U1r+l+XH1gu7Zn29TR/ordgLeVVc9d
hP0v2wnM/3r0+Wc8T6jMBRaFXrj2air272Sm1ZJVnRJ32QnfR+pCmAn2mnSv
hdaLtwPPnhgz5gZdT8oG9jT7qvmVzsdHwIt88090oP2SL1YhvKD+/BZ1jKeZ
rYRlg/UFJ5zofrtMkEu1uv+qUP14AJyxYMfiufh58U/g//3HjVBtteRbjNnX
6Ez14yRh5uYZT1Vbau/uA7+0Hifqh+2VfgfOvF1VcgDrkQrtHoSnF6TLneh6
0gng/ieCel5C+yupQLbce8wc9xvJvwCL9piWWmK8wLNVI+w2UqH1mNqHcuA1
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
       "]]}}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{3.5030016*^9, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->
    FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
        (Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, Automatic]& )[
         SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
        (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& , {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
         SlotSequence[1]], {Identity, Identity}]& }}, {{
      Automatic, Automatic}, {{{3.4712928*^9, 
         FormBox["\"2010\"", TraditionalForm], {0.008333333333333333, 0.}}, {
        3.5343648*^9, 
         FormBox["\"2012\"", TraditionalForm], {0.008333333333333333, 0.}}, {
        3.5975232*^9, 
         FormBox["\"2014\"", TraditionalForm], {0.008333333333333333, 0.}}, {
        3.6605952*^9, 
         FormBox["\"2016\"", TraditionalForm], {0.008333333333333333, 0.}}, {
        3.7237536*^9, 
         FormBox["\"2018\"", TraditionalForm], {0.008333333333333333, 0.}}, {
        3.4712928*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5028288*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5343648*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5659872*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5975232*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6290592*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6605952*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6922176*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.7237536*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}}, {{3.4712928*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5343648*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5975232*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6605952*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.7237536*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.4712928*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5028288*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5343648*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5659872*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5975232*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6290592*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6605952*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6922176*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.7237536*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}}}}],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->500,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{3.5030016*^9, 3.7276416*^9}, {-0.08279022158723526, 
    0.08864478018502343}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{{}, Automatic}]}, {2,"2"->
  GraphicsBox[{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1: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
Hq0A+/UsrAyk7+spBvljjf76H3YX/w/KNfeK
       "]]}}, {}, {}, {}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{3.5030016*^9, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->
    FrontEndValueCache[{{Automatic, Automatic}, {Charting`FindScaledTicks[
        (Charting`getDateTicks[Automatic, {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, Automatic]& )[
         SlotSequence[1]], {Identity, Identity}]& , Charting`ScaledFrameTicks[
        (Charting`getDateTicks[Charting`getDateTicks[Automatic, {Automatic}, 
          (Map[DateList, {
            SlotSequence[1]}]& )[
           SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, 
          Automatic]& , {Automatic}, 
         (Map[DateList, {
           SlotSequence[1]}]& )[
          SlotSequence[1]], None, 5, {{0.0125, 0}, {0.0075, 0}}, None]& )[
         SlotSequence[1]], {Identity, Identity}]& }}, {{
      Automatic, Automatic}, {{{3.4712928*^9, 
         FormBox["\"2010\"", TraditionalForm], {0.008333333333333333, 0.}}, {
        3.5343648*^9, 
         FormBox["\"2012\"", TraditionalForm], {0.008333333333333333, 0.}}, {
        3.5975232*^9, 
         FormBox["\"2014\"", TraditionalForm], {0.008333333333333333, 0.}}, {
        3.6605952*^9, 
         FormBox["\"2016\"", TraditionalForm], {0.008333333333333333, 0.}}, {
        3.7237536*^9, 
         FormBox["\"2018\"", TraditionalForm], {0.008333333333333333, 0.}}, {
        3.4712928*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5028288*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5343648*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5659872*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5975232*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6290592*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6605952*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6922176*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.7237536*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}}, {{3.4712928*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5343648*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5975232*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6605952*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.7237536*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.4712928*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5028288*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5343648*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5659872*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.5975232*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6290592*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6605952*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.6922176*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}, {3.7237536*^9, 
         FormBox[
          TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
         0.008333333333333333, 0.}}}}}],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->500,
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{3.5030016*^9, 3.7275552*^9}, {-0.06663446415643826, 
    0.0474068481332115}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{{}, Automatic}]}}, 1]], "Output",
 CellChangeTimes->{{3.739282507452795*^9, 3.739282528319244*^9}, {
  3.73928256700385*^9, 3.739282589587669*^9}, {3.7392832215033617`*^9, 
  3.739283245947886*^9}, {3.739293572047715*^9, 3.739293580440029*^9}},
 CellLabel->
  "Out[1855]=",ExpressionUUID->"fd959aba-e418-4a93-8743-2fa04c7a71fd"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.739274166958446*^9},
 CellLabel->
  "In[1856]:=",ExpressionUUID->"9ebb457c-c836-4a87-ae50-10e62fbdef51"],

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7392147738236*^9, 3.739214780048126*^9}},
 CellLabel->
  "In[1857]:=",ExpressionUUID->"74161d28-06c3-4e60-8243-59ff9c8cb1aa"],

Cell["\<\
\[LineSeparator]The returns have nearly zero mean, are somewhat left-skewed, \
and have fat tails.   \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739206397998611*^9, 
   3.73920651255858*^9}, {3.739206569044722*^9, 3.7392067912940807`*^9}, {
   3.739206830519586*^9, 3.739206898377775*^9}, {3.739206934520834*^9, 
   3.739207061658433*^9}, {3.739207094942279*^9, 3.7392070980211*^9}, {
   3.73920713014456*^9, 3.7392072020037937`*^9}, {3.7392072427076406`*^9, 
   3.7392072488333817`*^9}, {3.739209508754882*^9, 3.739209636910304*^9}, {
   3.7392104141498823`*^9, 3.739210414150116*^9}, 3.739214938941052*^9, 
   3.7392246015705643`*^9, {3.739283356672741*^9, 
   3.739283357783154*^9}},ExpressionUUID->"d360ab0c-d8bf-4a75-95c1-\
aee4d56f856b"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739209117941547*^9, 3.739209132329039*^9}, 
   3.739224603598497*^9},
 CellLabel->
  "In[1858]:=",ExpressionUUID->"b9022b2f-ca60-4e70-ac1e-031812a7e0ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"show", " ", "descriptive", " ", "statistics"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"IBM$logr$sample$mean", " ", "=", " ", 
     RowBox[{"Mean", "[", "IBM$fData", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"IBM$logr$sample$STD", " ", "=", " ", 
     RowBox[{"StandardDeviation", "[", "IBM$fData", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"IBM$logr$sample$skew", " ", "=", " ", 
     RowBox[{"Skewness", "[", "IBM$fData", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"IBM$logr$sample$kurtosis", " ", "=", " ", 
     RowBox[{
      RowBox[{"Kurtosis", "[", "IBM$fData", "]"}], "-", "3"}]}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"SP$logr$sample$mean", " ", "=", " ", 
     RowBox[{"Mean", "[", "SP$fData", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SP$logr$sample$STD", " ", "=", " ", 
     RowBox[{"StandardDeviation", "[", "SP$fData", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SP$logr$sample$skew", " ", "=", " ", 
     RowBox[{"Skewness", "[", "SP$fData", "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SP$logr$sample$kurtosis", " ", "=", " ", 
     RowBox[{
      RowBox[{"Kurtosis", "[", "SP$fData", "]"}], "-", "3"}]}], ";"}], "\n", 
   "\n"}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739126964494145*^9, 3.739126983552413*^9}, {
  3.7391271157338133`*^9, 3.739127223177773*^9}, {3.73913503173024*^9, 
  3.7391350429384947`*^9}, {3.739139943872542*^9, 3.739139991973228*^9}, {
  3.7391400510119143`*^9, 3.739140261413645*^9}, {3.7391671022727833`*^9, 
  3.739167285384851*^9}, {3.739167332321636*^9, 3.7391673686182413`*^9}, {
  3.739167405503435*^9, 3.739167613213366*^9}, {3.739167711923964*^9, 
  3.739167772469591*^9}, {3.7391680101330833`*^9, 3.7391680459237022`*^9}, {
  3.73918600504408*^9, 3.7391861106949053`*^9}, {3.7391926336472893`*^9, 
  3.739192644687058*^9}, {3.739209092216474*^9, 3.739209126282645*^9}, {
  3.739283271909396*^9, 3.7392832904916553`*^9}},
 CellLabel->
  "In[1859]:=",ExpressionUUID->"c6ca937a-716d-4fc7-ac00-17ab40e556aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{"Plot", " ", "histograms"}], "  ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"TableForm", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "IBM$logr$sample$mean", ",", " ", "IBM$logr$sample$STD", ",", " ", 
         "IBM$logr$sample$skew", ",", " ", "IBM$logr$sample$kurtosis"}], 
        "}"}], ",", " ", "\n", "          ", 
       RowBox[{"{", 
        RowBox[{
        "SP$logr$sample$mean", ",", " ", "SP$logr$sample$STD", ",", " ", 
         "SP$logr$sample$skew", ",", " ", "SP$logr$sample$kurtosis"}], 
        "}"}]}], "}"}], ",", " ", "\n", "          ", 
     RowBox[{"TableHeadings", " ", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<IBM\>\"", ",", " ", "\"\<S&P 500\>\""}], "}"}], ",", 
        " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Mean\>\"", ",", " ", "\"\<STD\>\"", ",", " ", "\"\<Skew\>\"", 
          ",", " ", "\"\<Ex. Kurtosis\>\""}], "}"}]}], "}"}]}]}], "]"}], "\n",
    "          "}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739209107386734*^9, 3.73920912628298*^9}, {
   3.739289949649082*^9, 3.739289950725972*^9}, 3.739289984177499*^9},
 CellLabel->
  "In[1867]:=",ExpressionUUID->"44ab4beb-129a-46f4-9716-10b97c452a08"]
}, Closed]],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"Mean\"\>",
       HoldForm], 
      TagBox["\<\"STD\"\>",
       HoldForm], 
      TagBox["\<\"Skew\"\>",
       HoldForm], 
      TagBox["\<\"Ex. Kurtosis\"\>",
       HoldForm]},
     {
      TagBox["\<\"IBM\"\>",
       HoldForm], "0.0002086693023467244`", "0.011986163947697475`", 
      RowBox[{"-", "0.4556439531787917`"}], "6.42765601053984`"},
     {
      TagBox["\<\"S&P 500\"\>",
       HoldForm], "0.0004638524826606626`", "0.009025358742998053`", 
      RowBox[{"-", "0.5080159422775992`"}], "5.3039303958131665`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {{"IBM", "S&P 500"}, {
      "Mean", "STD", "Skew", "Ex. Kurtosis"}}]]]], "Output",
 CellChangeTimes->{
  3.7392148237993917`*^9, 3.739215007211478*^9, 3.739283295083353*^9, {
   3.739293572248395*^9, 3.739293580614957*^9}},
 CellLabel->
  "Out[1867]//TableForm=",ExpressionUUID->"81008e34-ad95-417b-a430-\
a809db97f9fc"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.7392091622267447`*^9, 3.7392091801279097`*^9}, 
   3.7392148400960073`*^9},
 CellLabel->
  "In[1868]:=",ExpressionUUID->"d68c889a-85ee-45fa-99ff-832055ce254e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{"Plot", " ", "histograms"}], "  ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"TabView", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{"IBM$fData", ",", 
        RowBox[{"{", "0.001", "}"}], ",", "PDF", ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Distribution of IBM Stock Monthly Returns\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Histogram", "[", 
       RowBox[{"SP$fData", ",", 
        RowBox[{"{", "0.001", "}"}], ",", "PDF", ",", 
        RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<Distribution of S&P 500 Index Monthly Returns\>\""}]}], "]"}]}],
      "}"}], "]"}], "\n"}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.739167829114612*^9, 3.739167832722456*^9}, {
   3.739167864976303*^9, 3.7391679217798433`*^9}, {3.739168049708921*^9, 
   3.739168056046608*^9}, {3.739168285869031*^9, 3.739168299339408*^9}, {
   3.739168374118428*^9, 3.739168378156356*^9}, 3.7391684230853367`*^9, {
   3.739176583919633*^9, 3.739176596704035*^9}, {3.7391767036360292`*^9, 
   3.739176714680498*^9}, {3.739184948788006*^9, 3.7391849529064217`*^9}, {
   3.739184990372314*^9, 3.739185044482341*^9}, {3.7391851113668127`*^9, 
   3.739185152794701*^9}, 3.73918613812072*^9, {3.739186461080512*^9, 
   3.739186464078103*^9}, {3.739188568741869*^9, 3.739188583394799*^9}, {
   3.739188630670092*^9, 3.739188702736826*^9}, {3.73918875454753*^9, 
   3.739188765703061*^9}, 3.739188830678211*^9, 3.739209175764461*^9, {
   3.739209999150741*^9, 3.739210005356386*^9}, {3.739210718838339*^9, 
   3.739210742387742*^9}, 3.739214840096423*^9, {3.739283314340055*^9, 
   3.739283348856284*^9}, {3.739284260768506*^9, 3.739284275850378*^9}, {
   3.739289938168707*^9, 3.739289944743824*^9}},
 CellLabel->
  "In[1869]:=",ExpressionUUID->"581f5501-71ac-4bcf-a3f4-277891b27335"]
}, Closed]],

Cell[BoxData[
 TabViewBox[{{1,"1"->
  GraphicsBox[{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.20299999999999999`], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.20299999999999999`], Thickness[Small]}], 
      RectangleBox[{-0.083, 0}, {-0.082, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.07200000000000001, 0}, {-0.07100000000000001, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.064, 0}, {-0.063, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.059000000000000004, 0}, {-0.058, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.058, 0}, {-0.057, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.057, 0}, {-0.05600000000000001, 0.5571030640668557},
       RoundingRadius->0], RectangleBox[{-0.05600000000000001, 0}, {-0.05500000000000001, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.05, 0}, {-0.049, 1.1142061281337037},
       RoundingRadius->0], RectangleBox[{-0.049, 0}, {-0.048, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.048, 0}, {-0.047, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.045000000000000005, 0}, {-0.044000000000000004, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.043000000000000003, 0}, {-0.042, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.042, 0}, {-0.041, 1.1142061281337037},
       RoundingRadius->0], RectangleBox[{-0.041, 0}, {-0.04, 1.1142061281337037},
       RoundingRadius->0], RectangleBox[{-0.04, 0}, {-0.03900000000000001, 0.5571030640668557},
       RoundingRadius->0], RectangleBox[{-0.03900000000000001, 0}, {-0.038000000000000006, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.038000000000000006, 0}, {-0.037000000000000005, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.037000000000000005, 0}, {-0.036000000000000004, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.036000000000000004, 0}, {-0.035, 1.6713091922005554},
       RoundingRadius->0], RectangleBox[{-0.035, 0}, {-0.034, 1.1142061281337037},
       RoundingRadius->0], RectangleBox[{-0.033, 0}, {-0.032, 1.1142061281337037},
       RoundingRadius->0], RectangleBox[{-0.032, 0}, {-0.031, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.031, 0}, {-0.030000000000000006, 1.6713091922005672},
       RoundingRadius->0], RectangleBox[{-0.029000000000000005, 0}, {-0.028000000000000004, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.028000000000000004, 0}, {-0.027000000000000003, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.027000000000000003, 0}, {-0.026000000000000002, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{-0.026000000000000002, 0}, {-0.025, 1.1142061281337037},
       RoundingRadius->0], RectangleBox[{-0.025, 0}, {-0.024, 1.6713091922005554},
       RoundingRadius->0], RectangleBox[{-0.024, 0}, {-0.023000000000000007, 4.456824512534846},
       RoundingRadius->0], RectangleBox[{-0.023000000000000007, 0}, {-0.022000000000000006, 2.2284122562674074},
       RoundingRadius->0], RectangleBox[{-0.022000000000000006, 0}, {-0.021000000000000005, 2.7855153203342593},
       RoundingRadius->0], RectangleBox[{-0.021000000000000005, 0}, {-0.020000000000000004, 3.8997214484679628},
       RoundingRadius->0], RectangleBox[{-0.020000000000000004, 0}, {-0.019000000000000003, 3.342618384401111},
       RoundingRadius->0], RectangleBox[{-0.019000000000000003, 0}, {-0.018000000000000002, 6.128133704735371},
       RoundingRadius->0], RectangleBox[{-0.018000000000000002, 0}, {-0.017, 7.242339832869074},
       RoundingRadius->0], RectangleBox[{-0.017, 0}, {-0.016, 6.685236768802222},
       RoundingRadius->0], RectangleBox[{-0.016, 0}, {-0.015, 6.685236768802222},
       RoundingRadius->0], RectangleBox[{-0.015, 0}, {-0.013999999999999999, 9.47075208913648},
       RoundingRadius->0], RectangleBox[{-0.013999999999999999, 0}, {-0.012999999999999998, 11.142061281337037},
       RoundingRadius->0], RectangleBox[{-0.012999999999999998, 0}, {-0.011999999999999997, 15.598885793871851},
       RoundingRadius->0], RectangleBox[{-0.011999999999999997, 0}, {-0.010999999999999996, 16.713091922005557},
       RoundingRadius->0], RectangleBox[{-0.010999999999999996, 0}, {-0.010000000000000009, 16.15598885793893},
       RoundingRadius->0], RectangleBox[{-0.010000000000000009, 0}, {-0.009000000000000008, 21.727019498607223},
       RoundingRadius->0], RectangleBox[{-0.009000000000000008, 0}, {-0.008000000000000007, 18.38440111420611},
       RoundingRadius->0], RectangleBox[{-0.008000000000000007, 0}, {-0.007000000000000006, 32.311977715877404},
       RoundingRadius->0], RectangleBox[{-0.007000000000000006, 0}, {-0.006000000000000005, 32.869080779944255},
       RoundingRadius->0], RectangleBox[{-0.006000000000000005, 0}, {-0.0050000000000000044, 28.412256267409443},
       RoundingRadius->0], RectangleBox[{-0.0050000000000000044, 0}, {-0.0040000000000000036, 37.88300835654592},
       RoundingRadius->0], RectangleBox[{-0.0040000000000000036, 0}, {-0.0030000000000000027, 47.353760445682404},
       RoundingRadius->0], RectangleBox[{-0.0030000000000000027, 0}, {-0.0020000000000000018, 41.78272980501389},
       RoundingRadius->0], RectangleBox[{-0.0020000000000000018, 0}, {-0.0010000000000000009, 48.46796657381611},
       RoundingRadius->0], RectangleBox[{-0.0010000000000000009, 0}, {0., 43.45403899721445},
       RoundingRadius->0], 
      RectangleBox[{0., 0}, {0.0010000000000000009, 44.56824512534815},
       RoundingRadius->0], RectangleBox[{0.0010000000000000009, 0}, {0.0020000000000000018, 44.56824512534815},
       RoundingRadius->0], RectangleBox[{0.0020000000000000018, 0}, {0.0030000000000000027, 39.55431754874648},
       RoundingRadius->0], RectangleBox[{0.0030000000000000027, 0}, {0.0040000000000000036, 50.69637883008352},
       RoundingRadius->0], RectangleBox[{0.0040000000000000036, 0}, {0.0049999999999999906, 37.3259052924796},
       RoundingRadius->0], RectangleBox[{0.0049999999999999906, 0}, {0.0059999999999999915, 35.09749303621167},
       RoundingRadius->0], RectangleBox[{0.0059999999999999915, 0}, {0.006999999999999992, 28.412256267409443},
       RoundingRadius->0], RectangleBox[{0.006999999999999992, 0}, {0.007999999999999993, 29.52646239554315},
       RoundingRadius->0], RectangleBox[{0.007999999999999993, 0}, {0.008999999999999994, 23.955431754874628},
       RoundingRadius->0], RectangleBox[{0.008999999999999994, 0}, {0.009999999999999995, 20.055710306406667},
       RoundingRadius->0], RectangleBox[{0.009999999999999995, 0}, {0.010999999999999996, 25.626740947075184},
       RoundingRadius->0], RectangleBox[{0.010999999999999996, 0}, {0.011999999999999997, 19.498607242339816},
       RoundingRadius->0], RectangleBox[{0.011999999999999997, 0}, {0.012999999999999998, 12.813370473537592},
       RoundingRadius->0], RectangleBox[{0.012999999999999998, 0}, {0.013999999999999999, 12.256267409470741},
       RoundingRadius->0], RectangleBox[{0.013999999999999999, 0}, {0.015, 13.927576601671296},
       RoundingRadius->0], RectangleBox[{0.015, 0}, {0.016, 6.128133704735371},
       RoundingRadius->0], RectangleBox[{0.016, 0}, {0.017, 6.685236768802222},
       RoundingRadius->0], RectangleBox[{0.017, 0}, {0.018000000000000002, 8.356545961002778},
       RoundingRadius->0], RectangleBox[{0.018000000000000002, 0}, {0.019000000000000003, 7.7994428969359255},
       RoundingRadius->0], RectangleBox[{0.019000000000000003, 0}, {0.020000000000000004, 4.456824512534815},
       RoundingRadius->0], RectangleBox[{0.020000000000000004, 0}, {0.021000000000000005, 5.013927576601667},
       RoundingRadius->0], RectangleBox[{0.021000000000000005, 0}, {0.021999999999999992, 6.128133704735456},
       RoundingRadius->0], RectangleBox[{0.021999999999999992, 0}, {0.022999999999999993, 3.342618384401111},
       RoundingRadius->0], RectangleBox[{0.022999999999999993, 0}, {0.023999999999999994, 2.7855153203342593},
       RoundingRadius->0], RectangleBox[{0.023999999999999994, 0}, {0.024999999999999994, 2.7855153203342593},
       RoundingRadius->0], RectangleBox[{0.024999999999999994, 0}, {0.025999999999999995, 3.342618384401111},
       RoundingRadius->0], RectangleBox[{0.025999999999999995, 0}, {0.026999999999999996, 2.2284122562674074},
       RoundingRadius->0], RectangleBox[{0.026999999999999996, 0}, {0.027999999999999997, 2.7855153203342593},
       RoundingRadius->0], RectangleBox[{0.027999999999999997, 0}, {0.028999999999999998, 1.6713091922005554},
       RoundingRadius->0], RectangleBox[{0.028999999999999998, 0}, {0.03, 2.2284122562674074},
       RoundingRadius->0], RectangleBox[{0.03, 0}, {0.031, 1.1142061281337037},
       RoundingRadius->0], RectangleBox[{0.033, 0}, {0.034, 1.1142061281337037},
       RoundingRadius->0], RectangleBox[{0.034, 0}, {0.035, 1.1142061281337037},
       RoundingRadius->0], RectangleBox[{0.036000000000000004, 0}, {0.03699999999999999, 0.5571030640668596},
       RoundingRadius->0], RectangleBox[{0.03699999999999999, 0}, {0.03799999999999999, 1.1142061281337037},
       RoundingRadius->0], RectangleBox[{0.03899999999999999, 0}, {0.039999999999999994, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{0.039999999999999994, 0}, {0.040999999999999995, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{0.044, 0}, {0.045, 1.1142061281337037},
       RoundingRadius->0], RectangleBox[{0.05, 0}, {0.051000000000000004, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{0.05600000000000001, 0}, {0.05700000000000001, 0.5571030640668518},
       RoundingRadius->0], RectangleBox[{0.08800000000000001, 0}, {0.089, 0.5571030640668596},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{-0.03538, 0},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->500,
   PlotLabel->FormBox[
    "\"Distribution of IBM Stock Monthly Returns\"", TraditionalForm],
   PlotRange->{{-0.034, 0.035}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}, {2,"2"->
  GraphicsBox[{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.32899999999999996`], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.32899999999999996`], Thickness[Small]}], 
      RectangleBox[{-0.067, 0}, {-0.066, 0.5574136008918613},
       RoundingRadius->0], RectangleBox[{-0.048, 0}, {-0.047, 0.5574136008918613},
       RoundingRadius->0], RectangleBox[{-0.045000000000000005, 0}, {-0.044000000000000004, 1.1148272017837226},
       RoundingRadius->0], RectangleBox[{-0.041, 0}, {-0.04000000000000001, 0.5574136008918651},
       RoundingRadius->0], RectangleBox[{-0.04000000000000001, 0}, {-0.03900000000000001, 0.5574136008918613},
       RoundingRadius->0], RectangleBox[{-0.038000000000000006, 0}, {-0.037000000000000005, 0.5574136008918613},
       RoundingRadius->0], RectangleBox[{-0.037000000000000005, 0}, {-0.036000000000000004, 0.5574136008918613},
       RoundingRadius->0], RectangleBox[{-0.036000000000000004, 0}, {-0.035, 0.5574136008918613},
       RoundingRadius->0], RectangleBox[{-0.032, 0}, {-0.031, 1.1148272017837226},
       RoundingRadius->0], RectangleBox[{-0.030000000000000006, 0}, {-0.029000000000000005, 1.1148272017837226},
       RoundingRadius->0], RectangleBox[{-0.029000000000000005, 0}, {-0.028000000000000004, 0.5574136008918613},
       RoundingRadius->0], RectangleBox[{-0.028000000000000004, 0}, {-0.027000000000000003, 0.5574136008918613},
       RoundingRadius->0], RectangleBox[{-0.027000000000000003, 0}, {-0.026000000000000002, 0.5574136008918613},
       RoundingRadius->0], RectangleBox[{-0.026000000000000002, 0}, {-0.025, 2.2296544035674453},
       RoundingRadius->0], RectangleBox[{-0.025, 0}, {-0.024, 2.7870680044593064},
       RoundingRadius->0], RectangleBox[{-0.024, 0}, {-0.023000000000000007, 1.1148272017837302},
       RoundingRadius->0], RectangleBox[{-0.023000000000000007, 0}, {-0.022000000000000006, 2.7870680044593064},
       RoundingRadius->0], RectangleBox[{-0.022000000000000006, 0}, {-0.021000000000000005, 2.2296544035674453},
       RoundingRadius->0], RectangleBox[{-0.021000000000000005, 0}, {-0.020000000000000004, 4.4593088071348905},
       RoundingRadius->0], RectangleBox[{-0.020000000000000004, 0}, {-0.019000000000000003, 2.2296544035674453},
       RoundingRadius->0], RectangleBox[{-0.019000000000000003, 0}, {-0.018000000000000002, 5.016722408026752},
       RoundingRadius->0], RectangleBox[{-0.018000000000000002, 0}, {-0.017, 2.2296544035674453},
       RoundingRadius->0], RectangleBox[{-0.017, 0}, {-0.016, 6.131549609810475},
       RoundingRadius->0], RectangleBox[{-0.016, 0}, {-0.015, 7.246376811594197},
       RoundingRadius->0], RectangleBox[{-0.015, 0}, {-0.014000000000000005, 6.688963210702381},
       RoundingRadius->0], RectangleBox[{-0.014000000000000005, 0}, {-0.013000000000000005, 6.688963210702336},
       RoundingRadius->0], RectangleBox[{-0.013000000000000005, 0}, {-0.012000000000000004, 8.918617614269781},
       RoundingRadius->0], RectangleBox[{-0.012000000000000004, 0}, {-0.011000000000000003, 12.26309921962095},
       RoundingRadius->0], RectangleBox[{-0.011000000000000003, 0}, {-0.010000000000000002, 10.590858416945364},
       RoundingRadius->0], RectangleBox[{-0.010000000000000002, 0}, {-0.009000000000000001, 13.377926421404672},
       RoundingRadius->0], RectangleBox[{-0.009000000000000001, 0}, {-0.008, 20.62430323299887},
       RoundingRadius->0], RectangleBox[{-0.008, 0}, {-0.007000000000000006, 13.935340022296627},
       RoundingRadius->0], RectangleBox[{-0.007000000000000006, 0}, {-0.006000000000000005, 23.411371237458177},
       RoundingRadius->0], RectangleBox[{-0.006000000000000005, 0}, {-0.0050000000000000044, 21.18171683389073},
       RoundingRadius->0], RectangleBox[{-0.0050000000000000044, 0}, {-0.0040000000000000036, 31.215161649944235},
       RoundingRadius->0], RectangleBox[{-0.0040000000000000036, 0}, {-0.0030000000000000027, 42.92084726867332},
       RoundingRadius->0], RectangleBox[{-0.0030000000000000027, 0}, {-0.0020000000000000018, 51.839464882943105},
       RoundingRadius->0], RectangleBox[{-0.0020000000000000018, 0}, {-0.0010000000000000009, 69.67670011148266},
       RoundingRadius->0], RectangleBox[{-0.0010000000000000009, 0}, {0., 75.25083612040127},
       RoundingRadius->0], RectangleBox[{0., 0}, {0.0010000000000000009, 79.71014492753616},
       RoundingRadius->0], RectangleBox[{0.0010000000000000009, 0}, {0.0020000000000000018, 70.23411371237452},
       RoundingRadius->0], RectangleBox[{0.0020000000000000018, 0}, {0.0030000000000000027, 52.39687848383496},
       RoundingRadius->0], RectangleBox[{0.0030000000000000027, 0}, {0.0040000000000000036, 45.70791527313263},
       RoundingRadius->0], RectangleBox[{0.0040000000000000036, 0}, {0.0050000000000000044, 49.0523968784838},
       RoundingRadius->0], RectangleBox[{0.0050000000000000044, 0}, {0.0059999999999999915, 40.13377926421457},
       RoundingRadius->0], RectangleBox[{0.0059999999999999915, 0}, {0.006999999999999992, 32.329988851727954},
       RoundingRadius->0], RectangleBox[{0.006999999999999992, 0}, {0.007999999999999993, 26.755852842809343},
       RoundingRadius->0], RectangleBox[{0.007999999999999993, 0}, {0.008999999999999994, 24.5261984392419},
       RoundingRadius->0], RectangleBox[{0.008999999999999994, 0}, {0.009999999999999995, 15.607580824972118},
       RoundingRadius->0], RectangleBox[{0.009999999999999995, 0}, {0.010999999999999996, 20.62430323299887},
       RoundingRadius->0], RectangleBox[{0.010999999999999996, 0}, {0.011999999999999997, 12.26309921962095},
       RoundingRadius->0], RectangleBox[{0.011999999999999997, 0}, {0.012999999999999998, 12.82051282051281},
       RoundingRadius->0], RectangleBox[{0.012999999999999998, 0}, {0.013999999999999999, 13.377926421404672},
       RoundingRadius->0], RectangleBox[{0.013999999999999999, 0}, {0.015, 7.803790412486059},
       RoundingRadius->0], RectangleBox[{0.015, 0}, {0.016, 3.344481605351168},
       RoundingRadius->0], RectangleBox[{0.016, 0}, {0.017, 8.918617614269781},
       RoundingRadius->0], RectangleBox[{0.017, 0}, {0.018000000000000002, 5.016722408026752},
       RoundingRadius->0], RectangleBox[{0.018000000000000002, 0}, {0.019000000000000003, 3.344481605351168},
       RoundingRadius->0], RectangleBox[{0.019000000000000003, 0}, {0.020000000000000004, 3.9018952062430294},
       RoundingRadius->0], RectangleBox[{0.020000000000000004, 0}, {0.02099999999999999, 2.787068004459345},
       RoundingRadius->0], RectangleBox[{0.02099999999999999, 0}, {0.021999999999999992, 1.1148272017837226},
       RoundingRadius->0], RectangleBox[{0.021999999999999992, 0}, {0.022999999999999993, 1.1148272017837226},
       RoundingRadius->0], RectangleBox[{0.022999999999999993, 0}, {0.023999999999999994, 1.672240802675584},
       RoundingRadius->0], RectangleBox[{0.023999999999999994, 0}, {0.024999999999999994, 2.2296544035674453},
       RoundingRadius->0], RectangleBox[{0.024999999999999994, 0}, {0.025999999999999995, 1.1148272017837226},
       RoundingRadius->0], RectangleBox[{0.027999999999999997, 0}, {0.028999999999999998, 1.1148272017837226},
       RoundingRadius->0], RectangleBox[{0.028999999999999998, 0}, {0.03, 1.1148272017837226},
       RoundingRadius->0], RectangleBox[{0.034, 0}, {0.035, 1.672240802675584},
       RoundingRadius->0], RectangleBox[{0.03899999999999999, 0}, {0.039999999999999994, 0.5574136008918613},
       RoundingRadius->0], RectangleBox[{0.043, 0}, {0.044, 0.5574136008918613},
       RoundingRadius->0], RectangleBox[{0.046, 0}, {0.047, 0.5574136008918613},
       RoundingRadius->0], RectangleBox[{0.047, 0}, {0.048, 0.5574136008918613},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{-0.02602, 0},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->500,
   PlotLabel->FormBox[
    "\"Distribution of S&P 500 Index Monthly Returns\"", TraditionalForm],
   PlotRange->{{-0.025, 0.025999999999999995`}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}}, 1]], "Output",
 CellChangeTimes->{
  3.739188831145241*^9, 3.7391922976833467`*^9, 3.73920814275187*^9, 
   3.7392100061338177`*^9, {3.7392107243743668`*^9, 3.739210743929199*^9}, 
   3.739212195604031*^9, 3.73921471908881*^9, 3.739214834832684*^9, 
   3.7392149824277353`*^9, 3.739215022848823*^9, {3.73928332079904*^9, 
   3.7392833289521513`*^9}, {3.739284262445232*^9, 3.739284277479514*^9}, {
   3.739293572480014*^9, 3.7392935811273193`*^9}},
 CellLabel->
  "Out[1869]=",ExpressionUUID->"4f1eaecd-8f60-485f-9830-6d85931e5ca5"],

Cell["\<\
\[LineSeparator]Inspection of the individual series\[CloseCurlyQuote] \
autocorrelation functions suggest that the log returns \
aren\[CloseCurlyQuote]t serially correlated.  \
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.73920757927238*^9, 
   3.73920759887035*^9}, {3.73920772658597*^9, 3.739207728941493*^9}, {
   3.739208053406534*^9, 3.739208070994266*^9}, {3.739208992125799*^9, 
   3.7392090043574247`*^9}, 3.739209642327388*^9, 3.739209705471567*^9, {
   3.739224582559196*^9, 
   3.739224590728998*^9}},ExpressionUUID->"c7cddf68-815f-4e19-a3bf-\
eb80cd27a8db"],

Cell[CellGroupData[{

Cell["", "Direction",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.739285876498708*^9, 
  3.73928588186627*^9}},ExpressionUUID->"bafa17cf-af79-4a61-a7a8-\
2b0b73d2cf3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "autocorrelation", " ", "functions"}], " ", "*)"}], 
  " ", "\n", "    ", "\n", 
  RowBox[{
   RowBox[{"TabView", "[", 
    RowBox[{"{", "\n", "    ", 
     RowBox[{
      RowBox[{"Manipulate", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"CorrelationFunction", "[", 
           RowBox[{"IBM$returns", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "n"}], "}"}]}], "]"}], ",", "\n", "    ", 
          RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<IBM Autocorrelation Function (ACF)\>\""}], 
          StyleBox[",", "Input"], 
          StyleBox["\n", "Input"], 
          StyleBox["    ", "Input"], 
          RowBox[{
           StyleBox["PlotRange", "Input"], 
           StyleBox["\[Rule]", "Input"], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.10"}], ",", "0.10"}], "}"}]}], ",", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "IBM$level"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", "IBM$level"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"-", "IBM$level"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", 
                  RowBox[{"-", "IBM$level"}]}], "}"}]}], "}"}], "]"}]}], 
            "}"}]}]}], "]"}], ",", "\n", "    ", 
        RowBox[{"{", 
         RowBox[{"n", ",", "5", ",", "100", ",", "1"}], "}"}], ",", 
        StyleBox[
         RowBox[{"SaveDefinitions", "->", "True"}], "Input"]}], "]"}], ",", 
      "\n", "    ", 
      RowBox[{"Manipulate", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"CorrelationFunction", "[", 
           RowBox[{"SP$returns", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "n"}], "}"}]}], "]"}], ",", "\n", "    ", 
          RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
          RowBox[{
          "PlotLabel", "\[Rule]", 
           "\"\<SP 500 Autocorrelation Function (ACF)\>\""}], 
          StyleBox[",", "Input"], 
          StyleBox["\n", "Input"], 
          StyleBox["    ", "Input"], 
          RowBox[{
           StyleBox["PlotRange", "Input"], 
           StyleBox["\[Rule]", "Input"], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.10"}], ",", "0.10"}], "}"}]}], ",", 
          RowBox[{"Epilog", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Dashed", ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "SP$level"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", "SP$level"}], "}"}]}], "}"}], "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"-", "SP$level"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"n", ",", 
                  RowBox[{"-", "SP$level"}]}], "}"}]}], "}"}], "]"}]}], 
            "}"}]}]}], "]"}], ",", "\n", "    ", 
        RowBox[{"{", 
         RowBox[{"n", ",", "5", ",", "100", ",", "1"}], "}"}], ",", 
        StyleBox[
         RowBox[{"SaveDefinitions", "->", "True"}], "Input"]}], "]"}]}], "\n",
      "    ", "\n", "    ", "}"}], "]"}], "\n"}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.739209720819716*^9, 3.739209738428109*^9}, {
   3.739209819385434*^9, 3.739209836063496*^9}, {3.7392098852565317`*^9, 
   3.7392098855418797`*^9}, {3.739210244473796*^9, 3.7392104057629642`*^9}, {
   3.739214680897469*^9, 3.739214685010686*^9}, {3.7392150673092823`*^9, 
   3.73921507200401*^9}, {3.739215667496283*^9, 3.739215670654739*^9}, {
   3.739224007955744*^9, 3.739224039632441*^9}, {3.739274474346839*^9, 
   3.739274533375226*^9}, {3.739274564850336*^9, 3.73927460911735*^9}, {
   3.7392747024967203`*^9, 3.7392747124554358`*^9}, {3.7392834425126553`*^9, 
   3.7392835542200117`*^9}, {3.739283600827264*^9, 3.739283642592144*^9}, {
   3.739283694010583*^9, 3.739283784171935*^9}, {3.739283819956499*^9, 
   3.739284116228459*^9}, {3.739284151232223*^9, 3.7392842321235733`*^9}, {
   3.739284285284362*^9, 3.7392842880191402`*^9}, {3.73928512029249*^9, 
   3.739285126783317*^9}, 3.7392858818692408`*^9, 3.739289933853203*^9},
 CellLabel->
  "In[1870]:=",ExpressionUUID->"42625d6d-028e-4add-a788-df686714b0a7"]
}, Closed]],

Cell[BoxData[
 TabViewBox[{{1,"1"->
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 90, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 5, 100, 1}}, Typeset`size$$ = {
     500., {160., 165.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = False, $CellContext`n$2245830$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 5}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$2245830$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> ListPlot[
         CorrelationFunction[$CellContext`IBM$returns, {2, $CellContext`n$$}],
          Filling -> Axis, Joined -> True, PlotStyle -> Blue, ImageSize -> 
         500, PlotLabel -> "IBM Autocorrelation Function (ACF)", 
         PlotRange -> {-0.1, 0.1}, Epilog -> {Dashed, 
           
           Line[{{0, $CellContext`IBM$level}, {$CellContext`n$$, \
$CellContext`IBM$level}}], 
           
           Line[{{0, -$CellContext`IBM$level}, {$CellContext`n$$, \
-$CellContext`IBM$level}}]}], 
       "Specifications" :> {{$CellContext`n$$, 5, 100, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{545., {205., 211.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({$CellContext`IBM$returns = 
        TemporalData[TimeSeries, {CompressedData["
1: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
sW7xjdaGNBvCrK0seGCAnDTjuMfkGvjBGVsPHFUzwXliVRu3ghfMRHrEHqHv
7imbmdJwwqq1OufrQV9nMrbLXV0pW2I950go+HKTU8zN8zjHlLSWqDy87vV/
w3tlUNci+Qs9h5HjE76+1Zl/EnhOithyGHn74CGrJ3NQV+mnhzWXepKiEqf6
fIdTyCvnDyWmBxJup2Do6c/gy9dq4Uv1gYtjq3zGlYHrL7K1w8YehOO833bR
/ATKmF8Xmh6Gex0P+K406kTYEG7s44oDhGMY7PFwYQZ1kCmJdpqXA79h9Y3/
FvLdsPuXs1vhNyOii0UfI1cc25kxrgA8Kf8X/d0e77dY3czdjdd9eTQkKstS
bgq/ah4/5ptdd8v/PnTRuqDJ5lIhZRwLfn5aj3XOJUfOMICP74irvc11Jw5t
ZgH9BVhvgZf8N04KZc9kyX1MPUI4WmdP2WbjsaH/7WtTYwhXZ0pQ54Z88LNf
bV0s/MDIp8L9rZiHojNJchO/Z4pJoNOtQil3Yb9iQijqsK+GJyB/Ive/vCZx
CHr6XCvohS50p1Jq29t81Nde/XiHfhTmePFSs2DgbLa8tMY4/E/ElTLvOMyR
nIbnLCm8/rLaAUVR6OYaOzUdV+iE7sU/oWrICSfjtbuCgN+yVhGfOZ6EUzSf
+y70AGWfXmhfciyecK54SzTww7/or8u5YZpKioRcsv2eHqJMjeLDbyrQqWjX
1ZMfRRIH3ginnD/IJcutBI9l49yKGwWXTwUfjA7VPs899L+4jLxt0nsWfnr7
2mAeHqzfu3vXmNYBym23373rFd5fs2nPqV7guHjfRtbRhLJGf/+1/UkhHC8/
wyEj8OPlhc8HHkNfPd9+HtvFEnak+VX4dugq99qaldorCSOwa8nBLZj/c2tM
/7a5gY9370zbAp7UOhL3UdqNMoYNawekOZQNSlU8tCCBsB915lz4FkK507+H
6PSlQUcfR5RFniDMA0ZEai9wFvuje5rXfsLpzvbarHqcML++ll1dCj9VWhKi
/gm+8+i0Ov6luM+RYq1nR/cQ9rns5YvbwDN/DjxoCkghTFPjMfsdmLf7LdTk
WwDltih+9Q9BXt0amGlUjPfv77vVsQXnP3mV14dFHxRH30XrIs8pm5Up3MbP
YzfnJwrAz6xaWxeYi1zV9dox7QP0c+jA/oxe8I1IxYIyX+Q2B6v8me3QoQDB
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
vMTjIeYlM09+Gw/ueXlHad5Gj4m/N/X1qKF+N2MVu5zAU/oLbv5cokHZW0T8
jj30fNr7V5pmEYSdMXpj1Bh1yB640V2CHPMgxGrIFfn1mv7sCn34h6nJtjWs
Kd7/o3mdF+rM5/08QsqDsDmCtXlW0JcZQvZTd8GvX5Gb1FwPXxCTeXd0PvKn
3KEPKurg66YqU/G9ZpjrEc2ZHcj9Gszscj/Uv3uuS3qpEuq3pqfxKO4p8tRY
wAW45XuXNOyN78JtAkky8OfSdporlrgQ9mT6nCHtYOSaOfpd68AbPINXSsf3
wdc4yUcfwz02Rzwm1vCnQQ4yPmLQ3zppvj/LAwj36vIZopfhT3JqnWdNPgi/
kVGQlgsfmWeQlp0Iv3RRRWCQi3Wmxs+5O4C6ab4Wqs5FLmXkG5U9ZhJ2ddPK
4O/oh8XJ56pCroSr5/5u78oC4N6NPfUI66jtrtNmwPcW21r+yUdR7uMRbr5J
NPykz+i5DuBvoDB0KNcMuK++OVfdmjCqTnoPF0DPHeq8Ex/IA6/nxi200Z/U
8lCPfQHQpVtvlBTgf5evGhP8yxLGxnLRWnlvwvRyhY5m+xLW61y8WyF8xheF
P6nJyKmvFj9xXol+bkg5IpeLnH/hyqD0BvD4l6IOn2PA1Y0DG68KWVOOb73N
wcmoQ4/S6R555L5bjlJbt4FnFra4eP9AP34emTR0BzzQo+rzS3zi91DPe9eZ
c5APbsVrLQ6kbMKG6iXvgXfhzqtVgsCV9Mdnq9OiKDsvQ8lEHvsbiizWawZP
CpifDi7DubfG37Oxh5/KCFs8vWwtYV6JSDxRgf8TVp7koAT/UdT+t4dRIOzg
yzPz1qKvquy2s8fh13nDf+/wBc+I+X6414B5dFj6PUoaOhxwUuW5I3hLMl03
YBBzxk2aqyy4mHCCQ7u61CY+j6vcp+sAXek03l7rj3z0mXN22BbzJXhFtekM
+psBxbqmBp2yc54ssR96uTt4zw/waNUbjd6l8Klbiv1vypZT5t7sO53vcL+W
bdf0NsInhPf+Fe93hE++WZ1tgfq+fv2x9yl40TNn0LcA56m6zt+VtJIy6taT
GuJxX1Zq4PZD/Lx0WRRRckO+vL0kuQp6yuU7eIObD75dus0lFPjkOSz8sTCE
sjNidvitBB84tDVUEujqIbWUVH871PNraoZgFGFkQsXFzFJJj5vG0GvjQ5Th
D9fS0zEEXz07mKePOj+MeXO6BfXyt5gTNPHvRQwclVVfIJfXeEnOS/QjbP7S
ywl/oIPWfzNFPYCvX7UCLduBryErIxG5NYT5/tJS5yTeNx5uZ+iCvq/svL9Y
eQ1lit487qzEfeLnVR93jCSsbsmhv58n8pmUZksNeKxuy4B4SghlFBr1V9tB
3/i/L9Dqwj3vR+hJ3Iev6qxZExAC/5sYMOqkrQ1e/DAyWg69abxhLEnAUxof
/Otu4Z6Tn71KaMI8CJ55dcUUehszz/mMHOr/+sqllt3AZY7z/Q+vkd8teUb3
6CcQ9rq2bIw0cCgg9nFvYDRlHiyzc1uN+bixuKTjEu6tET65Jd0C9Ql53KiJ
vOIWdZG/ewt4w1UycOLz/w9/reMzgx6+WRMexYJHTyYrXI0pAe6PnpHo0Qff
HrJunI96kCTPfqvIic+BBn323QU8CstYbgVOPwc1PzRH/8dW3xyfDHwJhUWI
ZuHe0dpbd3ZhPu3tPOVH8bo9M679bcH+qiLDPi8tCHNB9srQY+id4ufByl87
kTunX3bLdwJe3AaC5Tn/66ef/z4jcQXvm63/p/4O/Ebrojnb77oRrtzpi3kv
ce9K8VcZC8ErHfN5bobA17Q/VhN8At3TyJwS5A48yLOl5wSh+xs6+4oHJv4u
1snnHY86bZhK4sSBh8s7Gh7m4X42y9gpvNinOLz/+iz09zTvt3cZWDdQwIZ3
VxBhBZRra5UmPn/4pYVpc6dcX7tZfCbgc6tDAqf9oHfO5pvKn1oS5oe3ri8H
OWtVVcQOdeBLr+z3h2T0NcBY5fJS6EX1QIne0jjC7vpPOs8NPDGw4FKj8Q7K
SBzcGDHx7x/uuwVPdUAuKYvVmLcilP6/OiidH9q50we+Velkyw74LVbL1ee+
HvpTZmBzA/X32Rq8sxtzFlB/aFY79ML7utLWiXPVRe941Y37LLANeKiJ+fqR
bv1yYi6GehWslQlh9LZuuzQb51uambNcwYFemPus0PPCZcJ2Bk/dlwNeFfrN
fGiGnsxR5Z3XnU6Llobo9qUib/FcVvmsgXw2lJO0wVITPPRd10wY+f9M8d5b
EujDuQu36WN7nP+kVFOcDGX3cdsl5mHuvk+rDTqVQFnfzXkLJv4+2LTo3o1q
1N1n2897D8yBD9lPCc/hS4Ndt2nMAt6VSh7eeok6Gpp9OjljL+FefBsnUQge
OimVnCGBfNzItesLM6Rsh+X8PlnU1Z1xXpwHH1TTPd3ezYQy3KcWChvAc1wH
iUAVA+ivdkScO3StPck6YBLmbE/13y1u0AW66fhMPvDw0YJ3KlGor7j1wPyZ
8FnT/G2PhGE+pB/o3JLzpCyPVYFJEnAVFNcqyPUGX2YPvIiPJpL8Z84ujAAf
vZ99VlRGnXBbdyZe/AoeNrVZy7cduHtudFXHHrlKRaJm+5At5ZqUqll74Hmp
J2u2T4PfE5F+K3F14u9+eVcq5oLPdVREt5qDl+xs57qHo1/Oxop3VwYRzvO3
e5qXHSPcdwI21teR73J3jfzgBW7W/22fW4PXB8Xw+wiAn7+Y/13BYj3OMfnm
IQnwso7bQl/g92qQw8FHyN+ZyoMx/wrg+6NCvDv3EMPm2vdu3sXwgzeW5q4z
J+y04svxYzmE3fjPyKly4nMTzw8OPVAnjFJM2bRlCdDjIjFLbw9aVGR3sy4O
vosZ/JY/mUO4n1/oZ6qz1KG0/2g7yabMywQD7c/FlPtLRsj+xSHktrWlL4pj
qYNWeVxKZSFlsit3BRUj9/b/dK54Db/CJ6V8K9uXsrrueeJbkN97tErOH0S9
677V2D81gk923CbKDaP/A+yxEhM=
           "], {
            
            TemporalData`DateSpecification[{2011, 1, 3}, {2018, 2, 15}, 
             "BusinessDay", "DayRange"]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            HolidayCalendar -> {"UnitedStates", "NYSE"}, TemporalRegularity -> 
            True}}, True, 11.3], 
        Attributes[HolidayCalendar] = {ReadProtected}, 
        Options[HolidayCalendar] = {}, $CellContext`n$$ = 
        10, $CellContext`IBM$level = 2/Sqrt[1795]}; Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]]}, {2,"2"->
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 81, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 5, 100, 1}}, Typeset`size$$ = {
     500., {160., 165.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = False, $CellContext`n$2245848$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 5}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$2245848$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> ListPlot[
         CorrelationFunction[$CellContext`SP$returns, {2, $CellContext`n$$}], 
         Filling -> Axis, Joined -> True, PlotStyle -> Red, ImageSize -> 500, 
         PlotLabel -> "SP 500 Autocorrelation Function (ACF)", 
         PlotRange -> {-0.1, 0.1}, Epilog -> {Dashed, 
           
           Line[{{0, $CellContext`SP$level}, {$CellContext`n$$, \
$CellContext`SP$level}}], 
           
           Line[{{0, -$CellContext`SP$level}, {$CellContext`n$$, \
-$CellContext`SP$level}}]}], 
       "Specifications" :> {{$CellContext`n$$, 5, 100, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{545., {205., 211.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({$CellContext`SP$returns = 
        TemporalData[TimeSeries, {CompressedData["
1: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
zK/2Zkh7Cr7P55Sregf1p3K3bgjRxX40tCmWzwu5fe6Fhmjgofn0pMIe8DlT
0ye7ypEypjNIbrM7cPxv+NyUTYRJ+3hrTjt4uqb3zvKv4I+ktdnuYeTPrPyg
oHKcK/pubogxdCaH+NBi5Ip3ba6+TSGEk7fOquoEdEBpo1TlY+QMz7qbJWXo
z2n5Dsk1yGVhfwJcmz2gd69f+y9BLtLZ8LgnGjohmSkgEokcUps5sNoNufz0
cstNC4ED4Uqp58rYb3w4l/XGJ/qm3+FsC948C5NT9QqceP9RvYODvSz58Pzc
x/Ar8QyBr7PA1///E9USumYN9CzofcrfNOSGTMHn9/XBm4ClPTsNMK+c8ojK
fuwnzpIXNNLwuvCyx5EZuO8O/9u5/PCLhruXgvuAT3Gnk38OAHfSwX9fiOnA
V85N93CAzuwaTgo4Dj3XsDeYtRI85sp5XksCvkfkFs0vVyfMvBVnTtcg94tZ
FqvsxvMl7boX314N/zULm1SpBdx98viTgnt8XpmeqIS+iMi1ng8DLy97t4+7
wIcFyypbJnKCspU5nfj9eZ2BmQ1rQZjNzx0776H/nJfJIrexz6faaHj6bwZf
SfaJQOTDAem/t0rhr1uEtMlizHdvTgU/TyJhzb5ePsKgXuGHG9oiOfADd51X
7eDJB1rU9BK6M+1+qel17CEj3RsmKQE3y79+66+HPxUeGRKZpgy9rtm/pww5
/NaYbuNyzEFYuGPwNHLZ/sG7xbF7oFu91jMCbSjnweAXMxfwrapvQe1P9Hvv
zt551qiTfa7z/cwO9H3qZf8K+I7Y0qeVV9GfofK0NY1GyNUCy60FoDfiU5xW
B6MOwU+v0t/h/JY9Mcf3oJ+DCxZF8oJfyl++fcsHPy7uPxo0H+edzQ65HYt+
Gl5ZLRkOHdTZYbLuoSdlm9ySbr4PpcyAkGTPSdSb2b6+rRH3lHl4vH8RcPn2
pK/VD/AlN9160ktnykb5exhtAP+MrYISv6G/QY8yuG0E/PiyZdMiPD//3tRd
E7m+cXo91xa44bM8uyXUGPh5/juoDbmnsXZgmsg27OsjLfoU82Oqnr0vmoxc
dHCPQjPuq8H3WzQG+lNySv/ODeAhqm43n4op9vmEgrhU8JivYIFEpBbtiThp
ZHAc/tcSHv5kA/Z/787PWyqRn95HyNyXAj5s0nlzJNBX9e8nRRwcCHN8pVfl
+om/F8kQkTVXgN/2NadUwZdGBH+OS6tRRntYuG9SBGHqZ80rtcZ5r0X51b/j
+4cjK2fVAeca6jb0shn8aSTteyT2m0JRAz959LXl2fAmftQ9KvL9TAjO1x2T
e2KIz684iTeYYj6Gux6XZskjhzcKm4tN9Nf53WcP9Ptst17GPPhAjpRYTTf2
nXV+Wj/SJ85Xt9W6okA4HqNKYRN/B9Yqe/YnP3L+2srMvnzwPX9s0X+L8HPK
n4NXfYavDdgHhT82IZwUXfJz7cTf978ZWLkJvsDZce/8fn3k2SstuafA/zWj
C8M+AkeSeZkZ19GXonmfo6XRT9Z40393BDD/mO512ZhLt2p/AQ/yaMuSNd+X
SmOf3HWlawHy5qhQRqGH0cT7Ke17vkEvbIpcDGPkgac5K9hXBpR5NPZa4Dfw
rafaJNmlTRlP/SxZYfQ91WXWSWnwSGCqq18f5mmjGBT8Hc//ka7fOWY+8XdY
tz0b7Cd+f25m0raRMjsKyupLknAP5WeSb6F3w7aDT9Lgk6aRdTtNOfCZFf0m
GiaEWeV7yvk49pjWoZK5s6GPQ7lzDgsCZzZlPW0W+Pk3AUHXdKHXW3+aBIzD
v3XUH0Q7QxcKLROuf4D/DfT2ixdgv/nWfGzPO8ztnn5Xjyd0JuyEe7kqdDjb
WTfnUzj0KtjRtQi5pPBE4S77FahTTfOyA/AYfUlyUB48yJJ5fi0ZeuilZ7Xu
sQ5h4tn4aj7ovanU1JJtE7k3kyejA/VWHtkWsQ647mlM2dGkAR635XO/Q18L
HTzmbtIkjJr3ytENwAu7cpT3w2zCaBwIOXob/EisXhZThXvlzWtbbQ5cSvXW
WVfBN/Z/dnC5BJ8Z4mQv9kCfPuh9FV2C+nnzZZdnY05zZ8uapiJnZjZk+fIi
t/HdUfJPtMK+cmFdTTHy5MgncfF6PejTWaH1l8DTymBrZjr0QVlxtowx7pH6
Y9ObcOQ37dTJ+4f9CKuUlOqr6UWZyiVN/w6ZEzZzQV+KOPapnjiJqlY8X+VV
VVbsxO/5VLPEJn5/3VgVffkb8Cd2XPuB6MSc3/atfyuDvFJ1id8a/dy9pnBy
28ReLXpHtUkGOljPlTyDPn3vFuQ8QR6quhP+xwV+odxofm4hdPrpL8G8D3aU
bTHUmVeMfFd+VVesCc9b/1Ve4DD0u0VJOG8CLwoXrvVO7Ccfm0JOHYUPNR4q
/fof5sms9Kxfo0LZnt2M/yrgQ+Y/w0x5Zcryvqlxrcc5szqu0KPASY9QjrAq
+te1c92MYtTB3jdg3y+kzL4bFblTobudfC8aksCPmJ6nfzdB9zWWOp22AR97
Cre8G1ej7Ozh73kX0Sd26b+lttjLvpvnGfyCHin9u2YVMPH/dTnMeiUJ3eAT
6FDWQF1e+XW1vNAf4U2nDU3wXOG7t98MboduD0iZCU7wtHPO503+lNX5amDO
A/0YiHp2ShH3C3a5u5sFPgbXpXs9Rm6XTFKw2QJ8m/Iuf2OK3NKVEzBFBTg0
SRM3nPg+l60JOgV9zLB7bffKnbIcszZ5Hex5ys+2FoXCP9KMsjg/kQ9/MxXb
oyf+fv9fxu/HwJfer3OuZsjLI3axy+k2wurzhMtzYgljn5w7lh5KOe83ay7a
hX2eUztvYCp4bhryMXmLJpXMHky+fOMo5f69kr/pTwnlBqrs4+vCfuLYdT4h
zI96ycer/d54krKTHs1ryZr4/1dOfScR2MNa235fc3Ik7LhCBPVJIGxF+5vy
G3hej9Od+mBlwj4TEpD+FEj/B+7/spg=
           "], {
            
            TemporalData`DateSpecification[{2011, 1, 3}, {2018, 2, 14}, 
             "BusinessDay", "DayRange"]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            HolidayCalendar -> {"UnitedStates", "NYSE"}, TemporalRegularity -> 
            True}}, True, 11.3], 
        Attributes[HolidayCalendar] = {ReadProtected}, 
        Options[HolidayCalendar] = {}, $CellContext`n$$ = 
        10, $CellContext`SP$level = Sqrt[2/897]}; Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]]}}, 2]], "Output",
 CellChangeTimes->{{3.739209856718091*^9, 3.73920988665331*^9}, {
   3.7392103441278954`*^9, 3.7392103599992123`*^9}, 3.739210393622899*^9, 
   3.739212195922353*^9, {3.7392147191791286`*^9, 3.739214720416747*^9}, 
   3.739215078422648*^9, 3.7392240420542593`*^9, {3.7392745195889463`*^9, 
   3.739274534667781*^9}, {3.7392745802957706`*^9, 3.739274609689926*^9}, 
   3.739274714925496*^9, 3.73928369972383*^9, {3.739283747262582*^9, 
   3.739283785086944*^9}, 3.7392838222577753`*^9, {3.739283876487369*^9, 
   3.739283902301186*^9}, 3.739283933764967*^9, {3.7392839856903467`*^9, 
   3.739284001822467*^9}, 3.739284122416998*^9, {3.7392841717079268`*^9, 
   3.739284240189196*^9}, 3.739284290119007*^9, 3.739285127735436*^9, 
   3.7392886843795843`*^9, 3.739288873300179*^9, {3.739293572594103*^9, 
   3.739293581243965*^9}},
 CellLabel->
  "Out[1870]=",ExpressionUUID->"1e695434-60ab-48a4-8542-9841fd37dc8e"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["          ", "Text",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["The \"n\" slider determines the number of autocorrelation lags \
shown in the chart.", "Text",
  FontSize->12,
  FontWeight->"Plain",
  FontSlant->"Italic"]
}], "Subsubsubsubsection",
 CellChangeTimes->{{3.73922463083934*^9, 3.7392246386569967`*^9}, {
  3.739224671977847*^9, 
  3.739224683877578*^9}},ExpressionUUID->"9c305965-c7c5-430e-a982-\
26fb531e8af6"],

Cell["\<\
\[LineSeparator]Inspection of the autocorrelation functions for the squared \
log returns and the absolute log returns suggest the likelihood of series \
dependency.  \
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739206397998611*^9, 
   3.73920651255858*^9}, {3.739206569044722*^9, 3.7392067912940807`*^9}, {
   3.739206830519586*^9, 3.739206898377775*^9}, {3.739206934520834*^9, 
   3.739207061658433*^9}, {3.739207094942279*^9, 3.7392070980211*^9}, {
   3.73920713014456*^9, 3.7392072020037937`*^9}, {3.7392072427076406`*^9, 
   3.7392072488333817`*^9}, {3.739209508754882*^9, 3.739209636910304*^9}, {
   3.7392104141498823`*^9, 3.739210414150116*^9}, {3.73921239143917*^9, 
   3.739212696238358*^9}, {3.7392127394125566`*^9, 3.739212835233767*^9}, 
   3.739224064997549*^9, {3.739224119617671*^9, 3.739224136918434*^9}, {
   3.73922431699876*^9, 3.73922432069442*^9}, 3.739224768894454*^9, 
   3.739225688070011*^9},ExpressionUUID->"057d9006-8d86-47da-b6f7-\
7ee88dd14db0"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739215132980364*^9, 3.7392151348386106`*^9}, 
   3.739215410001089*^9},
 CellLabel->
  "In[1871]:=",ExpressionUUID->"4c8bbfc3-243d-4465-9405-cd7bf5bb9a82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"plot", " ", "autocorrelation", " ", "functions"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"IBMAbsRtPlot", " ", "=", " ", 
     RowBox[{"Manipulate", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"CorrelationFunction", "[", 
          RowBox[{
           RowBox[{"Abs", "[", "IBM$returns", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "n"}], "}"}]}], "]"}], ",", "\n", "\t", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "All"}], "}"}]}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<ACF of IBM Absolute Returns\>\""}]}], 
        "]"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"n", ",", "5", ",", "100", ",", "1"}], "}"}], ",", 
       StyleBox[
        RowBox[{"SaveDefinitions", "->", "True"}], "Input"]}], "]"}]}], ";"}],
    "\n", "\n", 
   RowBox[{
    RowBox[{"IBMSqRtPlot", " ", "=", " ", 
     RowBox[{"Manipulate", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"CorrelationFunction", "[", 
          RowBox[{
           RowBox[{"IBM$returns", "^", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "n"}], "}"}]}], "]"}], ",", "\n", "\t", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "All"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<ACF of IBM Squared Returns\>\""}], ",", 
         "\n", "\t", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "IBM$Sq$level"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "IBM$Sq$level"}], "}"}]}], "}"}], "]"}]}], 
           "}"}]}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"n", ",", "5", ",", "100", ",", "1"}], "}"}], ",", 
       StyleBox[
        RowBox[{"SaveDefinitions", "->", "True"}], "Input"]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SPAbsRtPlot", " ", "=", " ", 
     RowBox[{"Manipulate", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"CorrelationFunction", "[", 
          RowBox[{
           RowBox[{"Abs", "[", "SP$returns", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "n"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "All"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<ACF of SP 500 Absolute Returns\>\""}]}],
         "]"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"n", ",", "5", ",", "100", ",", "1"}], "}"}], ",", 
       StyleBox[
        RowBox[{"SaveDefinitions", "->", "True"}], "Input"]}], "]"}]}], ";"}],
    "\n", "\n", 
   RowBox[{
    RowBox[{"SPSqRtPlot", " ", "=", " ", 
     RowBox[{"Manipulate", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"CorrelationFunction", "[", 
          RowBox[{
           RowBox[{"SP$returns", "^", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "n"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "All"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{
         "PlotLabel", "\[Rule]", "\"\<ACF of SP 500 Squared Returns\>\""}], 
         ",", "\n", "\t", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Dashed", ",", 
            RowBox[{"Line", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "SP$Sq$level"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", ",", "SP$Sq$level"}], "}"}]}], "}"}], "]"}]}], 
           "}"}]}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"n", ",", "5", ",", "100", ",", "1"}], "}"}], ",", 
       StyleBox[
        RowBox[{"SaveDefinitions", "->", "True"}], "Input"]}], "]"}]}], ";"}],
    "\[IndentingNewLine]"}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739215173919209*^9, 3.739215308720808*^9}, 
   3.73921541000179*^9, {3.7392155043514214`*^9, 3.739215519101452*^9}, {
   3.739215558884397*^9, 3.739215650746869*^9}, {3.739215691869432*^9, 
   3.739215731523115*^9}, {3.739215882194503*^9, 3.7392159161537027`*^9}, {
   3.739217260479107*^9, 3.739217338328558*^9}, {3.739285628662613*^9, 
   3.739285683589188*^9}, {3.739285720498897*^9, 3.7392857292948008`*^9}, {
   3.739288919949231*^9, 3.739289128865004*^9}, {3.739289162564465*^9, 
   3.739289180381399*^9}, {3.7392892252649*^9, 3.73928925009579*^9}},
 CellLabel->
  "In[1872]:=",ExpressionUUID->"9d6f57d4-cce9-4b07-8793-01d5fb0c7369"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TabView", "[", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
    "IBMAbsRtPlot", ",", "\n", "\t", "IBMSqRtPlot", ",", "SPAbsRtPlot", ",", 
     " ", "SPSqRtPlot"}], "\n", "\t", "}"}], "]"}], 
  "\[IndentingNewLine]"}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.73921534422768*^9, 3.73921541000233*^9}, {
  3.739215789217945*^9, 3.739215832689176*^9}, {3.7392159188711863`*^9, 
  3.739215921669488*^9}, {3.739217189448946*^9, 3.73921719569281*^9}, {
  3.739224806728134*^9, 3.73922481010684*^9}},
 CellLabel->
  "In[1876]:=",ExpressionUUID->"381ee8a0-6901-4063-8f35-783b489b500c"]
}, Closed]],

Cell[BoxData[
 TabViewBox[{{1,"1"->
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 68, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 5, 100, 1}}, Typeset`size$$ = {
     500., {164., 169.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = False, $CellContext`n$2246485$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 5}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$2246485$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> ListPlot[
         CorrelationFunction[
          Abs[$CellContext`IBM$returns], {2, $CellContext`n$$}], Filling -> 
         Axis, ImageSize -> 500, Joined -> True, PlotRange -> {0, All}, 
         PlotLabel -> "ACF of IBM Absolute Returns"], 
       "Specifications" :> {{$CellContext`n$$, 5, 100, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{545., {209., 215.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({$CellContext`IBM$returns = 
        TemporalData[TimeSeries, {CompressedData["
1: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
sW7xjdaGNBvCrK0seGCAnDTjuMfkGvjBGVsPHFUzwXliVRu3ghfMRHrEHqHv
7imbmdJwwqq1OufrQV9nMrbLXV0pW2I950go+HKTU8zN8zjHlLSWqDy87vV/
w3tlUNci+Qs9h5HjE76+1Zl/EnhOithyGHn74CGrJ3NQV+mnhzWXepKiEqf6
fIdTyCvnDyWmBxJup2Do6c/gy9dq4Uv1gYtjq3zGlYHrL7K1w8YehOO833bR
/ATKmF8Xmh6Gex0P+K406kTYEG7s44oDhGMY7PFwYQZ1kCmJdpqXA79h9Y3/
FvLdsPuXs1vhNyOii0UfI1cc25kxrgA8Kf8X/d0e77dY3czdjdd9eTQkKstS
bgq/ah4/5ptdd8v/PnTRuqDJ5lIhZRwLfn5aj3XOJUfOMICP74irvc11Jw5t
ZgH9BVhvgZf8N04KZc9kyX1MPUI4WmdP2WbjsaH/7WtTYwhXZ0pQ54Z88LNf
bV0s/MDIp8L9rZiHojNJchO/Z4pJoNOtQil3Yb9iQijqsK+GJyB/Ive/vCZx
CHr6XCvohS50p1Jq29t81Nde/XiHfhTmePFSs2DgbLa8tMY4/E/ElTLvOMyR
nIbnLCm8/rLaAUVR6OYaOzUdV+iE7sU/oWrICSfjtbuCgN+yVhGfOZ6EUzSf
+y70AGWfXmhfciyecK54SzTww7/or8u5YZpKioRcsv2eHqJMjeLDbyrQqWjX
1ZMfRRIH3ginnD/IJcutBI9l49yKGwWXTwUfjA7VPs899L+4jLxt0nsWfnr7
2mAeHqzfu3vXmNYBym23373rFd5fs2nPqV7guHjfRtbRhLJGf/+1/UkhHC8/
wyEj8OPlhc8HHkNfPd9+HtvFEnak+VX4dugq99qaldorCSOwa8nBLZj/c2tM
/7a5gY9370zbAp7UOhL3UdqNMoYNawekOZQNSlU8tCCBsB915lz4FkK507+H
6PSlQUcfR5RFniDMA0ZEai9wFvuje5rXfsLpzvbarHqcML++ll1dCj9VWhKi
/gm+8+i0Ov6luM+RYq1nR/cQ9rns5YvbwDN/DjxoCkghTFPjMfsdmLf7LdTk
WwDltih+9Q9BXt0amGlUjPfv77vVsQXnP3mV14dFHxRH30XrIs8pm5Up3MbP
YzfnJwrAz6xaWxeYi1zV9dox7QP0c+jA/oxe8I1IxYIyX+Q2B6v8me3QoQDB
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
vMTjIeYlM09+Gw/ueXlHad5Gj4m/N/X1qKF+N2MVu5zAU/oLbv5cokHZW0T8
jj30fNr7V5pmEYSdMXpj1Bh1yB640V2CHPMgxGrIFfn1mv7sCn34h6nJtjWs
Kd7/o3mdF+rM5/08QsqDsDmCtXlW0JcZQvZTd8GvX5Gb1FwPXxCTeXd0PvKn
3KEPKurg66YqU/G9ZpjrEc2ZHcj9Gszscj/Uv3uuS3qpEuq3pqfxKO4p8tRY
wAW45XuXNOyN78JtAkky8OfSdporlrgQ9mT6nCHtYOSaOfpd68AbPINXSsf3
wdc4yUcfwz02Rzwm1vCnQQ4yPmLQ3zppvj/LAwj36vIZopfhT3JqnWdNPgi/
kVGQlgsfmWeQlp0Iv3RRRWCQi3Wmxs+5O4C6ab4Wqs5FLmXkG5U9ZhJ2ddPK
4O/oh8XJ56pCroSr5/5u78oC4N6NPfUI66jtrtNmwPcW21r+yUdR7uMRbr5J
NPykz+i5DuBvoDB0KNcMuK++OVfdmjCqTnoPF0DPHeq8Ex/IA6/nxi200Z/U
8lCPfQHQpVtvlBTgf5evGhP8yxLGxnLRWnlvwvRyhY5m+xLW61y8WyF8xheF
P6nJyKmvFj9xXol+bkg5IpeLnH/hyqD0BvD4l6IOn2PA1Y0DG68KWVOOb73N
wcmoQ4/S6R555L5bjlJbt4FnFra4eP9AP34emTR0BzzQo+rzS3zi91DPe9eZ
c5APbsVrLQ6kbMKG6iXvgXfhzqtVgsCV9Mdnq9OiKDsvQ8lEHvsbiizWawZP
CpifDi7DubfG37Oxh5/KCFs8vWwtYV6JSDxRgf8TVp7koAT/UdT+t4dRIOzg
yzPz1qKvquy2s8fh13nDf+/wBc+I+X6414B5dFj6PUoaOhxwUuW5I3hLMl03
YBBzxk2aqyy4mHCCQ7u61CY+j6vcp+sAXek03l7rj3z0mXN22BbzJXhFtekM
+psBxbqmBp2yc54ssR96uTt4zw/waNUbjd6l8Klbiv1vypZT5t7sO53vcL+W
bdf0NsInhPf+Fe93hE++WZ1tgfq+fv2x9yl40TNn0LcA56m6zt+VtJIy6taT
GuJxX1Zq4PZD/Lx0WRRRckO+vL0kuQp6yuU7eIObD75dus0lFPjkOSz8sTCE
sjNidvitBB84tDVUEujqIbWUVH871PNraoZgFGFkQsXFzFJJj5vG0GvjQ5Th
D9fS0zEEXz07mKePOj+MeXO6BfXyt5gTNPHvRQwclVVfIJfXeEnOS/QjbP7S
ywl/oIPWfzNFPYCvX7UCLduBryErIxG5NYT5/tJS5yTeNx5uZ+iCvq/svL9Y
eQ1lit487qzEfeLnVR93jCSsbsmhv58n8pmUZksNeKxuy4B4SghlFBr1V9tB
3/i/L9Dqwj3vR+hJ3Iev6qxZExAC/5sYMOqkrQ1e/DAyWg69abxhLEnAUxof
/Otu4Z6Tn71KaMI8CJ55dcUUehszz/mMHOr/+sqllt3AZY7z/Q+vkd8teUb3
6CcQ9rq2bIw0cCgg9nFvYDRlHiyzc1uN+bixuKTjEu6tET65Jd0C9Ql53KiJ
vOIWdZG/ewt4w1UycOLz/w9/reMzgx6+WRMexYJHTyYrXI0pAe6PnpHo0Qff
HrJunI96kCTPfqvIic+BBn323QU8CstYbgVOPwc1PzRH/8dW3xyfDHwJhUWI
ZuHe0dpbd3ZhPu3tPOVH8bo9M679bcH+qiLDPi8tCHNB9srQY+id4ufByl87
kTunX3bLdwJe3AaC5Tn/66ef/z4jcQXvm63/p/4O/Ebrojnb77oRrtzpi3kv
ce9K8VcZC8ErHfN5bobA17Q/VhN8At3TyJwS5A48yLOl5wSh+xs6+4oHJv4u
1snnHY86bZhK4sSBh8s7Gh7m4X42y9gpvNinOLz/+iz09zTvt3cZWDdQwIZ3
VxBhBZRra5UmPn/4pYVpc6dcX7tZfCbgc6tDAqf9oHfO5pvKn1oS5oe3ri8H
OWtVVcQOdeBLr+z3h2T0NcBY5fJS6EX1QIne0jjC7vpPOs8NPDGw4FKj8Q7K
SBzcGDHx7x/uuwVPdUAuKYvVmLcilP6/OiidH9q50we+Velkyw74LVbL1ee+
HvpTZmBzA/X32Rq8sxtzFlB/aFY79ML7utLWiXPVRe941Y37LLANeKiJ+fqR
bv1yYi6GehWslQlh9LZuuzQb51uambNcwYFemPus0PPCZcJ2Bk/dlwNeFfrN
fGiGnsxR5Z3XnU6Llobo9qUib/FcVvmsgXw2lJO0wVITPPRd10wY+f9M8d5b
EujDuQu36WN7nP+kVFOcDGX3cdsl5mHuvk+rDTqVQFnfzXkLJv4+2LTo3o1q
1N1n2897D8yBD9lPCc/hS4Ndt2nMAt6VSh7eeok6Gpp9OjljL+FefBsnUQge
OimVnCGBfNzItesLM6Rsh+X8PlnU1Z1xXpwHH1TTPd3ezYQy3KcWChvAc1wH
iUAVA+ivdkScO3StPck6YBLmbE/13y1u0AW66fhMPvDw0YJ3KlGor7j1wPyZ
8FnT/G2PhGE+pB/o3JLzpCyPVYFJEnAVFNcqyPUGX2YPvIiPJpL8Z84ujAAf
vZ99VlRGnXBbdyZe/AoeNrVZy7cduHtudFXHHrlKRaJm+5At5ZqUqll74Hmp
J2u2T4PfE5F+K3F14u9+eVcq5oLPdVREt5qDl+xs57qHo1/Oxop3VwYRzvO3
e5qXHSPcdwI21teR73J3jfzgBW7W/22fW4PXB8Xw+wiAn7+Y/13BYj3OMfnm
IQnwso7bQl/g92qQw8FHyN+ZyoMx/wrg+6NCvDv3EMPm2vdu3sXwgzeW5q4z
J+y04svxYzmE3fjPyKly4nMTzw8OPVAnjFJM2bRlCdDjIjFLbw9aVGR3sy4O
vosZ/JY/mUO4n1/oZ6qz1KG0/2g7yabMywQD7c/FlPtLRsj+xSHktrWlL4pj
qYNWeVxKZSFlsit3BRUj9/b/dK54Db/CJ6V8K9uXsrrueeJbkN97tErOH0S9
677V2D81gk923CbKDaP/A+yxEhM=
           "], {
            
            TemporalData`DateSpecification[{2011, 1, 3}, {2018, 2, 15}, 
             "BusinessDay", "DayRange"]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            HolidayCalendar -> {"UnitedStates", "NYSE"}, TemporalRegularity -> 
            True}}, True, 11.3], 
        Attributes[HolidayCalendar] = {ReadProtected}, 
        Options[HolidayCalendar] = {}, $CellContext`n$$ = 10}; 
      Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]]}, {2,"2"->
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 85, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 5, 100, 1}}, Typeset`size$$ = {
     500., {165., 169.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = False, $CellContext`n$2246503$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 5}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$2246503$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> ListPlot[
         CorrelationFunction[$CellContext`IBM$returns^2, {
          2, $CellContext`n$$}], Filling -> Axis, ImageSize -> 500, Joined -> 
         True, PlotRange -> {0, All}, PlotRange -> All, PlotLabel -> 
         "ACF of IBM Squared Returns", Epilog -> {Dashed, 
           
           Line[{{0, $CellContext`IBM$Sq$level}, {$CellContext`n$$, \
$CellContext`IBM$Sq$level}}]}], 
       "Specifications" :> {{$CellContext`n$$, 5, 100, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{545., {210., 216.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({$CellContext`IBM$returns = 
        TemporalData[TimeSeries, {CompressedData["
1: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
sW7xjdaGNBvCrK0seGCAnDTjuMfkGvjBGVsPHFUzwXliVRu3ghfMRHrEHqHv
7imbmdJwwqq1OufrQV9nMrbLXV0pW2I950go+HKTU8zN8zjHlLSWqDy87vV/
w3tlUNci+Qs9h5HjE76+1Zl/EnhOithyGHn74CGrJ3NQV+mnhzWXepKiEqf6
fIdTyCvnDyWmBxJup2Do6c/gy9dq4Uv1gYtjq3zGlYHrL7K1w8YehOO833bR
/ATKmF8Xmh6Gex0P+K406kTYEG7s44oDhGMY7PFwYQZ1kCmJdpqXA79h9Y3/
FvLdsPuXs1vhNyOii0UfI1cc25kxrgA8Kf8X/d0e77dY3czdjdd9eTQkKstS
bgq/ah4/5ptdd8v/PnTRuqDJ5lIhZRwLfn5aj3XOJUfOMICP74irvc11Jw5t
ZgH9BVhvgZf8N04KZc9kyX1MPUI4WmdP2WbjsaH/7WtTYwhXZ0pQ54Z88LNf
bV0s/MDIp8L9rZiHojNJchO/Z4pJoNOtQil3Yb9iQijqsK+GJyB/Ive/vCZx
CHr6XCvohS50p1Jq29t81Nde/XiHfhTmePFSs2DgbLa8tMY4/E/ElTLvOMyR
nIbnLCm8/rLaAUVR6OYaOzUdV+iE7sU/oWrICSfjtbuCgN+yVhGfOZ6EUzSf
+y70AGWfXmhfciyecK54SzTww7/or8u5YZpKioRcsv2eHqJMjeLDbyrQqWjX
1ZMfRRIH3ginnD/IJcutBI9l49yKGwWXTwUfjA7VPs899L+4jLxt0nsWfnr7
2mAeHqzfu3vXmNYBym23373rFd5fs2nPqV7guHjfRtbRhLJGf/+1/UkhHC8/
wyEj8OPlhc8HHkNfPd9+HtvFEnak+VX4dugq99qaldorCSOwa8nBLZj/c2tM
/7a5gY9370zbAp7UOhL3UdqNMoYNawekOZQNSlU8tCCBsB915lz4FkK507+H
6PSlQUcfR5RFniDMA0ZEai9wFvuje5rXfsLpzvbarHqcML++ll1dCj9VWhKi
/gm+8+i0Ov6luM+RYq1nR/cQ9rns5YvbwDN/DjxoCkghTFPjMfsdmLf7LdTk
WwDltih+9Q9BXt0amGlUjPfv77vVsQXnP3mV14dFHxRH30XrIs8pm5Up3MbP
YzfnJwrAz6xaWxeYi1zV9dox7QP0c+jA/oxe8I1IxYIyX+Q2B6v8me3QoQDB
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
vMTjIeYlM09+Gw/ueXlHad5Gj4m/N/X1qKF+N2MVu5zAU/oLbv5cokHZW0T8
jj30fNr7V5pmEYSdMXpj1Bh1yB640V2CHPMgxGrIFfn1mv7sCn34h6nJtjWs
Kd7/o3mdF+rM5/08QsqDsDmCtXlW0JcZQvZTd8GvX5Gb1FwPXxCTeXd0PvKn
3KEPKurg66YqU/G9ZpjrEc2ZHcj9Gszscj/Uv3uuS3qpEuq3pqfxKO4p8tRY
wAW45XuXNOyN78JtAkky8OfSdporlrgQ9mT6nCHtYOSaOfpd68AbPINXSsf3
wdc4yUcfwz02Rzwm1vCnQQ4yPmLQ3zppvj/LAwj36vIZopfhT3JqnWdNPgi/
kVGQlgsfmWeQlp0Iv3RRRWCQi3Wmxs+5O4C6ab4Wqs5FLmXkG5U9ZhJ2ddPK
4O/oh8XJ56pCroSr5/5u78oC4N6NPfUI66jtrtNmwPcW21r+yUdR7uMRbr5J
NPykz+i5DuBvoDB0KNcMuK++OVfdmjCqTnoPF0DPHeq8Ex/IA6/nxi200Z/U
8lCPfQHQpVtvlBTgf5evGhP8yxLGxnLRWnlvwvRyhY5m+xLW61y8WyF8xheF
P6nJyKmvFj9xXol+bkg5IpeLnH/hyqD0BvD4l6IOn2PA1Y0DG68KWVOOb73N
wcmoQ4/S6R555L5bjlJbt4FnFra4eP9AP34emTR0BzzQo+rzS3zi91DPe9eZ
c5APbsVrLQ6kbMKG6iXvgXfhzqtVgsCV9Mdnq9OiKDsvQ8lEHvsbiizWawZP
CpifDi7DubfG37Oxh5/KCFs8vWwtYV6JSDxRgf8TVp7koAT/UdT+t4dRIOzg
yzPz1qKvquy2s8fh13nDf+/wBc+I+X6414B5dFj6PUoaOhxwUuW5I3hLMl03
YBBzxk2aqyy4mHCCQ7u61CY+j6vcp+sAXek03l7rj3z0mXN22BbzJXhFtekM
+psBxbqmBp2yc54ssR96uTt4zw/waNUbjd6l8Klbiv1vypZT5t7sO53vcL+W
bdf0NsInhPf+Fe93hE++WZ1tgfq+fv2x9yl40TNn0LcA56m6zt+VtJIy6taT
GuJxX1Zq4PZD/Lx0WRRRckO+vL0kuQp6yuU7eIObD75dus0lFPjkOSz8sTCE
sjNidvitBB84tDVUEujqIbWUVH871PNraoZgFGFkQsXFzFJJj5vG0GvjQ5Th
D9fS0zEEXz07mKePOj+MeXO6BfXyt5gTNPHvRQwclVVfIJfXeEnOS/QjbP7S
ywl/oIPWfzNFPYCvX7UCLduBryErIxG5NYT5/tJS5yTeNx5uZ+iCvq/svL9Y
eQ1lit487qzEfeLnVR93jCSsbsmhv58n8pmUZksNeKxuy4B4SghlFBr1V9tB
3/i/L9Dqwj3vR+hJ3Iev6qxZExAC/5sYMOqkrQ1e/DAyWg69abxhLEnAUxof
/Otu4Z6Tn71KaMI8CJ55dcUUehszz/mMHOr/+sqllt3AZY7z/Q+vkd8teUb3
6CcQ9rq2bIw0cCgg9nFvYDRlHiyzc1uN+bixuKTjEu6tET65Jd0C9Ql53KiJ
vOIWdZG/ewt4w1UycOLz/w9/reMzgx6+WRMexYJHTyYrXI0pAe6PnpHo0Qff
HrJunI96kCTPfqvIic+BBn323QU8CstYbgVOPwc1PzRH/8dW3xyfDHwJhUWI
ZuHe0dpbd3ZhPu3tPOVH8bo9M679bcH+qiLDPi8tCHNB9srQY+id4ufByl87
kTunX3bLdwJe3AaC5Tn/66ef/z4jcQXvm63/p/4O/Ebrojnb77oRrtzpi3kv
ce9K8VcZC8ErHfN5bobA17Q/VhN8At3TyJwS5A48yLOl5wSh+xs6+4oHJv4u
1snnHY86bZhK4sSBh8s7Gh7m4X42y9gpvNinOLz/+iz09zTvt3cZWDdQwIZ3
VxBhBZRra5UmPn/4pYVpc6dcX7tZfCbgc6tDAqf9oHfO5pvKn1oS5oe3ri8H
OWtVVcQOdeBLr+z3h2T0NcBY5fJS6EX1QIne0jjC7vpPOs8NPDGw4FKj8Q7K
SBzcGDHx7x/uuwVPdUAuKYvVmLcilP6/OiidH9q50we+Velkyw74LVbL1ee+
HvpTZmBzA/X32Rq8sxtzFlB/aFY79ML7utLWiXPVRe941Y37LLANeKiJ+fqR
bv1yYi6GehWslQlh9LZuuzQb51uambNcwYFemPus0PPCZcJ2Bk/dlwNeFfrN
fGiGnsxR5Z3XnU6Llobo9qUib/FcVvmsgXw2lJO0wVITPPRd10wY+f9M8d5b
EujDuQu36WN7nP+kVFOcDGX3cdsl5mHuvk+rDTqVQFnfzXkLJv4+2LTo3o1q
1N1n2897D8yBD9lPCc/hS4Ndt2nMAt6VSh7eeok6Gpp9OjljL+FefBsnUQge
OimVnCGBfNzItesLM6Rsh+X8PlnU1Z1xXpwHH1TTPd3ezYQy3KcWChvAc1wH
iUAVA+ivdkScO3StPck6YBLmbE/13y1u0AW66fhMPvDw0YJ3KlGor7j1wPyZ
8FnT/G2PhGE+pB/o3JLzpCyPVYFJEnAVFNcqyPUGX2YPvIiPJpL8Z84ujAAf
vZ99VlRGnXBbdyZe/AoeNrVZy7cduHtudFXHHrlKRaJm+5At5ZqUqll74Hmp
J2u2T4PfE5F+K3F14u9+eVcq5oLPdVREt5qDl+xs57qHo1/Oxop3VwYRzvO3
e5qXHSPcdwI21teR73J3jfzgBW7W/22fW4PXB8Xw+wiAn7+Y/13BYj3OMfnm
IQnwso7bQl/g92qQw8FHyN+ZyoMx/wrg+6NCvDv3EMPm2vdu3sXwgzeW5q4z
J+y04svxYzmE3fjPyKly4nMTzw8OPVAnjFJM2bRlCdDjIjFLbw9aVGR3sy4O
vosZ/JY/mUO4n1/oZ6qz1KG0/2g7yabMywQD7c/FlPtLRsj+xSHktrWlL4pj
qYNWeVxKZSFlsit3BRUj9/b/dK54Db/CJ6V8K9uXsrrueeJbkN97tErOH0S9
677V2D81gk923CbKDaP/A+yxEhM=
           "], {
            
            TemporalData`DateSpecification[{2011, 1, 3}, {2018, 2, 15}, 
             "BusinessDay", "DayRange"]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            HolidayCalendar -> {"UnitedStates", "NYSE"}, TemporalRegularity -> 
            True}}, True, 11.3], 
        Attributes[HolidayCalendar] = {ReadProtected}, 
        Options[HolidayCalendar] = {}, $CellContext`n$$ = 
        10, $CellContext`IBM$Sq$level = 2/1795}; Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]]}, {3,"3"->
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 83, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 5, 100, 1}}, Typeset`size$$ = {
     500., {164., 168.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = False, $CellContext`n$2246521$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 5}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$2246521$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> ListPlot[
         CorrelationFunction[
          Abs[$CellContext`SP$returns], {2, $CellContext`n$$}], Filling -> 
         Axis, ImageSize -> 500, PlotStyle -> Red, Joined -> True, 
         PlotRange -> {0, All}, PlotRange -> All, PlotLabel -> 
         "ACF of SP 500 Absolute Returns"], 
       "Specifications" :> {{$CellContext`n$$, 5, 100, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{545., {209., 215.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({$CellContext`SP$returns = 
        TemporalData[TimeSeries, {CompressedData["
1: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
zK/2Zkh7Cr7P55Sregf1p3K3bgjRxX40tCmWzwu5fe6Fhmjgofn0pMIe8DlT
0ye7ypEypjNIbrM7cPxv+NyUTYRJ+3hrTjt4uqb3zvKv4I+ktdnuYeTPrPyg
oHKcK/pubogxdCaH+NBi5Ip3ba6+TSGEk7fOquoEdEBpo1TlY+QMz7qbJWXo
z2n5Dsk1yGVhfwJcmz2gd69f+y9BLtLZ8LgnGjohmSkgEokcUps5sNoNufz0
cstNC4ED4Uqp58rYb3w4l/XGJ/qm3+FsC948C5NT9QqceP9RvYODvSz58Pzc
x/Ar8QyBr7PA1///E9USumYN9CzofcrfNOSGTMHn9/XBm4ClPTsNMK+c8ojK
fuwnzpIXNNLwuvCyx5EZuO8O/9u5/PCLhruXgvuAT3Gnk38OAHfSwX9fiOnA
V85N93CAzuwaTgo4Dj3XsDeYtRI85sp5XksCvkfkFs0vVyfMvBVnTtcg94tZ
FqvsxvMl7boX314N/zULm1SpBdx98viTgnt8XpmeqIS+iMi1ng8DLy97t4+7
wIcFyypbJnKCspU5nfj9eZ2BmQ1rQZjNzx0776H/nJfJIrexz6faaHj6bwZf
SfaJQOTDAem/t0rhr1uEtMlizHdvTgU/TyJhzb5ePsKgXuGHG9oiOfADd51X
7eDJB1rU9BK6M+1+qel17CEj3RsmKQE3y79+66+HPxUeGRKZpgy9rtm/pww5
/NaYbuNyzEFYuGPwNHLZ/sG7xbF7oFu91jMCbSjnweAXMxfwrapvQe1P9Hvv
zt551qiTfa7z/cwO9H3qZf8K+I7Y0qeVV9GfofK0NY1GyNUCy60FoDfiU5xW
B6MOwU+v0t/h/JY9Mcf3oJ+DCxZF8oJfyl++fcsHPy7uPxo0H+edzQ65HYt+
Gl5ZLRkOHdTZYbLuoSdlm9ySbr4PpcyAkGTPSdSb2b6+rRH3lHl4vH8RcPn2
pK/VD/AlN9160ktnykb5exhtAP+MrYISv6G/QY8yuG0E/PiyZdMiPD//3tRd
E7m+cXo91xa44bM8uyXUGPh5/juoDbmnsXZgmsg27OsjLfoU82Oqnr0vmoxc
dHCPQjPuq8H3WzQG+lNySv/ODeAhqm43n4op9vmEgrhU8JivYIFEpBbtiThp
ZHAc/tcSHv5kA/Z/787PWyqRn95HyNyXAj5s0nlzJNBX9e8nRRwcCHN8pVfl
+om/F8kQkTVXgN/2NadUwZdGBH+OS6tRRntYuG9SBGHqZ80rtcZ5r0X51b/j
+4cjK2fVAeca6jb0shn8aSTteyT2m0JRAz959LXl2fAmftQ9KvL9TAjO1x2T
e2KIz684iTeYYj6Gux6XZskjhzcKm4tN9Nf53WcP9Ptst17GPPhAjpRYTTf2
nXV+Wj/SJ85Xt9W6okA4HqNKYRN/B9Yqe/YnP3L+2srMvnzwPX9s0X+L8HPK
n4NXfYavDdgHhT82IZwUXfJz7cTf978ZWLkJvsDZce/8fn3k2SstuafA/zWj
C8M+AkeSeZkZ19GXonmfo6XRT9Z40393BDD/mO512ZhLt2p/AQ/yaMuSNd+X
SmOf3HWlawHy5qhQRqGH0cT7Ke17vkEvbIpcDGPkgac5K9hXBpR5NPZa4Dfw
rafaJNmlTRlP/SxZYfQ91WXWSWnwSGCqq18f5mmjGBT8Hc//ka7fOWY+8XdY
tz0b7Cd+f25m0raRMjsKyupLknAP5WeSb6F3w7aDT9Lgk6aRdTtNOfCZFf0m
GiaEWeV7yvk49pjWoZK5s6GPQ7lzDgsCZzZlPW0W+Pk3AUHXdKHXW3+aBIzD
v3XUH0Q7QxcKLROuf4D/DfT2ixdgv/nWfGzPO8ztnn5Xjyd0JuyEe7kqdDjb
WTfnUzj0KtjRtQi5pPBE4S77FahTTfOyA/AYfUlyUB48yJJ5fi0ZeuilZ7Xu
sQ5h4tn4aj7ovanU1JJtE7k3kyejA/VWHtkWsQ647mlM2dGkAR635XO/Q18L
HTzmbtIkjJr3ytENwAu7cpT3w2zCaBwIOXob/EisXhZThXvlzWtbbQ5cSvXW
WVfBN/Z/dnC5BJ8Z4mQv9kCfPuh9FV2C+nnzZZdnY05zZ8uapiJnZjZk+fIi
t/HdUfJPtMK+cmFdTTHy5MgncfF6PejTWaH1l8DTymBrZjr0QVlxtowx7pH6
Y9ObcOQ37dTJ+4f9CKuUlOqr6UWZyiVN/w6ZEzZzQV+KOPapnjiJqlY8X+VV
VVbsxO/5VLPEJn5/3VgVffkb8Cd2XPuB6MSc3/atfyuDvFJ1id8a/dy9pnBy
28ReLXpHtUkGOljPlTyDPn3vFuQ8QR6quhP+xwV+odxofm4hdPrpL8G8D3aU
bTHUmVeMfFd+VVesCc9b/1Ve4DD0u0VJOG8CLwoXrvVO7Ccfm0JOHYUPNR4q
/fof5sms9Kxfo0LZnt2M/yrgQ+Y/w0x5Zcryvqlxrcc5szqu0KPASY9QjrAq
+te1c92MYtTB3jdg3y+kzL4bFblTobudfC8aksCPmJ6nfzdB9zWWOp22AR97
Cre8G1ej7Ozh73kX0Sd26b+lttjLvpvnGfyCHin9u2YVMPH/dTnMeiUJ3eAT
6FDWQF1e+XW1vNAf4U2nDU3wXOG7t98MboduD0iZCU7wtHPO503+lNX5amDO
A/0YiHp2ShH3C3a5u5sFPgbXpXs9Rm6XTFKw2QJ8m/Iuf2OK3NKVEzBFBTg0
SRM3nPg+l60JOgV9zLB7bffKnbIcszZ5Hex5ys+2FoXCP9KMsjg/kQ9/MxXb
oyf+fv9fxu/HwJfer3OuZsjLI3axy+k2wurzhMtzYgljn5w7lh5KOe83ay7a
hX2eUztvYCp4bhryMXmLJpXMHky+fOMo5f69kr/pTwnlBqrs4+vCfuLYdT4h
zI96ycer/d54krKTHs1ryZr4/1dOfScR2MNa235fc3Ik7LhCBPVJIGxF+5vy
G3hej9Od+mBlwj4TEpD+FEj/B+7/spg=
           "], {
            
            TemporalData`DateSpecification[{2011, 1, 3}, {2018, 2, 14}, 
             "BusinessDay", "DayRange"]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            HolidayCalendar -> {"UnitedStates", "NYSE"}, TemporalRegularity -> 
            True}}, True, 11.3], 
        Attributes[HolidayCalendar] = {ReadProtected}, 
        Options[HolidayCalendar] = {}, $CellContext`n$$ = 10}; 
      Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]]}, {4,"4"->
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 76, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 5, 100, 1}}, Typeset`size$$ = {
     500., {166., 171.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = False, $CellContext`n$2246539$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 5}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$2246539$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> ListPlot[
         CorrelationFunction[$CellContext`SP$returns^2, {
          2, $CellContext`n$$}], Filling -> Axis, ImageSize -> 500, PlotStyle -> 
         Red, Joined -> True, PlotRange -> {0, All}, PlotRange -> All, 
         PlotLabel -> "ACF of SP 500 Squared Returns", Epilog -> {Dashed, 
           
           Line[{{0, $CellContext`SP$Sq$level}, {$CellContext`n$$, \
$CellContext`SP$Sq$level}}]}], 
       "Specifications" :> {{$CellContext`n$$, 5, 100, 1}}, "Options" :> {}, 
       "DefaultOptions" :> {}],
      ImageSizeCache->{545., {211., 217.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>({$CellContext`SP$returns = 
        TemporalData[TimeSeries, {CompressedData["
1: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
zK/2Zkh7Cr7P55Sregf1p3K3bgjRxX40tCmWzwu5fe6Fhmjgofn0pMIe8DlT
0ye7ypEypjNIbrM7cPxv+NyUTYRJ+3hrTjt4uqb3zvKv4I+ktdnuYeTPrPyg
oHKcK/pubogxdCaH+NBi5Ip3ba6+TSGEk7fOquoEdEBpo1TlY+QMz7qbJWXo
z2n5Dsk1yGVhfwJcmz2gd69f+y9BLtLZ8LgnGjohmSkgEokcUps5sNoNufz0
cstNC4ED4Uqp58rYb3w4l/XGJ/qm3+FsC948C5NT9QqceP9RvYODvSz58Pzc
x/Ar8QyBr7PA1///E9USumYN9CzofcrfNOSGTMHn9/XBm4ClPTsNMK+c8ojK
fuwnzpIXNNLwuvCyx5EZuO8O/9u5/PCLhruXgvuAT3Gnk38OAHfSwX9fiOnA
V85N93CAzuwaTgo4Dj3XsDeYtRI85sp5XksCvkfkFs0vVyfMvBVnTtcg94tZ
FqvsxvMl7boX314N/zULm1SpBdx98viTgnt8XpmeqIS+iMi1ng8DLy97t4+7
wIcFyypbJnKCspU5nfj9eZ2BmQ1rQZjNzx0776H/nJfJIrexz6faaHj6bwZf
SfaJQOTDAem/t0rhr1uEtMlizHdvTgU/TyJhzb5ePsKgXuGHG9oiOfADd51X
7eDJB1rU9BK6M+1+qel17CEj3RsmKQE3y79+66+HPxUeGRKZpgy9rtm/pww5
/NaYbuNyzEFYuGPwNHLZ/sG7xbF7oFu91jMCbSjnweAXMxfwrapvQe1P9Hvv
zt551qiTfa7z/cwO9H3qZf8K+I7Y0qeVV9GfofK0NY1GyNUCy60FoDfiU5xW
B6MOwU+v0t/h/JY9Mcf3oJ+DCxZF8oJfyl++fcsHPy7uPxo0H+edzQ65HYt+
Gl5ZLRkOHdTZYbLuoSdlm9ySbr4PpcyAkGTPSdSb2b6+rRH3lHl4vH8RcPn2
pK/VD/AlN9160ktnykb5exhtAP+MrYISv6G/QY8yuG0E/PiyZdMiPD//3tRd
E7m+cXo91xa44bM8uyXUGPh5/juoDbmnsXZgmsg27OsjLfoU82Oqnr0vmoxc
dHCPQjPuq8H3WzQG+lNySv/ODeAhqm43n4op9vmEgrhU8JivYIFEpBbtiThp
ZHAc/tcSHv5kA/Z/787PWyqRn95HyNyXAj5s0nlzJNBX9e8nRRwcCHN8pVfl
+om/F8kQkTVXgN/2NadUwZdGBH+OS6tRRntYuG9SBGHqZ80rtcZ5r0X51b/j
+4cjK2fVAeca6jb0shn8aSTteyT2m0JRAz959LXl2fAmftQ9KvL9TAjO1x2T
e2KIz684iTeYYj6Gux6XZskjhzcKm4tN9Nf53WcP9Ptst17GPPhAjpRYTTf2
nXV+Wj/SJ85Xt9W6okA4HqNKYRN/B9Yqe/YnP3L+2srMvnzwPX9s0X+L8HPK
n4NXfYavDdgHhT82IZwUXfJz7cTf978ZWLkJvsDZce/8fn3k2SstuafA/zWj
C8M+AkeSeZkZ19GXonmfo6XRT9Z40393BDD/mO512ZhLt2p/AQ/yaMuSNd+X
SmOf3HWlawHy5qhQRqGH0cT7Ke17vkEvbIpcDGPkgac5K9hXBpR5NPZa4Dfw
rafaJNmlTRlP/SxZYfQ91WXWSWnwSGCqq18f5mmjGBT8Hc//ka7fOWY+8XdY
tz0b7Cd+f25m0raRMjsKyupLknAP5WeSb6F3w7aDT9Lgk6aRdTtNOfCZFf0m
GiaEWeV7yvk49pjWoZK5s6GPQ7lzDgsCZzZlPW0W+Pk3AUHXdKHXW3+aBIzD
v3XUH0Q7QxcKLROuf4D/DfT2ixdgv/nWfGzPO8ztnn5Xjyd0JuyEe7kqdDjb
WTfnUzj0KtjRtQi5pPBE4S77FahTTfOyA/AYfUlyUB48yJJ5fi0ZeuilZ7Xu
sQ5h4tn4aj7ovanU1JJtE7k3kyejA/VWHtkWsQ647mlM2dGkAR635XO/Q18L
HTzmbtIkjJr3ytENwAu7cpT3w2zCaBwIOXob/EisXhZThXvlzWtbbQ5cSvXW
WVfBN/Z/dnC5BJ8Z4mQv9kCfPuh9FV2C+nnzZZdnY05zZ8uapiJnZjZk+fIi
t/HdUfJPtMK+cmFdTTHy5MgncfF6PejTWaH1l8DTymBrZjr0QVlxtowx7pH6
Y9ObcOQ37dTJ+4f9CKuUlOqr6UWZyiVN/w6ZEzZzQV+KOPapnjiJqlY8X+VV
VVbsxO/5VLPEJn5/3VgVffkb8Cd2XPuB6MSc3/atfyuDvFJ1id8a/dy9pnBy
28ReLXpHtUkGOljPlTyDPn3vFuQ8QR6quhP+xwV+odxofm4hdPrpL8G8D3aU
bTHUmVeMfFd+VVesCc9b/1Ve4DD0u0VJOG8CLwoXrvVO7Ccfm0JOHYUPNR4q
/fof5sms9Kxfo0LZnt2M/yrgQ+Y/w0x5Zcryvqlxrcc5szqu0KPASY9QjrAq
+te1c92MYtTB3jdg3y+kzL4bFblTobudfC8aksCPmJ6nfzdB9zWWOp22AR97
Cre8G1ej7Ozh73kX0Sd26b+lttjLvpvnGfyCHin9u2YVMPH/dTnMeiUJ3eAT
6FDWQF1e+XW1vNAf4U2nDU3wXOG7t98MboduD0iZCU7wtHPO503+lNX5amDO
A/0YiHp2ShH3C3a5u5sFPgbXpXs9Rm6XTFKw2QJ8m/Iuf2OK3NKVEzBFBTg0
SRM3nPg+l60JOgV9zLB7bffKnbIcszZ5Hex5ys+2FoXCP9KMsjg/kQ9/MxXb
oyf+fv9fxu/HwJfer3OuZsjLI3axy+k2wurzhMtzYgljn5w7lh5KOe83ay7a
hX2eUztvYCp4bhryMXmLJpXMHky+fOMo5f69kr/pTwnlBqrs4+vCfuLYdT4h
zI96ycer/d54krKTHs1ryZr4/1dOfScR2MNa235fc3Ik7LhCBPVJIGxF+5vy
G3hej9Od+mBlwj4TEpD+FEj/B+7/spg=
           "], {
            
            TemporalData`DateSpecification[{2011, 1, 3}, {2018, 2, 14}, 
             "BusinessDay", "DayRange"]}, 1, {"Continuous", 1}, {
           "Discrete", 1}, 1, {
           ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
            HolidayCalendar -> {"UnitedStates", "NYSE"}, TemporalRegularity -> 
            True}}, True, 11.3], 
        Attributes[HolidayCalendar] = {ReadProtected}, 
        Options[HolidayCalendar] = {}, $CellContext`n$$ = 
        10, $CellContext`SP$Sq$level = 1/897}; Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]]}}, 4]], "Output",
 CellChangeTimes->{
  3.739215985689727*^9, 3.7392171971680527`*^9, 3.7392172835655537`*^9, 
   3.739217341551345*^9, 3.739224818684918*^9, 3.739285688156953*^9, 
   3.739285734814603*^9, 3.739288972343048*^9, 3.739289052742158*^9, 
   3.7392891021342993`*^9, 3.739289133819631*^9, 3.73928918376236*^9, 
   3.7392892532326107`*^9, {3.7392935731760073`*^9, 3.7392935818042192`*^9}},
 CellLabel->
  "Out[1876]=",ExpressionUUID->"958aa3c3-f7c7-43c1-bdc6-00cfcf358555"],

Cell["\<\
To test for series dependency, the Ljung-Box multiplier test applied to the \
residuals and squared residuals.   The p-values of the test statistics \
demonstrate mathematically that there is no significant correlation in the \
original time series residuals, but there is dependency as shown in the \
p-values for the squared residuals series.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739206397998611*^9, 
   3.73920651255858*^9}, {3.739206569044722*^9, 3.7392067912940807`*^9}, {
   3.739206830519586*^9, 3.739206898377775*^9}, {3.739206934520834*^9, 
   3.739207061658433*^9}, {3.739207094942279*^9, 3.7392070980211*^9}, {
   3.73920713014456*^9, 3.7392072020037937`*^9}, {3.7392072427076406`*^9, 
   3.7392072488333817`*^9}, {3.739209508754882*^9, 3.739209636910304*^9}, {
   3.739210859722971*^9, 3.739210859951313*^9}, {3.7392136728662167`*^9, 
   3.739213673174543*^9}, {3.7392173721178503`*^9, 3.739217408172806*^9}, {
   3.73922452286239*^9, 3.739224565248989*^9}, 3.739224628833312*^9, {
   3.739224696696406*^9, 3.739224740083666*^9}, {3.739225658347591*^9, 
   3.7392256810620937`*^9}, {3.739228483073474*^9, 3.739228487985304*^9}, {
   3.7392843696258783`*^9, 
   3.7392844880445013`*^9}},ExpressionUUID->"b51f7a5e-47af-4ba6-a2cb-\
9658a9b7407b"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739285292285101*^9, 3.739285299690446*^9}},
 CellLabel->
  "In[1877]:=",ExpressionUUID->"95a04a3f-705f-47c3-a3ec-b384e28d921d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
   "Show", " ", "autocorrelations", " ", "functions", " ", "for", " ", 
    "residuals"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"Print", "[", "\"\<Time series residuals\>\"", "]"}], "\n", "\n", 
   RowBox[{"TabView", "[", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"AutocorrelationTest", "[", 
       RowBox[{"IBM$returns", ",", "Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<TestDataTable\>\"", ",", "All"}], "}"}]}], "]"}], ",", 
      "\n", "\t", 
      RowBox[{"AutocorrelationTest", "[", 
       RowBox[{"SP$returns", ",", "Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<TestDataTable\>\"", ",", "All"}], "}"}]}], "]"}]}], 
     "\n", "\t", "}"}], "]"}]}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7392813496365843`*^9, 3.7392813520209217`*^9}, {
   3.739284502926236*^9, 3.739284531284446*^9}, {3.739285169899418*^9, 
   3.7392852279460297`*^9}, 3.739285299691764*^9, {3.7392853632089767`*^9, 
   3.739285364398484*^9}, {3.739289904577015*^9, 3.739289907815258*^9}},
 CellLabel->
  "In[1878]:=",ExpressionUUID->"5c06fbc7-977e-4b67-8040-d9054d10bc90"]
}, Closed]],

Cell[BoxData["\<\"Time series residuals\"\>"], "Print",
 CellChangeTimes->{
  3.7392853673423843`*^9, {3.7392935742062387`*^9, 3.739293582951029*^9}},
 CellLabel->
  "During evaluation of \
In[1878]:=",ExpressionUUID->"242f3e89-386d-4602-ab52-cc5d3dacd47d"],

Cell[BoxData[
 TabViewBox[{{1,"1"->
  StyleBox[
   TagBox[GridBox[{
      {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
      {"\<\"Box\[Hyphen]Pierce\"\>", "10.434114757762496`", 
       "0.23586828995447293`"},
      {"\<\"Ljung\[Hyphen]Box\"\>", "10.469348379308688`", 
       "0.2336156772848101`"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
     GridBoxDividers->{
      "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
       "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], "DialogStyle",
   StripOnInput->False]}, {2,"2"->
  StyleBox[
   TagBox[GridBox[{
      {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
      {"\<\"Box\[Hyphen]Pierce\"\>", "32.39073546668948`", 
       "0.0000792642920253067`"},
      {"\<\"Ljung\[Hyphen]Box\"\>", "32.49935777264699`", 
       "0.00007578271916688124`"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
     GridBoxDividers->{
      "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
       "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], "DialogStyle",
   StripOnInput->False]}}, 1]], "Output",
 CellChangeTimes->{
  3.7392813674608297`*^9, 3.739285101653648*^9, {3.739285207118535*^9, 
   3.739285229870442*^9}, 3.739285367494841*^9, {3.7392935745279827`*^9, 
   3.739293583271339*^9}},
 CellLabel->
  "Out[1879]=",ExpressionUUID->"82a9a5b9-bf95-4143-9c33-58cefde35fd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["          ", "Text",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["Tab 1: IBM.  Tab 2: S&P 500", "Text",
  FontSize->12,
  FontWeight->"Plain",
  FontSlant->"Italic"]
}], "Subsubsubsubsection",
 CellChangeTimes->{{3.73922463083934*^9, 3.7392246386569967`*^9}, {
  3.739224671977847*^9, 3.739224683877578*^9}, {3.739285279874134*^9, 
  3.739285287568264*^9}},ExpressionUUID->"76ea0370-905f-4b74-a30e-\
2141d5fbc127"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739285826448504*^9, 3.739285833319087*^9}},
 CellLabel->
  "In[1880]:=",ExpressionUUID->"dffd1664-5ec0-4be7-801f-a945ed78a165"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
   "Show", " ", "autocorrelations", " ", "functions", " ", "for", " ", 
    "squared", " ", "residuals"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"Print", "[", "\"\<Time series squared residuals\>\"", "]"}], "\n",
    "\n", 
   RowBox[{"TabView", "[", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"AutocorrelationTest", "[", 
       RowBox[{
        RowBox[{"IBM$returns", "^", "2"}], ",", "Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<TestDataTable\>\"", ",", "All"}], "}"}]}], "]"}], ",", 
      "\n", "\t", 
      RowBox[{"AutocorrelationTest", "[", 
       RowBox[{
        RowBox[{"SP$returns", "^", "2"}], ",", "Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<TestDataTable\>\"", ",", "All"}], "}"}]}], "]"}]}], 
     "\n", "\t", "}"}], "]"}]}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739281356157938*^9, 3.739281358902091*^9}, {
  3.7392845241343107`*^9, 3.739284539243166*^9}, {3.739285514340354*^9, 
  3.739285520843239*^9}, {3.7392858103146353`*^9, 3.739285833320796*^9}, {
  3.739289880273965*^9, 3.739289897272728*^9}},
 CellLabel->
  "In[1881]:=",ExpressionUUID->"e44ecc53-63e3-4a7d-9b80-dd3e32b66ce4"]
}, Closed]],

Cell[BoxData["\<\"Time series squared residuals\"\>"], "Print",
 CellChangeTimes->{
  3.7392858487915897`*^9, {3.739293574605056*^9, 3.739293583387454*^9}},
 CellLabel->
  "During evaluation of \
In[1881]:=",ExpressionUUID->"5016d618-d18c-4cc6-ac7b-39b3097df972"],

Cell[BoxData[
 TabViewBox[{{1,"1"->
  StyleBox[
   TagBox[GridBox[{
      {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
      {"\<\"Box\[Hyphen]Pierce\"\>", "17.150957013148286`", 
       "0.028575003989537478`"},
      {"\<\"Ljung\[Hyphen]Box\"\>", "17.20006574964177`", 
       "0.028091938709749065`"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
     GridBoxDividers->{
      "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
       "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], "DialogStyle",
   StripOnInput->False]}, {2,"2"->
  StyleBox[
   TagBox[GridBox[{
      {"\<\"\"\>", "\<\"Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
      {"\<\"Box\[Hyphen]Pierce\"\>", "1005.8198072356759`", 
       "8.277830573375647`*^-212"},
      {"\<\"Ljung\[Hyphen]Box\"\>", "1008.8610566750416`", 
       "1.82575839431943`*^-212"}
     },
     AutoDelete->False,
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
     GridBoxDividers->{
      "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
       "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"], "DialogStyle",
   StripOnInput->False]}}, 1]], "Output",
 CellChangeTimes->{{3.7392808630487623`*^9, 3.739280970210576*^9}, 
   3.739281080097516*^9, {3.7392811832331*^9, 3.73928119176845*^9}, {
   3.7392812377896357`*^9, 3.739281255170289*^9}, 3.739281361520623*^9, 
   3.7392851040487213`*^9, 3.739285551252431*^9, 3.739285849189986*^9, {
   3.739293574968564*^9, 3.7392935838747387`*^9}},
 CellLabel->
  "Out[1882]=",ExpressionUUID->"81756118-2153-4bf0-87b5-bb11d1047016"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["          ", "Text",
  FontSize->12,
  FontWeight->"Plain"],
 StyleBox["Tab 1: IBM.  Tab 2: S&P 500", "Text",
  FontSize->12,
  FontWeight->"Plain",
  FontSlant->"Italic"]
}], "Subsubsubsubsection",
 CellChangeTimes->{{3.73922463083934*^9, 3.7392246386569967`*^9}, {
  3.739224671977847*^9, 3.739224683877578*^9}, {3.739285279874134*^9, 
  3.739285287568264*^9}},ExpressionUUID->"8dcebd82-7af7-4314-9ff2-\
ce82a7454f16"],

Cell["\<\
\[LineSeparator]If we fit a linear discrete time-continuous state other \
econometric model to the time series, the model will have dependencies not \
seen in the original data.\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739206397998611*^9, 
   3.73920651255858*^9}, {3.739206569044722*^9, 3.7392067912940807`*^9}, {
   3.739206830519586*^9, 3.739206898377775*^9}, {3.739206934520834*^9, 
   3.739207061658433*^9}, {3.739207094942279*^9, 3.7392070980211*^9}, {
   3.73920713014456*^9, 3.7392072020037937`*^9}, {3.7392072427076406`*^9, 
   3.7392072488333817`*^9}, {3.739209508754882*^9, 3.739209636910304*^9}, {
   3.7392104141498823`*^9, 3.739210414150116*^9}, {3.73921239143917*^9, 
   3.739212696238358*^9}, {3.7392127394125566`*^9, 3.739212835233767*^9}, 
   3.739224064997549*^9, {3.739224119617671*^9, 3.7392241627563887`*^9}, {
   3.739228501656736*^9, 3.739228504776628*^9}, 3.7392858592472363`*^9, {
   3.739285976716984*^9, 3.7392860677372923`*^9}, {3.739287049877956*^9, 
   3.7392870753259487`*^9}, {3.739288079316331*^9, 
   3.739288079319249*^9}},ExpressionUUID->"af726f6d-1500-47ad-8022-\
e1da8a4d3de1"],

Cell["\<\
Consider the example of a moving-average model created using the function \
EstimatedProcess:\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739206397998611*^9, 
   3.73920651255858*^9}, {3.739206569044722*^9, 3.7392067912940807`*^9}, {
   3.739206830519586*^9, 3.739206898377775*^9}, {3.739206934520834*^9, 
   3.739207061658433*^9}, {3.739207094942279*^9, 3.7392070980211*^9}, {
   3.73920713014456*^9, 3.7392072020037937`*^9}, {3.7392072427076406`*^9, 
   3.7392072488333817`*^9}, {3.739209508754882*^9, 3.739209636910304*^9}, {
   3.7392104141498823`*^9, 3.739210414150116*^9}, {3.73921239143917*^9, 
   3.739212696238358*^9}, {3.7392127394125566`*^9, 3.739212835233767*^9}, 
   3.739224064997549*^9, {3.739224119617671*^9, 3.7392241627563887`*^9}, {
   3.739228501656736*^9, 3.739228504776628*^9}, 3.7392858592472363`*^9, {
   3.739285976716984*^9, 3.7392860677372923`*^9}, {3.739287049877956*^9, 
   3.7392870753259487`*^9}, {3.739294215118623*^9, 
   3.7392942628995457`*^9}},ExpressionUUID->"57f44ffc-d75f-44a0-b34a-\
46d52db0688b"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739223389189548*^9, 3.7392233941131496`*^9}},
 CellLabel->
  "In[1884]:=",ExpressionUUID->"96da9811-5e1e-4c25-9f1e-6c9e896d6433"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"build", " ", "GARCH", " ", "models"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"v", ",", "a", ",", "p", ",", "b", ",", "q"}], "]"}], "\n", "\n", 
   "\n", 
   RowBox[{"Print", "[", "\"\<Estimated IBM Moving Average Model\>\"", "]"}], 
   "\n", 
   RowBox[{"IBM$ARMA", " ", "=", " ", 
    StyleBox[
     RowBox[{"EstimatedProcess", "[", 
      RowBox[{"IBM$returns", ",", 
       RowBox[{"MAProcess", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], ",", "v"}], "]"}]}], "]"}],
     FontWeight->"Bold"]}], "\[IndentingNewLine]", "\n", 
   RowBox[{
   "Print", "[", "\"\<Estimated S&P 500 Moving Average Model\>\"", "]"}], 
   "\n", 
   RowBox[{"SP$ARMA", " ", "=", " ", 
    StyleBox[
     RowBox[{"EstimatedProcess", "[", 
      RowBox[{"SP$returns", ",", 
       RowBox[{"MAProcess", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "b"}], "}"}], ",", "v"}], "]"}]}], "]"}],
     FontWeight->"Bold"]}], 
   StyleBox["\n",
    FontWeight->"Bold"], 
   StyleBox["\n",
    FontWeight->"Bold"], 
   RowBox[{
    RowBox[{
     StyleBox["IBM$ARMA$tsm",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox["=",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      RowBox[{"RandomFunction", "[", 
       RowBox[{"IBM$ARMA", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}]}], "]"}], "^", "2"}]}], ";"}], "\n",
    "\n", 
   RowBox[{
    RowBox[{
     StyleBox["SP$ARMA$tsm",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox["=",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      RowBox[{"RandomFunction", "[", 
       RowBox[{"SP$ARMA", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}]}], "]"}], "^", "2"}]}], ";"}], 
   "\n"}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739176473138872*^9, 3.7391764952017*^9}, {
   3.739176983857527*^9, 3.739176984726137*^9}, {3.739187832716035*^9, 
   3.7391879590774937`*^9}, {3.739188916701165*^9, 3.739188930636549*^9}, {
   3.739190463747332*^9, 3.739190471848157*^9}, {3.739190764049427*^9, 
   3.739190783764636*^9}, {3.7392130363663597`*^9, 3.739213037053591*^9}, {
   3.739216866708272*^9, 3.739216867152356*^9}, {3.739216938783826*^9, 
   3.739216969454453*^9}, 3.739217020553467*^9, {3.739217059089938*^9, 
   3.739217063896628*^9}, {3.739217122784774*^9, 3.739217123792006*^9}, {
   3.739217923412257*^9, 3.739217927709243*^9}, 3.739220464213423*^9, {
   3.739220514987472*^9, 3.739220540076693*^9}, {3.739220747097344*^9, 
   3.739220779678536*^9}, {3.7392212976873903`*^9, 3.739221304332178*^9}, {
   3.739221347112523*^9, 3.73922137297401*^9}, {3.739221525959976*^9, 
   3.7392215605016613`*^9}, {3.73922160457857*^9, 3.739221672478442*^9}, {
   3.7392217234942102`*^9, 3.739221723844461*^9}, 3.739281663604047*^9, {
   3.739288103706039*^9, 3.7392882280427303`*^9}, {3.739288298877842*^9, 
   3.73928833966533*^9}, {3.739288504549011*^9, 3.739288528825761*^9}, {
   3.739293866207028*^9, 3.739293960130546*^9}, {3.739294004594063*^9, 
   3.739294042486768*^9}, {3.73929408167104*^9, 3.7392940860297832`*^9}, {
   3.7392942742550907`*^9, 
   3.739294285629581*^9}},ExpressionUUID->"c8978c55-5bff-40f3-b92f-\
8d29a8680944"]
}, Closed]],

Cell[BoxData["\<\"Estimated IBM AR Model\"\>"], "Print",
 CellChangeTimes->{{3.7392885054010963`*^9, 3.739288531743528*^9}, {
   3.739293575046732*^9, 3.73929358412223*^9}, {3.739293920532014*^9, 
   3.739293960595142*^9}, {3.739294014538801*^9, 3.739294043021367*^9}, 
   3.739294090138167*^9},
 CellLabel->
  "During evaluation of \
In[1950]:=",ExpressionUUID->"36ff6a2e-7bc5-4b6a-943f-6ad579532614"],

Cell[BoxData[
 RowBox[{"MAProcess", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.02804891359125195`", ",", 
     RowBox[{"-", "0.026019326346412044`"}]}], "}"}], ",", 
   "0.00014337821880488103`"}], "]"}]], "Output",
 CellChangeTimes->{{3.7392885061677322`*^9, 3.739288532524067*^9}, {
   3.7392935757547197`*^9, 3.7392935849380913`*^9}, {3.739293921501306*^9, 
   3.7392939616541367`*^9}, {3.739294014691552*^9, 3.73929404304841*^9}, 
   3.73929409016577*^9},
 CellLabel->
  "Out[1952]=",ExpressionUUID->"2c304967-87bb-4fd7-ada2-7b5b43d6b9d5"],

Cell[BoxData["\<\"Estimated S&P 500 AR Model\"\>"], "Print",
 CellChangeTimes->{{3.7392885054010963`*^9, 3.739288531743528*^9}, {
   3.739293575046732*^9, 3.73929358412223*^9}, {3.739293920532014*^9, 
   3.739293960595142*^9}, {3.739294014538801*^9, 3.739294043021367*^9}, 
   3.7392940901779613`*^9},
 CellLabel->
  "During evaluation of \
In[1950]:=",ExpressionUUID->"5aa3653c-9b14-4d79-9bea-3b174d903344"],

Cell[BoxData[
 RowBox[{"MAProcess", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.04815704717102871`"}], ",", "0.021155570481146097`"}], 
    "}"}], ",", "0.00008118707815488592`"}], "]"}]], "Output",
 CellChangeTimes->{{3.7392885061677322`*^9, 3.739288532524067*^9}, {
   3.7392935757547197`*^9, 3.7392935849380913`*^9}, {3.739293921501306*^9, 
   3.7392939616541367`*^9}, {3.739294014691552*^9, 3.73929404304841*^9}, 
   3.739294090189508*^9},
 CellLabel->
  "Out[1954]=",ExpressionUUID->"294e47dc-f545-4a1f-acc0-dd4b5b5cf033"],

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7392193206589947`*^9, 3.7392193346541986`*^9}},
 CellLabel->
  "In[1892]:=",ExpressionUUID->"5ca50146-50b8-40c3-8f7b-af94fbee77dc"],

Cell["\<\
A test of the squared returns series generated by the model, applying the \
Ljung-Box Q*(m) statistic, indicates that serial dependence exists in some of \
the lags 5  - 30, for both IBM and the S&P 500 index:\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739206397998611*^9, 
   3.73920651255858*^9}, {3.739206569044722*^9, 3.7392067912940807`*^9}, {
   3.739206830519586*^9, 3.739206898377775*^9}, {3.739206934520834*^9, 
   3.739207061658433*^9}, {3.739207094942279*^9, 3.7392070980211*^9}, {
   3.73920713014456*^9, 3.7392072020037937`*^9}, {3.7392072427076406`*^9, 
   3.7392072488333817`*^9}, {3.739209508754882*^9, 3.739209636910304*^9}, {
   3.7392104141498823`*^9, 3.739210414150116*^9}, {3.73921239143917*^9, 
   3.739212696238358*^9}, {3.7392127394125566`*^9, 3.739212835233767*^9}, {
   3.739213075362813*^9, 3.7392131985577793`*^9}, {3.739213704581563*^9, 
   3.739213736124198*^9}, 3.739214101163033*^9, {3.739214516242908*^9, 
   3.73921452817017*^9}, {3.7392233226045017`*^9, 3.739223323450638*^9}, {
   3.739224965030171*^9, 3.739225014637473*^9}, {3.739294141011595*^9, 
   3.739294206095559*^9}, {3.739294298734478*^9, 
   3.739294317802891*^9}},ExpressionUUID->"e8db9db7-39df-4f19-a170-\
76aa6352f689"],

Cell[CellGroupData[{

Cell["", "Direction",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.739288449147236*^9, 3.739288452401765*^9}, 
   3.739288599251482*^9},ExpressionUUID->"81d81797-211e-4a79-b062-\
3921f8feeff6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
   "Show", " ", "ACF", " ", "charts", " ", "for", " ", "the", " ", "AR", " ", 
    "models"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
   "Print", "[", 
    "\"\<ACF functions of the squared returns for the AR models\>\"", "]"}], 
   "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      StyleBox["IBM$ARMA$tsm",
       FontWeight->"Bold"], "[", "\"\<ACFPlot\>\"", "]"}], ",", " ", 
     RowBox[{
      StyleBox["SP$ARMA$tsm",
       FontWeight->"Bold"], "[", "\"\<PACFPlot\>\"", "]"}]}], "}"}], "\n", 
   "\n"}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.73928845396187*^9, 3.7392884826430073`*^9}, {
  3.739288555377829*^9, 3.7392886147778797`*^9}, {3.739289833147643*^9, 
  3.7392898680499897`*^9}, {3.739293980000393*^9, 3.739293998895577*^9}, {
  3.7392940541904163`*^9, 3.739294054326433*^9}},
 CellLabel->
  "In[1957]:=",ExpressionUUID->"bb98bbe6-7cb8-45f6-aa37-4d9c1afe726c"]
}, Closed]],

Cell[BoxData["\<\"ACF functions of the squared returns for the AR \
models\"\>"], "Print",
 CellChangeTimes->{{3.739288592923365*^9, 3.739288616271101*^9}, 
   3.739289869737616*^9, {3.739293576470605*^9, 3.7392935857143497`*^9}, 
   3.739293712213291*^9, 3.7392939858324947`*^9, 3.739294046747425*^9, 
   3.7392940923016357`*^9},
 CellLabel->
  "During evaluation of \
In[1957]:=",ExpressionUUID->"9372fb8d-7c7c-469f-aa69-ebb1ba1a203e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzt1F1Ik2EUB/BlBav1sWADiQWbDBljrDn37d7tb3RREQVWhsikYppZUQ3D
JkgrFqtAMSzSGMFS+1izyExkjELtw4vwIgwsIspIr5qLYAjZx2Lnvdi57NoH
Xl5+zzmch4fncDSHTlTVF0kkkmO5798/vzLeuo7AR7O510sbaJ2/+Obqij6y
FIsz23f2y16S5ZhqutNzZUCMK3DzuyFp3ZUkF2PZvkFjs3roWd4q9H5a/q3Z
30VWQ+H5U6Pa9pzySxBWaqrOqY+StbC/rXt65vEI5ZfCNndjdPq9haxDUWYh
2tk4QNZDf+tL+8psnGzA74avB9oePiEb4dx6qdUdOU02oenVhpPr5mJ0Xhnu
dkx1H9dcJpth7jm4PrXjNbkcjnvBls2T4n0tmHw0lI6u6aR6VvRttO/5KbtN
cRuyZ+/7fIiS7Yivko6nP8TJDuwWJnSHZQmyE+8mFlqq021kF2aS8tSD+jFy
BbrPVydmL4j5bpyaX/TrxhN0voDr0+lgbL/4fh4oRyObun7FKO5F6ki7tSZ4
jQwIvkDAJB3M54eA8A9fbf/aIMUrMetYLYQbx/IOVULr/5yNNAxT/S144XLV
KveK9TNi34gLhZQyy5kVzMXMKmY1cwmzlrmUWcesZzYwG5lNzGXMZuZyZguz
ldnGbGd2MDuZXcwVzG5mgdnD7GVGoUPMuf4pjDPn+qfQS/Nnaf783/z5C2fQ
Wiw=
       "], {{{}, {}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
          LineBox[{42, 6}], LineBox[{43, 7}], LineBox[{46, 10}], 
          LineBox[{47, 11}], LineBox[{48, 12}], LineBox[{49, 13}], 
          LineBox[{50, 14}], LineBox[{51, 15}], LineBox[{56, 20}], 
          LineBox[{64, 28}], LineBox[{66, 30}], LineBox[{67, 31}], 
          LineBox[{69, 33}], LineBox[{70, 34}], LineBox[{72, 36}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
          LineBox[{37, 1}], LineBox[{38, 2}], LineBox[{39, 3}], 
          LineBox[{40, 4}], LineBox[{41, 5}], LineBox[{44, 8}], 
          LineBox[{45, 9}], LineBox[{52, 16}], LineBox[{53, 17}], 
          LineBox[{54, 18}], LineBox[{55, 19}], LineBox[{57, 21}], 
          LineBox[{58, 22}], LineBox[{59, 23}], LineBox[{60, 24}], 
          LineBox[{61, 25}], LineBox[{62, 26}], LineBox[{63, 27}], 
          LineBox[{65, 29}], LineBox[{68, 32}], LineBox[{71, 35}]}}, {{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          PointBox[{73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
           87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
           103, 104, 105, 106, 107, 108}]}, {}}}], {}, {}, {}, {}}, 
     {Dashing[{Small, Small}], 
      LineBox[{{0, -0.195023705608951}, {36, -0.195023705608951}}]}, 
     {Dashing[{Small, Small}], 
      LineBox[{{0, 0.195023705608951}, {36, 0.195023705608951}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 36}, {-0.1438145921751534, 0.22103071929013535`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDIAWIQDQEf7Hff6jJQWLl4P1TAQVW48Pj8KBifwyE9RM7H
0nojlC/gkHLctN8/YTeUL+JQVCrubrP/OJQv4TDHodY4MAmmXsaBM3Th8Qrp
PVC+gsPKA3k/Z/QetIfwlRyenuLdwikzGyqv4nDj1tGbe8WWQuXVHMpuLGH5
KtIOlddwqHjTt9BDEWa+lkPfgiWqeg3LoHwdB7bAwOfMCdug+vUcXkoWPDc3
bIbyDRyuPVrOuSkfZr+hw/et64M0T26C8o0c3levrZ1stQBqnrFDw6/X7elX
YXwThxe/Np7cM+ccVL2pw/F3WwsFZ0+Dyps5LDVTWrV0y1movLkD59xdNQrt
TVB5C4eLXZd/e5udgPItHRoTgxWMzbZC+VYOFjX+10JmTYHyrR30i3u/J9as
gPJtHN6kRjSfWnMUyrd1uP/ufHjlKph5dg7az/K6db8uhfLtHW66q/y3dIK5
18Hh7xzWnst/ZkLkGxwcetkkt0jMXgyVd3S4x5MzVevETqi8o8POZHXVz2nb
ofJODhsXyYd+nrsaav4HqDgcOKByOdD4Amh8ETS+BBpfBo2vgMZXQuOroPHV
0PgaaHwtNL4OGl8PjW+AxjdE4xuh8Y3R+CZofFM0vhka3xyNb4HGt0TjW6Hx
rdH4Nmh8WzS+HRrfHo3vgMpvQOMD0w+qPBofmH5Q+aPlz2j5Q175AwB/TGs6

       "], {{{}, {}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
          LineBox[{37, 1}], LineBox[{38, 2}], LineBox[{39, 3}], 
          LineBox[{40, 4}], LineBox[{41, 5}], LineBox[{42, 6}], 
          LineBox[{43, 7}], LineBox[{45, 9}], LineBox[{47, 11}], 
          LineBox[{48, 12}], LineBox[{49, 13}], LineBox[{54, 18}], 
          LineBox[{55, 19}], LineBox[{57, 21}], LineBox[{59, 23}], 
          LineBox[{60, 24}], LineBox[{61, 25}], LineBox[{62, 26}], 
          LineBox[{63, 27}], LineBox[{64, 28}], LineBox[{65, 29}], 
          LineBox[{66, 30}], LineBox[{68, 32}], LineBox[{70, 34}], 
          LineBox[{72, 36}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
          LineBox[{44, 8}], LineBox[{46, 10}], LineBox[{50, 14}], 
          LineBox[{51, 15}], LineBox[{52, 16}], LineBox[{53, 17}], 
          LineBox[{56, 20}], LineBox[{58, 22}], LineBox[{67, 31}], 
          LineBox[{69, 33}], LineBox[{71, 35}]}}, {{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          PointBox[{73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
           87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
           103, 104, 105, 106, 107, 108}]}, {}}}], {}, {}, {}, {}}, 
     {Dashing[{Small, Small}], 
      LineBox[{{0, -0.195023705608951}, {36, -0.195023705608951}}]}, 
     {Dashing[{Small, Small}], 
      LineBox[{{0, 0.195023705608951}, {36, 0.195023705608951}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 36}, {-0.19270245349604573`, 0.23915824745559822`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.739288593083144*^9, 3.739288616310444*^9}, 
   3.7392898697801867`*^9, {3.73929357660771*^9, 3.739293585861506*^9}, 
   3.739293712247532*^9, 3.739293985986815*^9, 3.739294046902383*^9, 
   3.739294092451254*^9},
 CellLabel->
  "Out[1958]=",ExpressionUUID->"1d98bfe0-72b4-479b-817a-e55d22472097"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Solution: Adding a conditional volatility equation to the model\
\>", "Section",
 CellChangeTimes->{
  3.716825484342502*^9, {3.7354837120026693`*^9, 3.735483720370885*^9}, {
   3.7354849131442633`*^9, 3.735484915566925*^9}, {3.735484977664678*^9, 
   3.73548497936073*^9}, {3.735486235411076*^9, 3.735486260084824*^9}, {
   3.735587708401764*^9, 3.735587719552019*^9}, {3.736094321292815*^9, 
   3.736094380388455*^9}, {3.739206076187717*^9, 3.7392060833073263`*^9}, {
   3.739206279345971*^9, 3.739206309120606*^9}, {3.739206524759885*^9, 
   3.739206548469426*^9}, {3.739213999987729*^9, 3.739214012971336*^9}, {
   3.739225370827331*^9, 
   3.739225386829031*^9}},ExpressionUUID->"d46f6bcb-8ad3-420b-853c-\
4d55cfbaed06"],

Cell[TextData[{
 "A variety of conditional variance models have been proposed in academia and \
among finance professionals.  In general, models either use an exact function \
to govern the evolution of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Sigma]", "t", "2"], ","}], TraditionalForm]],
  ExpressionUUID->"eea7cac0-6295-4b91-884b-21876643cf68"],
 " or use a stochastic equation to describe ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Sigma]", "t", "2"], "."}], TraditionalForm]],
  ExpressionUUID->"d5fe9dfa-8ebf-4645-a4da-7aa7dbe008e3"],
 "  Here we test a model of the first type, the GARCH model, for improved fit \
/ reduced serial dependency compared to the prior MA model."
}], "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739206397998611*^9, 
   3.73920651255858*^9}, {3.739206569044722*^9, 3.7392067912940807`*^9}, {
   3.739206830519586*^9, 3.739206898377775*^9}, {3.739206934520834*^9, 
   3.739207061658433*^9}, {3.739207094942279*^9, 3.7392070980211*^9}, {
   3.73920713014456*^9, 3.7392072020037937`*^9}, {3.7392072427076406`*^9, 
   3.7392072488333817`*^9}, {3.739209508754882*^9, 3.739209636910304*^9}, {
   3.7392104141498823`*^9, 3.739210414150116*^9}, {3.73921239143917*^9, 
   3.739212696238358*^9}, {3.7392127394125566`*^9, 3.739212835233767*^9}, {
   3.739213075362813*^9, 3.7392131985577793`*^9}, {3.739213704581563*^9, 
   3.739213736124198*^9}, 3.739214101163033*^9, {3.7392141870220823`*^9, 
   3.739214468388748*^9}, {3.7392248899507933`*^9, 3.739224954748231*^9}, {
   3.739294327298473*^9, 
   3.739294327410925*^9}},ExpressionUUID->"c7e254d0-ea50-4888-8c9d-\
4607ad2cab1b"],

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7392211654857197`*^9, 3.73922117249931*^9}},
 CellLabel->
  "In[1883]:=",ExpressionUUID->"9968bd1d-32f8-4ec7-b536-97d68b681773"],

Cell["\<\
The GARCH models for IBM and the S&P 500 monthly returns are:\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739206397998611*^9, 
   3.73920651255858*^9}, {3.739206569044722*^9, 3.7392067912940807`*^9}, {
   3.739206830519586*^9, 3.739206898377775*^9}, {3.739206934520834*^9, 
   3.739207061658433*^9}, {3.739207094942279*^9, 3.7392070980211*^9}, {
   3.73920713014456*^9, 3.7392072020037937`*^9}, {3.7392072427076406`*^9, 
   3.7392072488333817`*^9}, {3.739209508754882*^9, 3.739209636910304*^9}, {
   3.7392104141498823`*^9, 3.739210414150116*^9}, {3.73921239143917*^9, 
   3.739212696238358*^9}, {3.7392127394125566`*^9, 3.739212835233767*^9}, {
   3.739213075362813*^9, 3.739213129920026*^9}, {3.739213685046233*^9, 
   3.7392136955175734`*^9}, {3.739213753291684*^9, 3.739213754315877*^9}, {
   3.739214493779524*^9, 3.739214509515012*^9}, {3.739221153161386*^9, 
   3.739221154352397*^9}, {3.7392885342725782`*^9, 
   3.7392885378404408`*^9}},ExpressionUUID->"5f62df60-93bd-44c3-a9e9-\
47ef9f03ca8d"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739223389189548*^9, 3.7392233941131496`*^9}},
 CellLabel->
  "In[1884]:=",ExpressionUUID->"1c178045-a84f-44ec-8b4d-b6e24fe3d93e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"build", " ", "GARCH", " ", "models"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"v", ",", "a", ",", "p"}], "]"}], "\n", "\n", "\n", 
   RowBox[{"Print", "[", "\"\<Estimated IBM GARCH Model\>\"", "]"}], "\n", 
   RowBox[{"IBM$GARCH", " ", "=", " ", 
    StyleBox[
     RowBox[{"EstimatedProcess", "[", 
      RowBox[{"IBM$returns", ",", 
       RowBox[{"GARCHProcess", "[", 
        RowBox[{"v", ",", 
         RowBox[{"{", "a", "}"}], ",", 
         RowBox[{"{", "p", "}"}]}], "]"}]}], "]"}],
     FontWeight->"Bold"]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<Estimated S&P 500 GARCH Model\>\"", "]"}], "\n", 
   RowBox[{"SP$GARCH", " ", "=", " ", 
    StyleBox[
     RowBox[{"EstimatedProcess", "[", 
      RowBox[{"SP$returns", ",", 
       RowBox[{"GARCHProcess", "[", 
        RowBox[{"v", ",", 
         RowBox[{"{", "a", "}"}], ",", 
         RowBox[{"{", "p", "}"}]}], "]"}]}], "]"}],
     FontWeight->"Bold"]}], 
   StyleBox["\n",
    FontWeight->"Bold"], 
   StyleBox["\n",
    FontWeight->"Bold"], 
   RowBox[{
    RowBox[{
     StyleBox["IBM$tsm",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox["=",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      RowBox[{"RandomFunction", "[", 
       RowBox[{"IBM$GARCH", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}]}], "]"}], "^", "2"}]}], ";"}], "\n",
    "\n", 
   RowBox[{
    RowBox[{
     StyleBox["SP$tsm",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox["=",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      RowBox[{"RandomFunction", "[", 
       RowBox[{"SP$GARCH", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "100"}], "}"}]}], "]"}], "^", "2"}]}], ";"}], 
   "\n"}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.739176473138872*^9, 3.7391764952017*^9}, {
   3.739176983857527*^9, 3.739176984726137*^9}, {3.739187832716035*^9, 
   3.7391879590774937`*^9}, {3.739188916701165*^9, 3.739188930636549*^9}, {
   3.739190463747332*^9, 3.739190471848157*^9}, {3.739190764049427*^9, 
   3.739190783764636*^9}, {3.7392130363663597`*^9, 3.739213037053591*^9}, {
   3.739216866708272*^9, 3.739216867152356*^9}, {3.739216938783826*^9, 
   3.739216969454453*^9}, 3.739217020553467*^9, {3.739217059089938*^9, 
   3.739217063896628*^9}, {3.739217122784774*^9, 3.739217123792006*^9}, {
   3.739217923412257*^9, 3.739217927709243*^9}, 3.739220464213423*^9, {
   3.739220514987472*^9, 3.739220540076693*^9}, {3.739220747097344*^9, 
   3.739220779678536*^9}, {3.7392212976873903`*^9, 3.739221304332178*^9}, {
   3.739221347112523*^9, 3.73922137297401*^9}, {3.739221525959976*^9, 
   3.7392215605016613`*^9}, {3.73922160457857*^9, 3.739221672478442*^9}, {
   3.7392217234942102`*^9, 3.739221723844461*^9}, 3.739281663604047*^9, {
   3.739288103706039*^9, 3.7392882280427303`*^9}, {3.739288298877842*^9, 
   3.73928833966533*^9}, {3.739288504549011*^9, 3.739288528825761*^9}},
 CellLabel->
  "In[1885]:=",ExpressionUUID->"7d65b09d-2198-4691-92c5-db750b1d6097"]
}, Closed]],

Cell[BoxData["\<\"Estimated IBM GARCH Model\"\>"], "Print",
 CellChangeTimes->{{3.7392885054010963`*^9, 3.739288531743528*^9}, {
  3.739293575046732*^9, 3.73929358412223*^9}},
 CellLabel->
  "During evaluation of \
In[1885]:=",ExpressionUUID->"c1365346-186b-4af4-920a-3369c7e56ad0"],

Cell[BoxData[
 RowBox[{"GARCHProcess", "[", 
  RowBox[{"0.00003540904392345711`", ",", 
   RowBox[{"{", "0.10176331844501395`", "}"}], ",", 
   RowBox[{"{", "0.6575134488461722`", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.7392885061677322`*^9, 3.739288532524067*^9}, {
  3.7392935757547197`*^9, 3.7392935849380913`*^9}},
 CellLabel->
  "Out[1887]=",ExpressionUUID->"067a4ebb-de45-4d7e-a81a-8ed91305acf5"],

Cell[BoxData["\<\"Estimated S&P 500 GARCH Model\"\>"], "Print",
 CellChangeTimes->{{3.7392885054010963`*^9, 3.739288531743528*^9}, {
  3.739293575046732*^9, 3.739293584946856*^9}},
 CellLabel->
  "During evaluation of \
In[1885]:=",ExpressionUUID->"4af85e9e-2218-443b-96f6-475660534767"],

Cell[BoxData[
 RowBox[{"GARCHProcess", "[", 
  RowBox[{"4.178479154413915`*^-6", ",", 
   RowBox[{"{", "0.1746057988552302`", "}"}], ",", 
   RowBox[{"{", "0.773636630126188`", "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.7392885061677322`*^9, 3.739288532524067*^9}, {
  3.7392935757547197`*^9, 3.739293585621009*^9}},
 CellLabel->
  "Out[1889]=",ExpressionUUID->"6f65b12f-930c-4176-91aa-808cc20fc98e"],

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7392193206589947`*^9, 3.7392193346541986`*^9}},
 CellLabel->
  "In[1892]:=",ExpressionUUID->"bfb4ca5a-74a8-4c8d-a3c6-72c821e3ad01"],

Cell["\<\
A test of the residuals applying the Ljung-Box Q*(m) statistic with the new \
GARCH mean indicates that serial dependence in lags 5 - 30 has been removed:\
\>", "Text",
 CellChangeTimes->{{3.7354837220663652`*^9, 3.735483751473709*^9}, {
   3.735486262485011*^9, 3.735486288116446*^9}, {3.735486386471116*^9, 
   3.735486438104398*^9}, {3.735486495412992*^9, 3.7354864964790583`*^9}, {
   3.735587802145555*^9, 3.735587813514737*^9}, {3.7360943822773247`*^9, 
   3.736094388427802*^9}, 3.736868570517212*^9, {3.739206397998611*^9, 
   3.73920651255858*^9}, {3.739206569044722*^9, 3.7392067912940807`*^9}, {
   3.739206830519586*^9, 3.739206898377775*^9}, {3.739206934520834*^9, 
   3.739207061658433*^9}, {3.739207094942279*^9, 3.7392070980211*^9}, {
   3.73920713014456*^9, 3.7392072020037937`*^9}, {3.7392072427076406`*^9, 
   3.7392072488333817`*^9}, {3.739209508754882*^9, 3.739209636910304*^9}, {
   3.7392104141498823`*^9, 3.739210414150116*^9}, {3.73921239143917*^9, 
   3.739212696238358*^9}, {3.7392127394125566`*^9, 3.739212835233767*^9}, {
   3.739213075362813*^9, 3.7392131985577793`*^9}, {3.739213704581563*^9, 
   3.739213736124198*^9}, 3.739214101163033*^9, {3.739214516242908*^9, 
   3.73921452817017*^9}, {3.7392233226045017`*^9, 3.739223323450638*^9}, {
   3.739224965030171*^9, 3.739225014637473*^9}, {3.739294343529127*^9, 
   3.739294347545828*^9}},ExpressionUUID->"d77a7bf8-10e6-4f01-a05f-\
8878dc55f9ed"],

Cell[CellGroupData[{

Cell["", "Direction",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.739288449147236*^9, 3.739288452401765*^9}, 
   3.739288599251482*^9},ExpressionUUID->"be345314-f5c9-43a6-8970-\
3eb0b49cd3dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{
   "Show", " ", "ACF", " ", "charts", " ", "for", " ", "the", " ", "GARCH", 
    " ", "models"}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
   "Print", "[", 
    "\"\<ACF functions of the squared returns for the GARCH models\>\"", 
    "]"}], "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      StyleBox["IBM$tsm",
       FontWeight->"Bold"], "[", "\"\<ACFPlot\>\"", "]"}], ",", " ", 
     RowBox[{
      StyleBox["SP$tsm",
       FontWeight->"Bold"], "[", "\"\<PACFPlot\>\"", "]"}]}], "}"}], "\n", 
   "\n"}]}]], "Code",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.},
 CellChangeTimes->{{3.73928845396187*^9, 3.7392884826430073`*^9}, {
  3.739288555377829*^9, 3.7392886147778797`*^9}, {3.739289833147643*^9, 
  3.7392898680499897`*^9}},
 CellLabel->
  "In[1902]:=",ExpressionUUID->"9e03003b-8409-41f6-9076-08563168af62"]
}, Closed]],

Cell[BoxData["\<\"ACF functions of the squared returns for the GARCH models\"\
\>"], "Print",
 CellChangeTimes->{{3.739288592923365*^9, 3.739288616271101*^9}, 
   3.739289869737616*^9, {3.739293576470605*^9, 3.7392935857143497`*^9}, 
   3.739293712213291*^9},
 CellLabel->
  "During evaluation of \
In[1902]:=",ExpressionUUID->"120def1b-443b-4463-b65e-31ab981ba055"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzt1F1IU2EYB/CxqJZFjjHS/ABdKmuNfTnndG7nPyOJomR5U9SFCHY1KJCi
7aYFWsGkj0kgG7Qm9gEZa2x5zAiLoIuSJGErIXBZRF+E0gcuE1r4nIs9l137
wsvh9/4P7+E978NT3XXsQLdcJpN58/Pfc2XMC5Zzy1+MmZcCLWD7h+iks+cZ
WYET/ieV9o/PyUosr98spGqHyWrkTouX7evukkvRVv6iU7HnzsSKK7BpUL8t
Xv6QXIUHI8n29NgwWYMrj6aOv48myDVIbPkcORUeJdeh0y9P/1KKZC08C0HD
1ZI4WYfsjv4Lg9YbZD3mdl9a/OZNkQ2wfe0/WPI2STbBNVH9u0gn5WYsBjM9
a9UxsgWRM3O5I+d95Ho4ehE7HLxJtmKDxXOtVSN9vwFbNf6ZLm2Izm9DmTAr
RsYGKG9EMpQzzkyOU26HVyzbmeiIkZuQLuoW5b44uRlLb+4dnX6dIjsQav+R
9ew7S/u1wF1ZvDfcNkC5E73ZQ+GpoQjZhf27FlSPxev0voBP705Gn+YukoE1
G80dt1V0ngBgmlb1/bRI9+FG3/fx2T/36X8F3BhaKr5lzEj32Qpf7atRe2KE
PC/VjTRQSAWzklnNXMpcwVzFrGGuYa5j1jLrmPXMBmYTs5nZwlzPbGVuYLYx
NzLbmZuYm5kdzC3MTmYXs8CMQgeY8/VTmDPn66fQq/1ntf/8X//5Cwjjaaw=

       "], {{{}, {}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
          LineBox[{42, 6}], LineBox[{43, 7}], LineBox[{44, 8}], 
          LineBox[{45, 9}], LineBox[{46, 10}], LineBox[{47, 11}], 
          LineBox[{48, 12}], LineBox[{49, 13}], LineBox[{50, 14}], 
          LineBox[{51, 15}], LineBox[{52, 16}], LineBox[{53, 17}], 
          LineBox[{54, 18}], LineBox[{55, 19}], LineBox[{56, 20}], 
          LineBox[{58, 22}], LineBox[{63, 27}], LineBox[{66, 30}], 
          LineBox[{67, 31}], LineBox[{68, 32}], LineBox[{69, 33}], 
          LineBox[{70, 34}], LineBox[{71, 35}], LineBox[{72, 36}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
          LineBox[{37, 1}], LineBox[{38, 2}], LineBox[{39, 3}], 
          LineBox[{40, 4}], LineBox[{41, 5}], LineBox[{57, 21}], 
          LineBox[{59, 23}], LineBox[{60, 24}], LineBox[{61, 25}], 
          LineBox[{62, 26}], LineBox[{64, 28}], LineBox[{65, 29}]}}, {{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          PointBox[{73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
           87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
           103, 104, 105, 106, 107, 108}]}, {}}}], {}, {}, {}, {}}, 
     {Dashing[{Small, Small}], 
      LineBox[{{0, -0.195023705608951}, {36, -0.195023705608951}}]}, 
     {Dashing[{Small, Small}], 
      LineBox[{{0, 0.195023705608951}, {36, 0.195023705608951}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 36}, {-0.11370367630715367`, 0.2786979488938527}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJzt1F1Ik2EUB/ARpGNJTJSwmjRljfUybHNO59z2/q0gIstoWTcJ5miNMgyK
yKuNPohRdDMmZWALmtlFk2F+LbCaFSwRZbRVgyCkq2IxJJLSosXOe7Fz2bUP
PDz83vN/Ht6Lw6np7j18cp1MJuvJ739nYeVEl/VT8qpuXKQPmNu/e9Idj5Ll
6At1Lr3PzpKVmF/VlpmNCXIlvB+F8dS94LOCq3C8S5cY80TIKny5sdVzXSHl
1fid1A9uWpXeq8XLA/tCJ9omKK+B99cf74znBVmLUzd7tcq2YcrrcGhkWNxS
eo0sYKXTdaSmwk/WQ1hY3zMd8NH9OpQZ4175pSjZgFcDXbZcRrIRkYVu+6O3
I3S/HnOuh3ezHYNkE/zpQHv/wHPKN8D/Rv/ZtjxFdTPeRRbPrWwbonojnr6e
dSov3ic3YUc8c7rUfYXyFgSXdwpns0PkZkSrP5SrYjHKW+EML3oUP0fJLQgZ
Upk9tyyUt6EkpT2zsd1FtuN28uuToClMdkDzwH3BMhEii5hKVB/9oZgmAyX+
85sPfn9ceN8H6GcCsaXyGNVbcWfMsSEx2k/1VmwPq7/NOzvof3ah73K6In1s
Lzkn9Y20UEw5s5K5krmKWcWsZq5l1jBrmXXMArOeuY7ZwGxkrmc2MTcwm5kb
mZuYLczNzFbmFmYbs53ZwSwyo9g+5nz/FNeZ8/1T7LX5szZ//m/+/AUm2V98

       "], {{{}, {}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
          LineBox[{41, 5}], LineBox[{42, 6}], LineBox[{45, 9}], 
          LineBox[{46, 10}], LineBox[{50, 14}], LineBox[{51, 15}], 
          LineBox[{52, 16}], LineBox[{55, 19}], LineBox[{57, 21}], 
          LineBox[{58, 22}], LineBox[{61, 25}], LineBox[{62, 26}], 
          LineBox[{68, 32}], LineBox[{70, 34}], LineBox[{71, 35}], 
          LineBox[{72, 36}]}, 
         {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
          LineBox[{37, 1}], LineBox[{38, 2}], LineBox[{39, 3}], 
          LineBox[{40, 4}], LineBox[{43, 7}], LineBox[{44, 8}], 
          LineBox[{47, 11}], LineBox[{48, 12}], LineBox[{49, 13}], 
          LineBox[{53, 17}], LineBox[{54, 18}], LineBox[{56, 20}], 
          LineBox[{59, 23}], LineBox[{60, 24}], LineBox[{63, 27}], 
          LineBox[{64, 28}], LineBox[{65, 29}], LineBox[{66, 30}], 
          LineBox[{67, 31}], LineBox[{69, 33}]}}, {{}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          PointBox[{73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 
           87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 
           103, 104, 105, 106, 107, 108}]}, {}}}], {}, {}, {}, {}}, 
     {Dashing[{Small, Small}], 
      LineBox[{{0, -0.195023705608951}, {36, -0.195023705608951}}]}, 
     {Dashing[{Small, Small}], 
      LineBox[{{0, 0.195023705608951}, {36, 0.195023705608951}}]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImagePadding->All,
    Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0, 36}, {-0.13600963353924908`, 0.2186306259478882}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.739288593083144*^9, 3.739288616310444*^9}, 
   3.7392898697801867`*^9, {3.73929357660771*^9, 3.739293585861506*^9}, 
   3.739293712247532*^9},
 CellLabel->
  "Out[1903]=",ExpressionUUID->"12a10ded-1a48-4c24-a31b-13a8730b0cd7"],

Cell[BoxData[""], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{3.739288625175027*^9, 3.7392895309312763`*^9, 
  3.739289856555002*^9},
 CellLabel->
  "In[1895]:=",ExpressionUUID->"ce4d3df5-144c-4c61-835b-da0d943df0b7"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.739289848753674*^9},
 CellLabel->
  "In[1897]:=",ExpressionUUID->"b109d629-5a23-45bf-af47-024417126df6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Further explorations", "Section",
 CellChangeTimes->{{3.70077612322993*^9, 3.7007761320921593`*^9}, {
  3.7007787731699142`*^9, 3.70077877480995*^9}, {3.735655649442748*^9, 
  3.735655649665411*^9}},ExpressionUUID->"9da19663-7179-45c9-8160-\
ad35832309c2"],

Cell["\<\
The simple examples above can be expanded to include a variety of alternative \
conditional variance models, apropos to the asset type and financial market \
in question.   Further explorations could include a categorization of models \
for different asset types, including descriptive statistics and measurements \
of goodness of model fit.  Multivariate, vector autoregressive models can be \
explored for multiple assets in a portfolio.\
\>", "Text",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.7051697227932177`*^9, 
   3.7051697367862177`*^9}, {3.7056847753333597`*^9, 3.7056847788413363`*^9}, 
   3.705685608918363*^9, 3.716902605618763*^9, {3.739225027497047*^9, 
   3.739225027748885*^9}, {3.73922510105132*^9, 3.739225332776743*^9}, {
   3.739289571617477*^9, 3.739289571621661*^9}, {3.73928965819072*^9, 
   3.739289724597863*^9}},ExpressionUUID->"45c45f6e-321c-4ce7-9657-\
950c1134d308"],

Cell[TextData[{
 "It may also be interesting to include the Lagrange test to confirm results \
from the Ljung-Box method.  The Lagrange test is equivalent to the F \
statistic for testing ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "i"], TraditionalForm]],ExpressionUUID->
  "5799c0c7-b105-4255-9a16-edbb43147b91"],
 "= 0 for  ",
 StyleBox["i = 1, ... ,m ",
  FontSlant->"Italic"],
 "in the linear regression ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["a", "t", "2"], TraditionalForm]],ExpressionUUID->
  "7a751903-42f9-45e3-808a-7d7638f15a29"],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "0"], TraditionalForm]],ExpressionUUID->
  "0216de46-0a33-49bc-879e-3ac6548fe35f"],
 " + ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],ExpressionUUID->
  "b0dd84a6-91c2-4d85-8efa-475090632065"],
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["a", 
    RowBox[{"t", "-", "1"}], "2"], TraditionalForm]],ExpressionUUID->
  "50c71fce-0f05-4e3c-9305-163531c5e555"],
 " + ... + ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "m"], TraditionalForm]],ExpressionUUID->
  "9b8ce03e-8855-4a70-9412-8ea75da7f328"],
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["a", 
    RowBox[{"t", "-", "m"}], "2"], TraditionalForm]],ExpressionUUID->
  "20da63e5-198e-47a6-ba68-a92afe946dc4"],
 " + ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "t"], TraditionalForm]],ExpressionUUID->
  "5243601c-dbb2-4093-bf0c-3a8ab20eb697"],
 ",  with ",
 StyleBox["t = m + 1 , ... , T, ",
  FontSlant->"Italic"],
 "where  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "t"], TraditionalForm]],ExpressionUUID->
  "76f36feb-697a-438a-8bf9-7406b26253b7"],
 " denotes the error term, m is a prespecified positive integer, and T is the \
sample size.  The null hypothesis is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["H", "0"], " ", 
    StyleBox[":",
     FontSlant->"Italic"]}], TraditionalForm]],ExpressionUUID->
  "fa13982a-481b-486c-9236-4c9a76ae5f74"],
 " ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "1"], TraditionalForm]],ExpressionUUID->
  "fa5ce6b6-161e-44ce-b928-3ff06647a25e"],
 " \[LongEqual]  ... \[LongEqual] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Alpha]", "m"], TraditionalForm]],ExpressionUUID->
  "87efc757-3624-478a-bcd7-302688cec505"],
 "\[LongEqual]  0.  For each iteration, after the linear regression is \
completed, the components of the test ratio are computed:  ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["SSR", "0"],
    FontSlant->"Italic"], TraditionalForm]],ExpressionUUID->
  "e2d1bf4a-1a9e-4c49-bc0c-654c0ed09d4f"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"t", " ", "=", " ", 
      RowBox[{"m", "+", "1"}]}], "T"], "("}], TraditionalForm]],
  ExpressionUUID->"0ca27ae1-2bbd-4b7d-a029-7ef3012fd6aa"],
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["a", "t", "2"], TraditionalForm]],ExpressionUUID->
  "738380f6-0b5a-4617-9e8d-88425012db30"],
 " - ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"\[Omega]", ")"}], "2"], TraditionalForm]],ExpressionUUID->
  "20b350a4-11ee-489d-ab73-9f32f9dbf83c"],
 ", \[Omega] = (1/T) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"t", " ", "=", " ", "1"}], "T"], "("}], TraditionalForm]],
  ExpressionUUID->"f2c8cd7d-a79c-4ca7-b174-d8ad36935640"],
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["a", "t", "2"], TraditionalForm]],ExpressionUUID->
  "d34bb6ae-f72f-426a-837b-35d2f1e1d430"],
 ") is the sample mean of ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["a", "t", "2"], TraditionalForm]],ExpressionUUID->
  "bb18eb6d-4dff-4767-a21e-7bfee04cb771"],
 ",  ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["SSR", "1"],
    FontSlant->"Italic"], TraditionalForm]],ExpressionUUID->
  "c6fd4edd-d839-4af6-9f6d-8ba1f4e046da"],
 "=  ",
 Cell[BoxData[
  FormBox[
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"t", " ", "=", " ", 
     RowBox[{"m", "+", "1"}]}], "T"], TraditionalForm]],ExpressionUUID->
  "f34bc597-daad-4836-8b7e-eef8e869c977"],
 " ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["e", "t", "2"], TraditionalForm]],ExpressionUUID->
  "415d48bf-f11d-48b4-a5f5-d2eb8390f7e9"],
 " where ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["e", "t", "2"], TraditionalForm]],ExpressionUUID->
  "9216f89e-baf7-4f6b-8037-f0610fea853b"],
 "is the least squares residual of the prior linear regression, and ",
 StyleBox["F =",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      StyleBox[
       RowBox[{
        SubscriptBox["SSR", "0"], " ", "-", "  ", 
        SubscriptBox["SSR", "1"]}],
       FontSlant->"Italic"], 
      StyleBox[")",
       FontSlant->"Italic"]}], 
     StyleBox[" ",
      FontSlant->"Italic"], 
     StyleBox["/",
      FontSlant->"Italic"], 
     StyleBox[" ",
      FontSlant->"Italic"], 
     StyleBox["m",
      FontSlant->"Italic"]}], 
    StyleBox[
     RowBox[{
      SubscriptBox["SSR", "1"], "/", 
      RowBox[{"(", 
       RowBox[{"T", " ", "-", " ", 
        RowBox[{"2", "m"}], " ", "-", " ", "1"}], ")"}]}],
     FontSlant->"Italic"]], TraditionalForm]],ExpressionUUID->
  "d1ca0c69-0e74-466e-892f-d5d768554d54"],
 " which is asymptotically distributed as a chi-squared distribution with m \
degrees of freedom under the null hypothesis. "
}], "Text",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.7051697227932177`*^9, 
   3.7051697367862177`*^9}, {3.7056847753333597`*^9, 3.7056847788413363`*^9}, 
   3.705685608918363*^9, 3.716902605618763*^9, {3.739225027497047*^9, 
   3.739225027748885*^9}, {3.73922510105132*^9, 3.739225332776743*^9}, {
   3.7392895717993307`*^9, 3.73928964936231*^9}, {3.73928972869619*^9, 
   3.739289739518136*^9}},ExpressionUUID->"a1e4a0b9-cf40-46dd-ae78-\
25c75fc6b675"],

Cell["", "Text",
 CellChangeTimes->{{3.7007765492418337`*^9, 3.7007765636102467`*^9}, {
   3.705104213701561*^9, 3.7051042224510612`*^9}, {3.7051697227932177`*^9, 
   3.7051697367862177`*^9}, {3.7056847753333597`*^9, 3.7056847788413363`*^9}, 
   3.705685608918363*^9, 3.716902605618763*^9, {3.739225027497047*^9, 
   3.739225027748885*^9}, {3.73922510105132*^9, 
   3.739225332776743*^9}},ExpressionUUID->"4d32c10b-e1dc-4f86-a323-\
f24c13fed1c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Author contact information", "Section",
 CellChangeTimes->{{3.736868777412567*^9, 
  3.736868791070746*^9}},ExpressionUUID->"a78f6e4f-dbdf-4763-a44f-\
16569b36e665"],

Cell["lawrencetemlock@gmail.com", "Text",
 CellChangeTimes->{{3.736868810717331*^9, 3.736868830235566*^9}, {
  3.7392059585443687`*^9, 3.739205965708189*^9}, {3.7392826428958178`*^9, 
  3.739282642896405*^9}},ExpressionUUID->"44146aed-2d19-4c66-bfba-\
1e67f1c1dfb3"],

Cell["", "Text",
 CellChangeTimes->{{3.736868810717331*^9, 3.736868830235566*^9}, {
  3.7392059585443687`*^9, 3.739205965708189*^9}, {3.739282643142284*^9, 
  3.7392826431425323`*^9}},ExpressionUUID->"10be235a-7490-451b-835d-\
54495bb21cd5"],

Cell["", "Text",
 CellChangeTimes->{{3.736868810717331*^9, 3.736868830235566*^9}, {
  3.7392059585443687`*^9, 
  3.739205965708189*^9}},ExpressionUUID->"e35f44d6-9d45-4e3a-b48b-\
e58692b1a178"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1229, 1018},
WindowMargins->{{29, Automatic}, {Automatic, 12}},
WindowStatusArea->None,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], PageWidth -> WindowWidth, ShowCellBracket -> False, 
    CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellElementSpacings -> {"ClosedGroupTopMargin" -> 150}, 
    CellGroupingRules -> {"TitleGrouping", 0}, PageBreakAbove -> True, 
    CellFrameMargins -> {{20, 50}, {6, 78}}, TextAlignment -> Left, 
    LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
    CounterIncrements -> {"Title"}, 
    CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {"Figure", 0}, {
      "Subtitle", 0}, {"Subsubtitle", 0}, {"Item", 0}, {"Subitem", 0}, {
      "Subsubitem", 0}, {"ItemNumbered", 0}, {"SubitemNumbered", 0}, {
      "SubsubitemNumbered", 0}}, MenuSortingValue -> 1100, MenuCommandKey -> 
    "1", FontFamily -> "Source Sans Pro", FontSize -> 44, 
    FontTracking -> -0.8, FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["Abstract"], PageWidth -> WindowWidth, ShowCellBracket -> False,
     ShowSelection -> True, CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellFrameMargins -> {{30, 40}, {24, 2}}, TextAlignment -> Left, 
    FontFamily -> "Source Sans Pro", FontSize -> 16, FontSlant -> "Italic", 
    FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["AuthorInfo"], PageWidth -> WindowWidth, 
    CellFrame -> {{0, 0}, {8, 0}}, ShowCellBracket -> True, ShowSelection -> 
    True, CellMargins -> {{0, 0}, {0, 0}}, 
    CellBracketOptions -> {"OverlapContent" -> True}, 
    CellFrameMargins -> {{30, 40}, {10, 4}}, CellFrameColor -> 
    RGBColor[0.988235, 0.403922, 0.0313725], TextAlignment -> Left, 
    FontFamily -> "Source Sans Pro", FontSize -> 17, FontWeight -> "SemiBold",
     FontSlant -> "Plain", FontColor -> RGBColor[255, 255, 255], Background -> 
    RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Chapter"], ShowCellBracket -> False, 
       CellMargins -> {{20, 30}, {10, 45}}, 
       StyleKeyMapping -> {
        "Tab" -> "Subchapter", "Backspace" -> 
         "Title", $CellContext`KeyEvent[
          "Tab", $CellContext`Modifiers -> {$CellContext`Shift}] -> "Title"}, 
       CellGroupingRules -> {"SectionGrouping", 10}, PageBreakBelow -> False, 
       LineSpacing -> {1, 4}, LanguageCategory -> "NaturalLanguage", 
       CounterIncrements -> "Chapter", 
       CounterAssignments -> {{"Subchapter", 0}, {"Section", 0}, {
         "Equation", 0}, {"Figure", 0}, {"Subsubtitle", 0}, {"Item", 0}, {
         "Subitem", 0}, {"Subsubitem", 0}, {"ItemNumbered", 0}, {
         "SubitemNumbered", 0}, {"SubsubitemNumbered", 0}}, MenuSortingValue -> 
       1150, MenuCommandKey -> "2", FontFamily -> "Source Sans Pro", FontSize -> 
       34, FontTracking -> -0.5, FontColor -> 
       RGBColor[
        0.21176470588235294`, 0.21176470588235294`, 0.21176470588235294`]], 
      Cell[
       StyleData["Chapter", "Presentation"], 
       CellMargins -> {{67, Inherited}, {10, 15}}, LineSpacing -> {1, 16}, 
       FontSize -> 48], 
      Cell[
       StyleData["Chapter", "SlideShow"], 
       CellMargins -> {{
         0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.04 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 15}}, 
       LineSpacing -> {1, 2}, FontSize -> 48], 
      Cell[
       StyleData["Chapter", "Condensed"], CellMargins -> {{18, 10}, {5, 7}}, 
       FontSize -> 14], 
      Cell[
       StyleData["Chapter", "Printout"], 
       CellMargins -> {{10, Inherited}, {10, 15}}], 
      Cell[
       StyleData["Chapter", "PrintoutGray"], 
       CellMargins -> {{10, Inherited}, {10, 15}}]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Section"], CellFrame -> False, ShowCellBracket -> True, 
       CellMargins -> {{20, 30}, {10, 25}}, Evaluatable -> False, 
       CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> False, 
       CellChangeTimes -> {3.716825484342502*^9}, Hyphenation -> False, 
       CounterIncrements -> "Section", 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "ItemNumbered", 0}}, AspectRatioFixed -> True, FontFamily -> 
       "Source Sans Pro", FontSize -> 28, FontTracking -> -0.5, FontColor -> 
       RGBColor[0.71375, 0.20785, 0.17255]], 
      Cell[
       StyleData["Section", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Section", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Section", "Printout", StyleDefinitions -> None]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsection"], ShowCellBracket -> False, 
       CellMargins -> {{20, 30}, {6, 12}}, 
       CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> False, 
       Hyphenation -> False, LineSpacing -> {1, 1}, CounterIncrements -> 
       "Subsection", 
       CounterAssignments -> {{"Subsubsection", 0}, {"ItemNumbered", 0}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 23, FontTracking -> -0.5, 
       FontColor -> RGBColor[0.71375, 0.20785, 0.17255]], 
      Cell[
       StyleData["Subsection", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsection", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsection", "Printout", StyleDefinitions -> None]]}, 
     Closed]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subsubsection"], ShowCellBracket -> False, 
       CellMargins -> {{21, 21}, {2, 8}}, 
       CellGroupingRules -> {"SectionGrouping", 60}, PageBreakBelow -> False, 
       Hyphenation -> False, LineSpacing -> {1, 1}, CounterIncrements -> 
       "Subsubsection", CounterAssignments -> {{"ItemNumbered", 0}}, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontTracking -> -0.5, 
       FontColor -> RGBColor[0.9254901960784314, 0.49019607843137253`, 0.2]], 
      Cell[
       StyleData["Subsubsection", "Presentation", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsubsection", "SlideShow", StyleDefinitions -> None]], 
      Cell[
       StyleData["Subsubsection", "Printout", StyleDefinitions -> None]]}, 
     Closed]], 
   Cell[
    StyleData["FurtherExplorationSection"], CellFrame -> {{0, 0}, {0, 0.5}}, 
    ShowCellBracket -> False, CellMargins -> {{20, 30}, {4, 24}}, 
    CellGroupingRules -> {"SectionGrouping", 30}, 
    CellFrameMargins -> {{0, 0}, {0, 22}}, CellFrameColor -> GrayLevel[0.8], 
    DefaultNewCellStyle -> "FurtherExploration", FontFamily -> 
    "Source Sans Pro", FontSize -> 18, 
    FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> 
    RGBColor[0.2784313725490196, 0.2784313725490196, 0.2784313725490196]], 
   Cell[
    StyleData["FurtherExploration", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{20, 10}, {2, 4}}, 
    ReturnCreatesNewCell -> True, FontFamily -> "Source Sans Pro", FontSize -> 
    16, FontColor -> RGBColor[0.71375, 0.20785, 0.17255]], 
   Cell[
    StyleData["AuthorshipSection"], ShowCellBracket -> False, 
    CellMargins -> {{20, Inherited}, {4, 22}}, 
    CellGroupingRules -> {"SectionGrouping", 30}, DefaultNewCellStyle -> 
    "FurtherExploration", FontFamily -> "Source Sans Pro", FontSize -> 18, 
    FontVariations -> {"CapsType" -> "AllCaps"}, FontColor -> 
    RGBColor[0.2784313725490196, 0.2784313725490196, 0.2784313725490196]], 
   Cell[
    StyleData["Authorship", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{20, 10}, {2, 4}}, 
    ReturnCreatesNewCell -> True, FontFamily -> "Source Sans Pro", FontSize -> 
    16, FontColor -> 
    RGBColor[0.4392156862745098, 0.4392156862745098, 0.4392156862745098]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Text"], ShowCellBracket -> True, 
          CellMargins -> {{20, 10}, {6, 8}}, ReturnCreatesNewCell -> True, 
          DefaultNewCellStyle -> "Direction", FontSize -> 
          15, $CellContext`DefaultReturnCreatedCellStyle -> "Direction"], 
         Cell[
          StyleData["Text", "Presentation", StyleDefinitions -> None]], 
         Cell[
          StyleData["Text", "SlideShow", StyleDefinitions -> None]], 
         Cell[
          StyleData["Text", "Printout", StyleDefinitions -> None], 
          TextJustification -> 1.]}, Open]], 
      Cell[
       StyleData["CodeText", StyleDefinitions -> StyleData["Text"]], 
       CellMargins -> {{23, 10}, {3, 8}}, CellFrameLabelMargins -> 4, 
       MenuSortingValue -> 10000, MenuCommandKey -> "8", FontSize -> 15, 
       FontWeight -> "Plain", FontColor -> 
       GrayLevel[0.45], $CellContext`DefaultReturnCreatedCellStyle -> 
       "Input"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
      "Styles for Input, Output and Graphics", "Section", 
       CellChangeTimes -> {3.7168930720372066`*^9}], 
      Cell[
       StyleData["Input"], CellMargins -> {{82, 10}, {5, 6}}, 
       StyleKeyMapping -> {"=" -> "WolframAlphaShort", "*" -> "Item"}, 
       AutoNumberFormatting -> False, FontSize -> 13], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], CellMargins -> {{82, 10}, {7, 7}}, FontSize -> 
          13], 
         Cell[
          StyleData["InputOnly", "Presentation"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["InputOnly", "Condensed"], 
          CellMargins -> {{50, 10}, {2, 3}}], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}], 
         Cell[
          StyleData["InputOnly", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Code"]], 
         Cell[
          StyleData["Code", "Presentation"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["Code", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {8, 15}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData["Code", "Condensed"], CellMargins -> {{50, 10}, {2, 3}}], 
         Cell[
          StyleData["Code", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}], 
         Cell[
          StyleData["Code", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Output"], CellMargins -> {{82, 10}, {10, 5}}, FontSize -> 
          13], 
         Cell[
          StyleData["Output", "Presentation"], 
          CellMargins -> {{100, 10}, {15, 8}}], 
         Cell[
          StyleData["Output", "SlideShow"], 
          CellMargins -> {{
            0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.01 
             FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {15, 8}}, 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 20], 
         Cell[
          StyleData["Output", "Condensed"], 
          CellMargins -> {{50, Inherited}, {3, 2}}], 
         Cell[
          StyleData["Output", "Printout"], 
          CellMargins -> {{49, Inherited}, {9, 3}}], 
         Cell[
          StyleData["Output", "PrintoutGray"], 
          CellMargins -> {{49, Inherited}, {9, 3}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["PlacedGraphics"], CellFrame -> False, ShowCellBracket -> 
          False, CellMargins -> {{82, 21}, {8, 10}}, CellGroupingRules -> 
          "GraphicsGrouping", CellHorizontalScrolling -> True, ShowCellLabel -> 
          False, TextAlignment -> Left, LineSpacing -> {1, 1}, 
          InsetBoxOptions -> {
           BaseStyle -> {CellFrame -> None, Background -> None}}], 
         Cell[
          StyleData[
          "PlacedGraphics", "Presentation", StyleDefinitions -> None]], 
         Cell[
          StyleData["PlacedGraphics", "SlideShow", StyleDefinitions -> None]], 
         Cell[
          StyleData["PlacedGraphics", "Printout", StyleDefinitions -> None]]},
         Closed]], 
      Cell[
       StyleData["CellLabel"], LineSpacing -> {1, 1}, AutoNumberFormatting -> 
       False, FontSize -> 9, FontSlant -> "Oblique"]}, Open]]}, Visible -> 
  False, FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "FinancialData"->{
  Cell[11393, 213, 3072, 68, 167, "Code",ExpressionUUID->"47b74f5c-70b9-4926-a06e-4c38e3cd61b9",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}],
  Cell[14468, 283, 2827, 62, 129, "Code",ExpressionUUID->"453d869b-e594-4e1b-8ada-1ffa29d72020",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}]},
 "Return"->{
  Cell[11393, 213, 3072, 68, 167, "Code",ExpressionUUID->"47b74f5c-70b9-4926-a06e-4c38e3cd61b9",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}],
  Cell[14468, 283, 2827, 62, 129, "Code",ExpressionUUID->"453d869b-e594-4e1b-8ada-1ffa29d72020",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}]},
 "Value"->{
  Cell[11393, 213, 3072, 68, 167, "Code",ExpressionUUID->"47b74f5c-70b9-4926-a06e-4c38e3cd61b9",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}],
  Cell[14468, 283, 2827, 62, 129, "Code",ExpressionUUID->"453d869b-e594-4e1b-8ada-1ffa29d72020",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}]},
 "Today"->{
  Cell[11393, 213, 3072, 68, 167, "Code",ExpressionUUID->"47b74f5c-70b9-4926-a06e-4c38e3cd61b9",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}],
  Cell[14468, 283, 2827, 62, 129, "Code",ExpressionUUID->"453d869b-e594-4e1b-8ada-1ffa29d72020",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}]},
 "BusinessDay"->{
  Cell[11393, 213, 3072, 68, 167, "Code",ExpressionUUID->"47b74f5c-70b9-4926-a06e-4c38e3cd61b9",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}],
  Cell[14468, 283, 2827, 62, 129, "Code",ExpressionUUID->"453d869b-e594-4e1b-8ada-1ffa29d72020",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}]},
 "HolidayCalendar"->{
  Cell[11393, 213, 3072, 68, 167, "Code",ExpressionUUID->"47b74f5c-70b9-4926-a06e-4c38e3cd61b9",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}],
  Cell[14468, 283, 2827, 62, 129, "Code",ExpressionUUID->"453d869b-e594-4e1b-8ada-1ffa29d72020",
   CellGroupingRules->{"GroupTogetherGrouping", 10000.},
   CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"FinancialData", 321110, 6032},
 {"Return", 321622, 6039},
 {"Value", 322133, 6046},
 {"Today", 322644, 6053},
 {"BusinessDay", 323161, 6060},
 {"HolidayCalendar", 323682, 6067}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 493, 7, 141, "Title",ExpressionUUID->"755e0098-9782-4df5-8299-7f54266c54d6"],
Cell[1076, 31, 595, 10, 47, "Abstract",ExpressionUUID->"db4efd27-b72d-4835-a486-b18956bba0cb"],
Cell[1674, 43, 627, 9, 44, "AuthorInfo",ExpressionUUID->"59a63784-4e95-46b9-9a1d-2c013f47161b"],
Cell[2304, 54, 71, 0, 34, "Text",ExpressionUUID->"85271f44-5b04-421c-bf31-0395fab10c35"],
Cell[2378, 56, 560, 9, 34, "Text",ExpressionUUID->"99ddfba3-f2e4-48aa-a886-7472bbc581ac"],
Cell[2941, 67, 1576, 24, 57, "Text",ExpressionUUID->"2149a7f0-68d3-4a35-a4b2-2e9888a4f184"],
Cell[4520, 93, 1689, 25, 57, "Text",ExpressionUUID->"3b1b8ed3-3849-4d32-afec-102954aa6b6c"],
Cell[6212, 120, 1546, 23, 80, "Text",ExpressionUUID->"ba3b571d-1b30-4366-aa69-f73405de460f"],
Cell[CellGroupData[{
Cell[7783, 147, 658, 10, 71, "Section",ExpressionUUID->"35feb7e4-4e93-4e64-abc0-7b0b86e8128f"],
Cell[8444, 159, 1856, 28, 57, "Text",ExpressionUUID->"54979bee-8014-437f-b843-317ed34294a5"],
Cell[10303, 189, 831, 14, 57, "Text",ExpressionUUID->"38015270-5af6-4978-ab8d-62350f1c5c1b"],
Cell[CellGroupData[{
Cell[11159, 207, 231, 4, 28, "Input",ExpressionUUID->"ba887418-cd59-4dbb-b847-8ebf9010bc2c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[11393, 213, 3072, 68, 167, "Code",ExpressionUUID->"47b74f5c-70b9-4926-a06e-4c38e3cd61b9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}],
Cell[14468, 283, 2827, 62, 129, "Code",ExpressionUUID->"453d869b-e594-4e1b-8ada-1ffa29d72020",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellTags->{"FinancialData", "Return", "Value", "Today", "BusinessDay", "HolidayCalendar"}],
Cell[17298, 347, 861, 19, 110, "Code",ExpressionUUID->"e64a13bd-71ec-40a0-8650-b56319e85ac2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[18174, 369, 64382, 1133, 371, "Output",ExpressionUUID->"fd959aba-e418-4a93-8743-2fa04c7a71fd"],
Cell[82559, 1504, 152, 3, 28, "Input",ExpressionUUID->"9ebb457c-c836-4a87-ae50-10e62fbdef51"],
Cell[82714, 1509, 229, 4, 28, "Input",ExpressionUUID->"74161d28-06c3-4e60-8243-59ff9c8cb1aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[82946, 1515, 1066, 17, 57, "Text",ExpressionUUID->"d360ab0c-d8bf-4a75-95c1-aee4d56f856b"],
Cell[CellGroupData[{
Cell[84037, 1536, 257, 5, 28, "Input",ExpressionUUID->"b9022b2f-ca60-4e70-ac1e-031812a7e0ae",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[84297, 1543, 2118, 45, 262, "Code",ExpressionUUID->"c6ca937a-716d-4fc7-ac00-17ab40e556aa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[86418, 1590, 1372, 34, 148, "Code",ExpressionUUID->"44ab4beb-129a-46f4-9716-10b97c452a08",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[87805, 1627, 1706, 47, 75, "Output",ExpressionUUID->"81008e34-ad95-417b-a430-a809db97f9fc"],
Cell[CellGroupData[{
Cell[89536, 1678, 263, 5, 28, "Input",ExpressionUUID->"d68c889a-85ee-45fa-99ff-832055ce254e",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[89802, 1685, 2071, 41, 129, "Code",ExpressionUUID->"581f5501-71ac-4bcf-a3f4-277891b27335",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[91888, 1729, 20237, 237, 386, "Output",ExpressionUUID->"4f1eaecd-8f60-485f-9830-6d85931e5ca5"],
Cell[112128, 1968, 944, 16, 57, "Text",ExpressionUUID->"c7cddf68-815f-4e19-a3bf-eb80cd27a8db",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[CellGroupData[{
Cell[113097, 1988, 201, 4, 20, "Direction",ExpressionUUID->"bafa17cf-af79-4a61-a7a8-2b0b73d2cf3b",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[113301, 1994, 5322, 122, 368, "Code",ExpressionUUID->"42625d6d-028e-4add-a788-df686714b0a7",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[118638, 2119, 41747, 704, 475, "Output",ExpressionUUID->"1e695434-60ab-48a4-8542-9841fd37dc8e"],
Cell[CellGroupData[{
Cell[160410, 2827, 458, 13, 28, "Subsubsubsubsection",ExpressionUUID->"9c305965-c7c5-430e-a982-26fb531e8af6"],
Cell[160871, 2842, 1297, 20, 57, "Text",ExpressionUUID->"057d9006-8d86-47da-b6f7-7ee88dd14db0"],
Cell[CellGroupData[{
Cell[162193, 2866, 259, 5, 28, "Input",ExpressionUUID->"4c8bbfc3-243d-4465-9405-cd7bf5bb9a82",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[162455, 2873, 6076, 145, 495, "Code",ExpressionUUID->"9d6f57d4-cce9-4b07-8793-01d5fb0c7369",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[168534, 3020, 655, 14, 129, "Code",ExpressionUUID->"381ee8a0-6901-4063-8f35-783b489b500c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[169204, 3037, 81338, 1370, 487, "Output",ExpressionUUID->"958aa3c3-f7c7-43c1-bdc6-00cfcf358555"],
Cell[250545, 4409, 1584, 24, 57, "Text",ExpressionUUID->"b51f7a5e-47af-4ba6-a2cb-9658a9b7407b"],
Cell[CellGroupData[{
Cell[252154, 4437, 231, 4, 28, "Input",ExpressionUUID->"95a04a3f-705f-47c3-a3ec-b384e28d921d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[252388, 4443, 1220, 27, 186, "Code",ExpressionUUID->"5c06fbc7-977e-4b67-8040-d9054d10bc90",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[253623, 4473, 257, 5, 24, "Print",ExpressionUUID->"242f3e89-386d-4602-ab52-cc5d3dacd47d"],
Cell[253883, 4480, 1779, 41, 100, "Output",ExpressionUUID->"82a9a5b9-bf95-4143-9c33-58cefde35fd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255699, 4526, 447, 12, 28, "Subsubsubsubsection",ExpressionUUID->"76ea0370-905f-4b74-a30e-2141d5fbc127"],
Cell[CellGroupData[{
Cell[256171, 4542, 231, 4, 28, "Input",ExpressionUUID->"dffd1664-5ec0-4be7-801f-a945ed78a165",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[256405, 4548, 1277, 30, 186, "Code",ExpressionUUID->"e44ecc53-63e3-4a7d-9b80-dd3e32b66ce4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[257697, 4581, 263, 5, 24, "Print",ExpressionUUID->"5016d618-d18c-4cc6-ac7b-39b3097df972"],
Cell[257963, 4588, 1927, 42, 108, "Output",ExpressionUUID->"81756118-2153-4bf0-87b5-bb11d1047016"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259927, 4635, 447, 12, 28, "Subsubsubsubsection",ExpressionUUID->"8dcebd82-7af7-4314-9ff2-ce82a7454f16"],
Cell[260377, 4649, 1441, 22, 57, "Text",ExpressionUUID->"af726f6d-1500-47ad-8022-e1da8a4d3de1"],
Cell[261821, 4673, 1359, 21, 34, "Text",ExpressionUUID->"57f44ffc-d75f-44a0-b34a-46d52db0688b"],
Cell[CellGroupData[{
Cell[263205, 4698, 233, 4, 28, "Input",ExpressionUUID->"96da9811-5e1e-4c25-9f1e-6c9e896d6433",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[263441, 4704, 3469, 88, 300, "Code",ExpressionUUID->"c8978c55-5bff-40f3-b92f-8d29a8680944",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[266925, 4795, 402, 7, 24, "Print",ExpressionUUID->"36ff6a2e-7bc5-4b6a-943f-6ad579532614"],
Cell[267330, 4804, 549, 12, 32, "Output",ExpressionUUID->"2c304967-87bb-4fd7-ada2-7b5b43d6b9d5"],
Cell[267882, 4818, 408, 7, 24, "Print",ExpressionUUID->"5aa3653c-9b14-4d79-9bea-3b174d903344"],
Cell[268293, 4827, 551, 12, 32, "Output",ExpressionUUID->"294e47dc-f545-4a1f-acc0-dd4b5b5cf033"],
Cell[268847, 4841, 235, 4, 28, "Input",ExpressionUUID->"5ca50146-50b8-40c3-8f7b-af94fbee77dc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[269085, 4847, 1542, 23, 57, "Text",ExpressionUUID->"e8db9db7-39df-4f19-a170-76aa6352f689"],
Cell[CellGroupData[{
Cell[270652, 4874, 225, 4, 20, "Direction",ExpressionUUID->"81d81797-211e-4a79-b062-3921f8feeff6",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[270880, 4880, 1000, 26, 148, "Code",ExpressionUUID->"bb98bbe6-7cb8-45f6-aa37-4d9c1afe726c",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[271895, 4909, 437, 8, 24, "Print",ExpressionUUID->"9372fb8d-7c7c-469f-aa69-ebb1ba1a203e"],
Cell[272335, 4919, 6947, 139, 117, "Output",ExpressionUUID->"1d98bfe0-72b4-479b-817a-e55d22472097"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[279331, 5064, 735, 13, 71, "Section",ExpressionUUID->"d46f6bcb-8ad3-420b-853c-4d55cfbaed06"],
Cell[280069, 5079, 1957, 35, 57, "Text",ExpressionUUID->"c7e254d0-ea50-4888-8c9d-4607ad2cab1b"],
Cell[282029, 5116, 232, 4, 28, "Input",ExpressionUUID->"9968bd1d-32f8-4ec7-b536-97d68b681773",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[282264, 5122, 1325, 20, 34, "Text",ExpressionUUID->"5f62df60-93bd-44c3-a9e9-47ef9f03ca8d"],
Cell[CellGroupData[{
Cell[283614, 5146, 233, 4, 28, "Input",ExpressionUUID->"1c178045-a84f-44ec-8b4d-b6e24fe3d93e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[283850, 5152, 3257, 81, 300, "Code",ExpressionUUID->"7d65b09d-2198-4691-92c5-db750b1d6097",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Closed]],
Cell[287122, 5236, 282, 5, 24, "Print",ExpressionUUID->"c1365346-186b-4af4-920a-3369c7e56ad0"],
Cell[287407, 5243, 411, 8, 32, "Output",ExpressionUUID->"067a4ebb-de45-4d7e-a81a-8ed91305acf5"],
Cell[287821, 5253, 287, 5, 24, "Print",ExpressionUUID->"4af85e9e-2218-443b-96f6-475660534767"],
Cell[288111, 5260, 406, 8, 35, "Output",ExpressionUUID->"6f65b12f-930c-4176-91aa-808cc20fc98e"],
Cell[288520, 5270, 235, 4, 28, "Input",ExpressionUUID->"bfb4ca5a-74a8-4c8d-a3c6-72c821e3ad01",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[288758, 5276, 1437, 21, 34, "Text",ExpressionUUID->"d77a7bf8-10e6-4f01-a05f-8878dc55f9ed"],
Cell[CellGroupData[{
Cell[290220, 5301, 225, 4, 20, "Direction",ExpressionUUID->"be345314-f5c9-43a6-8970-3eb0b49cd3dd",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}],
Cell[290448, 5307, 900, 25, 148, "Code",ExpressionUUID->"9e03003b-8409-41f6-9076-08563168af62",
 CellGroupingRules->{"GroupTogetherGrouping", 10001.}]
}, Closed]],
Cell[291363, 5335, 366, 7, 24, "Print",ExpressionUUID->"120def1b-443b-4463-b65e-31ab981ba055"],
Cell[291732, 5344, 6871, 138, 121, "Output",ExpressionUUID->"12a10ded-1a48-4c24-a31b-13a8730b0cd7"],
Cell[298606, 5484, 256, 5, 28, "Input",ExpressionUUID->"ce4d3df5-144c-4c61-835b-da0d943df0b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[298865, 5491, 171, 3, 50, "Input",ExpressionUUID->"b109d629-5a23-45bf-af47-024417126df6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299073, 5499, 262, 4, 71, "Section",ExpressionUUID->"9da19663-7179-45c9-8160-ad35832309c2"],
Cell[299338, 5505, 988, 15, 80, "Text",ExpressionUUID->"45c45f6e-321c-4ce7-9657-950c1134d308"],
Cell[300329, 5522, 5959, 181, 137, "Text",ExpressionUUID->"a1e4a0b9-cf40-46dd-ae78-25c75fc6b675"],
Cell[306291, 5705, 446, 7, 34, "Text",ExpressionUUID->"4d32c10b-e1dc-4f86-a323-f24c13fed1c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306774, 5717, 171, 3, 71, "Section",ExpressionUUID->"a78f6e4f-dbdf-4763-a44f-16569b36e665"],
Cell[306948, 5722, 266, 4, 34, "Text",ExpressionUUID->"44146aed-2d19-4c66-bfba-1e67f1c1dfb3"],
Cell[307217, 5728, 241, 4, 34, "Text",ExpressionUUID->"10be235a-7490-451b-835d-54495bb21cd5"],
Cell[307461, 5734, 193, 4, 34, "Text",ExpressionUUID->"e35f44d6-9d45-4e3a-b48b-e58692b1a178"]
}, Open  ]]
}, Open  ]]
}
]
*)

